%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 494.000000 86.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.4 (Build 21F79) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 494 86
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 494 86
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Apple-Chancery
%!FontType1-1.0: Apple-Chancery 1.0000.0.0000
14 dict begin
/FontName /Apple-Chancery def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /R put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2224 1 index div -952 2 index div 3380 3 index div 2289 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 2 dict dup begin
/.notdef 0 def
/R 1 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-2224 -952 3380 2289} readonly def
/UniqueID 4452412 def
currentdict end
currentfile eexec

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/Apple-Chancery cguidfix
/F1.1/Apple-Chancery renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /a put
dup 34 /r put
dup 35 /t put
dup 36 /i put
dup 37 /s put
dup 38 /p put
dup 39 /n put
dup 40 /g put
dup 41 /period put
dup 42 /d put
dup 43 /e put
dup 44 /h put
dup 45 /space put
dup 46 /greater put
dup 47 /one put
dup 48 /eight put
dup 49 /zero put
dup 50 /l put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<


69003A0079003A0089003A0099003A00A9003A00B9003A00C9003A000D5DB80021DCBA0025000A0028111239B80045DC00BA003F001C00032BB8003F10BA002D000500032BB8002D10BA000D003500032BB8000D10BA00140035000D111239BA00250035000D111239303113343E0233321E0215140623222627141617150E0115141E0233323E0235342627353E0135342E0223220E0213343633321E0215140E0223222E02AC111E2715212917083C2D2B408134333F452D4B5F33315E4A2D443F333318375A412B54432A714834192B211312212B1A192E211401FE1824180D141E210E2D2F2F3A344E0E020F5A43395236191B365238425B0E02114E341A413928183048FE9A3639101E29191A2C1F11111F2C0000000001002EFFF9022A02020006001500B800042FB800012FBA0006000100041112393031371525352515052E01FCFE04016F6B72C976CA739200020020FFF302180213002B0040002BB800142B303141030030000800015D41030037002300015D41030037004000015D0041030036003B00015D133E0333321E021511141617232E01270E0123222E0235343E0627342E0223220607170E03070E0315141E0233323E023530032C44552B2750422A080A90040501225C302540301B1F313F403E301C010F1921132A3004BA091B1F2211101F170E0E1820112A2E16050166324228110B20392FFEF32340100C190D231C12263A282C3922110A060C1716171B0F05242A690809060403030A111A14131A0F061C27280C000000020020FFF3022E02CA0013002A00AFB8002B2FBA0016002A00032BB8001610B8002A10B80000D0B8002B10B80022D0B800222FB8000ADC411B0006000A0016000A0026000A0036000A0046000A0056000A0066000A0076000A0086000A0096000A00A6000A00B6000A00C6000A000D5D410500D5000A00E5000A00025DB8002A10B80018D0B800182FB8002A10B8001AD0B8001A2F00B800172FBA0005002700032BB8000510BA001D000F00032BB8001D10BA001A000F001D111239303101140E0223222E0235343E0233321E02171533112311232E0123220E0215141E023332363701A50C1C2F23212F1F0E0D1D3023232E1D0C02878E0218532E3956391D1D39583A3351190104203C2F1C1D2F3C1E203B2E1C1C2D3BE24202CAFEFC26272D4A613436644D2D252A000002001DFFF30224021300080022003FBA0009001400032BB8000910B80001D000BA0020001900032BB8002010BA000F000600032BB8000F10BA0001000900032BB8000110B8001910B8001DDC303101233E033332160721362E0223220E0215141E0233323637230E012322260192E7010B1B2D223433DD0175041C3F62423B6146262544623D587C1E7D073E2B3C40013A0F26221738903C6E56332A49643A3C644827

001B0000111239BA0029000A0025111239303125222E0235343E0233321E0215140E0201113335331E0133323E0235342E02232206072335013B22301D0D0C1D2F23222F1E0D0C1D2FFED88E021A51303955391C1C3A583D30501A025D1C2D3C1F203C2E1D1D2F3C1F1F3C2D1C01A8FD46F526272C4A603437654C2E262A42000001003600000183021300150031BA0015000000032BB8001510B80002D0B800022F00B800012FBA000E000800032BB8000E10BA00140008000E111239303113113335343E0233321617352623220E02072335368E0E2136270D1C0A110E1B322C220A020205FDFBE9233C2D1A03028405101D29186000000001001DFFF301FC02130039006DBA0000000100032BBA001E001D00032BB8001E10B8001D10B8000BDCBA002800010000111239B800282FB80015DCB8001D10B80030D0B800302FB8001E10B8003BDC00BA0035000600032BB8003510BA0023001A00032BB8002310B8000610B80000DCB8002310B8001DDC303137231E0333323E0235342E02272E0335343E0233321617332E0323220E0215141E02171E0115140E0223222E02A487022B43562D2C5542291C2E3B1F1E3A2D1C10171C0C2638038704293E4F2A2A5040271C2E3B1F4C55121B210F15271E13A834452A12112A45332431211407070C0F181310130A031D29303F26100F254032222F1F130710202013190F070A1521000000010006FFFB015202A000190053BA0001000200032BB8000110B8000210B80006D0B8000110B80016D000B800012FBA0013000C00032BB8001310BA0004000500032BB8000410B80000D0B8000C10B8000FD0B8000F2FB8000510B80017D030311335231523153311141E0233323637350E0123222635113335EA8E56561A2D3B21152C120A160C24186802059B9B5FFECF27301A0902036E0202182401005F0001000000010000C1F9E5345F0F3CF5011903E800000000B643F84C00000000DC4364CBFC06FE1F059D04750001000900020000000000000001000003CFFF27001D05DCFC06FE77059D00010000000000000000000000000000001301F40011011600000116003C022C0015022C004A022C000E0258002E023E002002630020023E001D02630026025100360102003A0102003A0251003602630036018500360219001D01600006000000160016003200D600FE020E022A029A033003860440048E04BC04D8052405C205FE068406D400010000001300960009006D0004000200000000001E00000200042800030001B800142B01BA0004001000162B01BF00110027001F001A0012000C0000001C2BBF0012002C0025001A0012000C0000001C2BBF00130024001F001A0012000C0000001C2B00BF000E0030002500200017000C0000001C2BBF000F0034002B00200017000C0000001C2BBF0010
002A0025001A0012000C0000001C2B00BA00140004001B2BB8000D20457D691844B8000A2B00BA00010002000C2B01BA00030002000C2B01BE00030028002000190012000B00122BBE00040024001D00170011000A00122B00BE00010033002A00210017000E00122BBE0002002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 19 dict dup begin
/.notdef 0 def
/space 1 def
/period 2 def
/zero 3 def
/one 4 def
/eight 5 def
/greater 6 def
/a 7 def
/d 8 def
/e 9 def
/g 10 def
/h 11 def
/i 12 def
/l 13 def
/n 14 def
/p 15 def
/r 16 def
/s 17 def
/t 18 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4124212 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28299D261F4869FB8C8225AD81CFC6544C589AC24D08455E7AC212C6E840F927EAA73831ECB1FA3002C92A19950D4E71B9862C6E045232CB826DB84FCB93E7D77FCEB1D17F9C6C490E956C7A27EFD5AAA8ED4101ED47F5EB3E8ABA00505AB3E003F27A569B6D1C2D5F8FF7C0303D2BA9736F764E8B78217D2022F8A9AA6BF2A491CC951E190190B5782D874C2E9E00F0C760359472CA4BBDE47CD7A0CC23FDA287461C0A96F6EE61DC2CB50A114448BC1CB97320C73438F01ED5E1C211B3AC4167F6B5DF21EE3B66CB44AAE3F792DAC0D111428835ED9548EAFC564DC0C44471F129425D63F5B23B09CFD424917B81BFEE1B922F3FC22633E911D52A9BDA66F92FC6B254B332C24AFACDD4225CE1180848475CF942D6817E0ECDA67FF114746505220D5CD4EF1570D12A256607AC119F402A228D72F63161A332755CCFBE52659326F424F170AF8766BFB9FF2091229622903F8B6EBAA52E129232038950FB0DA06B1807B737F5D7561A0B9701837C9FE028643E9C6A82CFB49E5AF6996030E56478237CEC0774371D04A20C617C7BA34C5AE92411E46167A13AC7B66D0B413D3AA57C2671A405DFFD017BA8C4E68833BA0BE7674F86F95A2482172DC163CA2F809C4093BE71FB2431A8342F44FD921D396BD0CF3C442BFE1A5F634ACCEFB61C187101FCE6B8B8ABA28EBE248D3645AE2DD4A9FF756F79BB20B7D4E6EB8C00BF5380744B114698889B680184053D2EDDF2EDD45BEDAFDA515E34F4474C1B32F3B465DA540
571326E121C6212D6906642D30A149708E0F60ADAA2B291CBC082579A3092AA65774DD184C92A6F186C6B854D001A122D18D72D03BEDFCF96848CB5DDEA8BE84E6A2EBA6C1F274FA5DDF6101D4AA1F8661BBD03C8AF7FA6E5110B4799E4E08FE57EA614D2347A143E8820F9A9E100DD1BC4B8BD9482A7E5203BCFB1A3C639EA43B0E324AD4371A0A3EFFAA3546B7719306AF27AF7B96038455DEF0125FEDE0B17BD3440FDEBA175400522B499FB586AD678B87B9561A8612C118506F3F0FF3E25C06C3FEA39BF0CB1D78135DEE1FADA9F2D7D4F4BEEAE5247A0BE9578C3D9F408A9C3A8B5F9EBF28BAAFBB5BC50E3D2AAFFD2109539438D8860ABBBD3BC16C47F320F76DFECD18BBB2F2365BE84806FE991DE61E3000894DE921754EFC96C6D7F355193A72D20696B14862DD16464C858B776BD7DFFE5759F3ACDA52FD12DA9651409C5AC0A3955723972949BB328B048AD9B98ACE241964FA2B64F112FB029F9A94F1C683A2D58C395DB1C21AD57D516D82B21FC547A1333870FACF012F548A809CB7169CFE5999BCEA3218867CE4283D092B3A3A1E9C52B97D3F18B2A04A0D99B411FB6424F4B0BB42FE89B2D5A8EBEEAA7A31B0DEEDE1AEEDE3E5A89EC2EBD2493DCA1B11029EDEF5A68B97D8F994D502DD5641BDA376FBC2CA9EE902176EA5CF0FE878C55D1926150C00E6B5C2E6C69071D46F26A620BB75A9321FB969C367617ED047F848C3D2823059DD44C05D9C021365840C458CE7AD5ADC6238F2BC8943EDA45E0FCE572393D8F9326A03EED51A4BF6930DB855F7595ACDC101D1EBA88FC9556C38F5F91F87FCFA6FCFB2A8F1179A73CAEC0A5F32D3EF1E0224C0161C2946F1BD039442A9728CC3AEF55CED3C8285EF51D33C4DB98D4210D54E041D1A2823B0C8F61460B9AEF7A446036DF291C1CB62939FDD09E8E901B1B7E67504D014FF529A1AB88ACF050F01A86201933CECCF79FCCC903E48AC70D3E87BE3B42B152F85D3BEC08711750C2DFCD625D702BEE50E41D2DF83634F876583DA67CC81A9119549C85B33406BA5C3D2C25E1D0344C6B4C0807BC2ED0058494D78DBD6FC524AD99225CA90F15EFA135D453AEE2AD982843724C0E81E67B87A8BF184FB38BC9EFBD048CC6644F7D210A1C05D5181AB3E54BE55599517CB9DACB355B543753D4D6D474770E505038000910E5546C053F1585FC854D49B645120745F808A5CC5E54374ABBF65D337B0AEA95C15A781E5CCE1F158DE35A3C7B7C15D055427BF51BAB33F5D3D6421BF346F1F4B3CFC087893DA00F8BF7CE8E6F96D2FFF528F041B81CC6BB92DA6C3C6F72E71186FB976D41892B28601F25637975317FFA2D9D622F7615FD4712FD9B791BF3BB19A2D603117B15A0DFB87E1277F48DD1AEBEB8FCCAEA8F35C644FED34998D86F413E09CAE47FF08A1093F19425A3E14E4D9FC

C899BD32CF4A3FC1BE994C39632645AF7C773213E36130501A296D078C597D25CE18D89C4DDF9BD52D1DBD4E1B6B7669F11555E7E93628E05F9E37905B10B5592DD846F4411698B1C1B673902B7A55AD57F2A83B999564F64A72752703DC13582E8BBA03DF0343EFFF88A1A714F090FC9C6E61620E0566C09013B3F4D13B4CA182C1F9AEDFFCA53DBB56C5FBAF5E2BD2E57A7AF7BF3A442C92BD6E8F9EBE0754C531B0916524095C155CD3E127BC0A800F25A2F69378DFC59E7C8C877305E886EEB2CF4505505ACAFF060C7E50814B0A7DE468FC876FE994703D771C2DFC101BA7BBB4DAA55D97CE3E8A2C6D96BFC87468BD33EAA3494855EB8C6DAA000136C647D6E9853DD03EA1B861EA784353F82949DA3181CC89666FEF5188A7929C1CDCA1C9F0517F19B235F7F6663D80EB97D3648B5274F352CCB5F0703256A614F4F618636A3EFC7746B30397899EC7E9DF22538F8CE535A995CB5082BA27D75230B7D8AE594FC3C4786E7119774A6769B06D8E8DEE3EBB0CB10BE66F31E0845AB6B79E1FB8CE685A0830C46422C8882776C74113B7DF4E485C2215AACEF8BB08FE033FBFA93CE082866E42718AF3E2B64B9718229558987791573DD432426DD35DACF3073D9CE1D76C0B842FDFA54A08A29EB71A5EA08B8BF2D010C8F5004005EFFA014C8D682D01D481B0DAC8D67AA3F19A909717234F17E69F68A854B4B33653142F28576A6A33F8C07EFD7BE7D70A329BB114F03C903E94344AD6EA862040D4166CF5BEEA75F5BDE64078C934B63D4CC3D11530FE152CD6EA55F5ED61440859302878F687A770072ADCE1EDB0BF14EDEE0219F42AC4B585566FB307E31BA8F6E3B2A9E9ED345A6395EAB40E9FAF315A8CC02C3A871477F84E3E5D0BD4AE2D44B909F0E7E16DADA811E9DD2394700A897C37FB9FDD919189C448F0150155E3820A70CEA088E327D75CAD8199C362D921C9BFD32095C31063F075F5D3769E0974AC1CC00F630E43C5F0905C61085B9E7EA6D2AD3FE8695070290E99074059CB9356D86E4E9E642DBC721247CF992293ABD491B68A211BAF2FD92954F7AA526BCAA2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: AppleSymbols
%!FontType1-1.0: AppleSymbols 1.0000.5.0000
14 dict begin
/FontName /AppleSymbols def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /uni2A1D put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -658 1 index div -743 2 index div 6283 3 index div 1966 5 -1 roll div]cvx def
/sfnts [<

00>] def
/CharStrings 2 dict dup begin
/.notdef 0 def
/uni2A1D 1 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-658 -743 6283 1966} readonly def
/UniqueID 4428897 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281F2788D084443B32230D2F4B074310C9E819A208550D46E710FA7A4DA80D33D990D692DAB06F5DBB774528FB94215D74918143B542B7D0275BBCDBC0DC4277830B737B5F64505EB6A48282614959EBA3AFD3E0B53AC779174C35A7235A4D4DD9AD8CB724876E1DCA72CA5AFDDB52FAE0B5DE80C2CE779F4A64FF61B1BC515F919C589143E37EAA223E15E902B3BF625B1CC795AB147BA380A32CBCDB7BD88518E58C3C266B14C975B955172A3B7E425DCF3FBC9CCF515D115EFC6EB305746EEA665C961D7C562D7231D19B54548A092D7825B092D747835BD810AC29D29081058419C5FBB55825ADDD5C917F297F351C29C675D9DAD1276F34678812A471FA2A2D8A0C7DAB8B6C341F0D45359CB0F00E8340B8C69E96F2327E9C7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/AppleSymbols cguidfix
/F3.1/AppleSymbols renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /uni03C3 put
dup 34 /pi put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000186670676D00000000000000B400000428676C796600000000000004DC000002D06865616400000000000007AC000000366868656100000000000007E400000024686D747800000000000008080000000C6C6F63610000000000000814000000086D617870000000000000081C0000002070726570000000000000083C0000004D14000014004B005A00000011FF3A000B0205000C02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800182C2046B00425465258238A592046206A6164B0042546

000000000000000301F40033026E001E023500240000004800A001680001000000030096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 3 dict dup begin
/.notdef 0 def
/pi 1 def
/uni03C3 2 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28024022816FF807CAF9CEF58EA120E680185C875EBD525A303749E6A753A535141AB823E5C1E11F750B6325899C8AB001F5FCC67CF05CB730EF760C9CFFADA99508794C30F976CDEF26FEA34519379127208E3B313A926C565B0D1CC1E98C820DAA3817335EF7D473FCF9B9312D028025C2722C35DDBEDDE3A07E1C69AC5909D7F2993F1B97734446D6C17D1827033A31980A21437EBDDB6955F683B347EFEAC00E648B5E0C02DC774155E006CCB80AAF745DA104D3C397F521FA10CFFED67043641A230185CD0259FBB3629807CB807A84285D7B066099D95971F348B4BFD751A6B14A73ABF3FA95DB90D38A1AD52FD4230688B497A9649BEC7B193E8A1CDB8255A78F1E10230C0B15A3860353BA6F8BA871CE398E002F00CEFFC3B199D46C66A21E4371CB9D80EEE8E0981052B4C59758B0B5807084991DBCD53DCB2577EB6617EA5C468D48E2762B9809F71B6509D5A1CB37E2A367F131671292944446BF4AFA59D17A30FAE4CBBB3B9C1919D0A8968361775B2963D83F91199E8CCD382F63474179AAC7861FDD98D80B0FBA000128D0AE0A3115CE0037DCF8493E9398A49FD3B4C765512C295BAD74A6D69F2DC4F48CC90A4DEA1A1B47F4B650601A1F711CA04B5AB6AF06EA0945FFEAFCD148238D62E14556AE2B8E0FE94F007549B31FB425EB86D7256EBEF43334AD005F49068D2B4BD46942BB122D7BD476F735B7CC6F2BA4ABB78F502A0F0218DF3EBD1854529AE15749BC77DBB64ED6EDB7F39D258D20E37EF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F4.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
q
0 0 494 86 rc
23.691999 85.5 m
115.808 85.5 l
115.808 51 l
23.691999 51 l
h
23.691999 85.5 m
f
0.17647 0.21569 0.23529001 sc
1 0 0 -1 -1398 1359 cm
/F1.1[ 18 0 0 -18 0 0]sf
1448.356 1296.75 m
(!)s
/F2.1[ 10 0 0 -10 0 0]sf
1462.5239 1296.75 m
(!"#$%#)[ 5.740000 3.890000 3.520000 2.580000 5.370000 0.000000 ] xS
0.64705902 0.84313703 0.82352901 sc
CM
23.691999 36.25 m
115.808 36.25 l
115.808 0.5 l
23.691999 0.5 l
h
23.691999 36.25 m
f
0.17647 0.21569 0.23529001 sc
1 0 0 -1 -1398 1359 cm
/F1.1[ 18 0 0 -18 0 0]sf
1441.416 1346.625 m
(!)s
/F2.1[ 10 0 0 -10 0 0]sf
1455.584 1346.625 m
(&!$'#$'\()[ 6.110000 5.740000 2.580000 5.930000 3.520000 2.580000 5.930000 0.000000 ] xS
0.64705902 0.84313703 0.82352901 sc
CM
141.8457 58.840515 m
186.81645 58.840515 l
186.81645 24.340515 l
141.8457 24.340515 l
h
141.8457 58.840515 m
f
0.17647 0.21569 0.23529001 sc
1 0 0 -1 -1398 1359 cm
/F3.1[ 16 0 0 -16 0 0]sf
1556.835 1324.3235 m
(!)s
0.64705902 0.84313703 0.82352901 sc
CM
206.5 59.25 m
372.5 59.25 l
372.5 23.5 l
206.5 23.5 l
h
206.5 59.25 m
f
0.17647 0.21569 0.23529001 sc
1 0 0 -1 -1398 1359 cm
/F4.1[ 18 0 0 -18 0 0]sf
1638.295 1323.873 m
(!)s
/F2.1[ 10 0 0 -10 0 0]sf
1648.465 1323.873 m
(!"#$%#\)*+!#,-.-/011)[ 5.740000 3.890000 3.520000 2.580000 5.370000 3.520000 2.780000 6.110000 5.740000 5.740000 3.520000 5.930000 2.780000 6.000000 2.780000 5.560000 5.560000 5.560000 0.000000 ] xS
0.64705902 0.84313703 0.82352901 sc
CM
395.66217 58.625 m
467.26215 58.625 l
467.26215 24.125 l
395.66217 24.125 l
h
395.66217 58.625 m
f
0.17647 0.21569 0.23529001 sc
1 0 0 -1 -1398 1359 cm
/F4.1[ 16 0 0 -16 0 0]sf
1801.8162 1323.401 m
(")s
/F2.1[ 10 0 0 -10 0 0]sf
1811.7682 1323.401 m
(!"#$%#\)#$#2+)[ 5.740000 3.890000 3.520000 2.580000 5.370000 3.520000 2.780000 3.520000 2.580000 3.520000 2.580000 0.000000 ] xS
1 J
1 j
0.60000002 i
0.17647059 0.21568628 0.23529412 sc
1513.808 1290.75 m
1539.8457 1317.4094 l
S
1513.808 1340.625 m
1539.8457 1317.4094 l
S
1604.5 1317.625 m
1584.8164 1317.4094 l
S
1793.6621 1317.625 m
1770.5 1317.625 l
S
0.17647099 0.21568599 0.235294 sc
1865.2622 1317.625 m
1881.1 1317.625 l
S
0 i
CM
491.10001 41.375 m
483.10001 44.375 l
483.10001 38.375 l
h
491.10001 41.375 m
f
0 J
0 j
1 0 0 -1 -1398 1359 cm
1889.1 1317.625 m
1881.1 1314.625 l
1881.1 1320.625 l
h
1889.1 1317.625 m
S
1 J
1 j
0.60000002 i
1399 1290.75 m
1411.792 1290.75 l
S
0 i
CM
21.792 68.25 m
13.792 71.25 l
13.792 65.25 l
h
21.792 68.25 m
f
0 J
0 j
1 0 0 -1 -1398 1359 cm
1419.792 1290.75 m
1411.792 1287.75 l
1411.792 1293.75 l
h
1419.792 1290.75 m
S
1 J
1 j
0.60000002 i
1400 1340.625 m
1411.792 1340.625 l
S
0 i
CM
21.792 18.375 m
13.792 21.375 l
13.792 15.375 l
h
21.792 18.375 m
f
0 J
0 j
1 0 0 -1 -1398 1359 cm
1419.792 1340.625 m
1411.792 1337.625 l
1411.792 1343.625 l
h
1419.792 1340.625 m
S
ep
end
%%Trailer
%%EOF
