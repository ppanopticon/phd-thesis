%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 765.000000 318.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.4 (Build 21F79) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 765 318
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 765 318
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /I put
dup 34 /n put
dup 35 /d put
dup 36 /e put
dup 37 /x put
dup 38 /S put
dup 39 /c put
dup 40 /a put
dup 41 /space put
dup 42 /parenleft put
dup 43 /V put
dup 44 /A put
dup 45 /F put
dup 46 /parenright put
dup 47 /t put
dup 48 /h put
dup 49 /l put
dup 50 /P put
dup 51 /Q put
dup 52 /O put
dup 53 /r put
dup 54 /L put
dup 55 /i put
dup 56 /m put
dup 57 /C put
dup 58 /N put
dup 59 /E put
dup 60 /y put
dup 61 /u put
dup 62 /o put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<






012700450251004502E50045030A0026029B0045030A0026028900170276FFF9023E0020023E002602630020023E001D025100360102003A0102003A038A003A0251003602630026018500360160000602510036021900000207FFFB000000160016006200AE00DE014E018001AC01C801E8022802C80338037C0420044004B0051C05B206080656068406A00720076C080C0848089808E2090E094400010000001F00960009006D0004000200000000001E00000200042800030001B800142B01BA0004001000162B01BF00110027001F001A0012000C0000001C2BBF0012002C0025001A0012000C0000001C2BBF00130024001F001A0012000C0000001C2B00BF000E0030002500200017000C0000001C2BBF000F0034002B00200017000C0000001C2BBF0010002A0025001A0012000C0000001C2B00BA00140004001B2BB8000D20457D691844B8000A2B00BA00010002000C2B01BA00030002000C2B01BE00030028002000190012000B00122BBE00040024001D00170011000A00122B00BE00010033002A00210017000E00122BBE0002002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 31 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/A 4 def
/C 5 def
/E 6 def
/F 7 def
/I 8 def
/L 9 def
/N 10 def
/O 11 def
/P 12 def
/Q 13 def
/S 14 def
/V 15 def
/a 16 def
/c 17 def
/d 18 def
/e 19 def
/h 20 def
/i 21 def
/l 22 def
/m 23 def
/n 24 def
/o 25 def
/r 26 def
/t 27 def
/u 28 def
/x 29 def
/y 30 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4124212 def
currentdict end
currentfile eexec


6B1FFCB3EA76583488193DBDBA9360146D50D553BFB461FE816523D5654C5FCC51A72B563F9C752682AB2C86AB19A4DF90A417381A178BBA749A8CADE42359BEF1EC81DE1F2F0F221B4F265B1921B54B5147FFEFA4B66E3849729C7A49E9BD4FC91A432FD001148E0709788A11FA7B85AAD4EBD24226206306697CA040818FC3633F37B55FC30FF0C0023A7ABE74697F4CA70A52FA45044FDD08081968E8C5138ED6FD1C28B49FFA8F722FD8C28D33B7891A4ACB1259CD644155B19A3E38BE463698073C811C271FFC1BBA312DF8B9ADC012F5604F7B7FB919D41B5A77A7647DA85C1B0C815C5BBA5847D7A01C079A43411B2E9FA837E7EEAD76B72B9B424E575A43F8EA25889ADE768452EDABD772930E4FA1731BB490BE34413789B63DC476720F8462FA783FD0A5AFEE6D40495E925B7BCCD5DAFFC291766186B9BDF5F5F43688DCE626AEAA2A4CE763430ED131783A9CCE8E0C18ECC708CDD04E351FC16AEA0C17D2DB5E642436C598C57613FB986C4A40FB5BA03B8CEE2F7B551332B8C317F1EE05E16E3041C144DCA4229F718FD62E5CCC98158629EFA831A03A7A99552DB6001A429CA859FCB0ADF527C29B45314CC688807806C7B1813F0854E710CB47BD4B287DF876640894F950D314C4C537EFE3E59B6AA81AC667DEB6321E893720F7F4FE3184AC12FA1EDDCBFA60374C730619B2972F612647855E032E9490BEC907C48D9F30A197A363B14F92696F43E6E14CA3512E4F5A72092352ACE4665D1779393D99DE4D7C40DE693CB89797CD1FE0E15B581C74B6A191453B9953BE5548861D457E00A2FF6221FFD8DF4FD13569ED59AE2D69975319BF7A678FAB740ECB2A9E4A8374928EAA42BC237DAF50950C40AF4AC3D76EEEC39648FAE57D7382ED33023C65EA87167F3C2E35BE8F93360ABC5104B9AA8CD5FAB19D210CF5A49CAAB577F781DCB6E66C538CD50B88D14906D7BAC3E5708B7A430EA5EB1EE4BE705363D8DEA2E18C7310F22C19BDB1C450394D24314A755FD8F0C763E01A2D04A6EBB2817800B5803B6E819CD7159305A42DBB7BF4576421D80470F7186425EA439FD53D544E0D7952E1CA28321B51173B0A495170880C67145E768BC05D9F98263ABEDADBE4614CF0E6095CC9F8B2E7E8FE2B156C6CBA9A9CF0325B1B44AC01B5E00F16DBAF635286B73125B5753D1E0DC8EDAA6CF519D98926B69E53F493EAF4CDEE82F168319FE26986EFF24E2F8FC8A941B4A7AE9BAC649C7883E08C41E58FF8ABCC0C772AC670768578466B0D12057BA2426DE01B04DD0D2A70011E7F869576FC1C307A6E0F61F538D43328754A5720895D4CC77B3D79921EBF8D69623884C15C903653CCAD35CF6A116B25EFD30A337BF1569D1A7F361DC3D7D289714D4AF42A15A556F0DD4A9E26E8062C3789B2C46781E537CB607DE7863842E04BC4BA
6D115C28CAA895F416DC4510A689A667FE1476D620C363A9C003B866733F3A16D6BFAF6F4CD9624C99F6902CDEDB5E012111BC89B57826755ABFB552B463CA849FBF036E517B8D3F973C32F64D10C793482F7AC28D77ADBCE667E1D2664621D09E45FC3DDCDC9959DC4EA1AF949EDF345A8262056E202AF0FB20BCB8BC604144C63571CDA8500EB77FCD377232ABA16B5E2DE9D30AD41EFF892CD309C5986E79883D50A1B9C942E96A7C65E665A6E0345A3040F1A5C619FB6E1AD4D3BD8139BCA316925F49C4A4B11B3CA6B3727286B3F6CB4FE998AE7CCB580CA1EC1267752E82DC279345B1FA5461504E76C43492FEACF15529115D508B95703991CACF67348E2B2DF8F3CF650617DFDC2BDFECAA12416581614CE96F29504CDE81BAF471246F1F5B7F712BCCC076C3F3ED97B378246D368C87F42C01031082A2C8D03B907CC82333EB64E2D8A0B56244A7DBDBBC2F9A17677587D069C26D1E738A21706D615E3D26DBF6245E4B509AB4A318088472FA00B130432BA2E034BB0AC57D7F16C6C4693B86CEF0BBF0FBFF5BEE8A3E2502EA5966F894961EF3B641860DABF202FEC02832B2D7147405B7B3B8E07DC46E72ABE85D7A3452B0B25FAAE93FDF6F8E1AABD10ADFD556E3C258E95CE27262676D7646F5DEDC3F81A8A9C0A134BEC99C5BF4F1A57FAEEC1A11752DF0C56BE0B1DAC69ECD423103D980E6885690C470214318E26EDF72BF78651DC7BE4F766B00FA7BBEFCA59074D4C142B8281AEEBF1B018EDF1E42FFA261D98AFFA86B8CB73D85B5453FDF3BB02B7D829658ABE1541AB6DD7F51BB150CEA098728B37D1001DD8B2BD1DA93D923772ADAF9C8E40D137DD8605D9A9A2B9A60731A6A3E734C6F09D4D740EDB857D04006AB899F4844FED51A18AE5089BA74B96E5ED506AB300DF749D34A9BCEB4B66FED4BEA7638B5F3EBD2897469430E5AC9B30C4DB97B81816D13F73A0DA4476F7AF6470ED4109D85683CEB63E2B3CB8102D0C1355CC841B7D485ECD0209403DA2E85D365B2BDCDA351AD58F46DD08555FF293D4D19DEC1E67B44767E4B961F9AAECB30BA68DDDB827FE8CDBFC368C14702E40E2BE7CE8B82245330D07C16A546248BCEC10EEC53691D7C60D0598761E0C8CDE3F94DB79ADB3F24D9F27565352D02006ADA0A9DAF76EAB19BDFA41570E699D5BA0A23CD0302281EA68FC9F39D8DA1A0D4E63BA133AABFBD5A685716EF21DBF0190794D202C50C2D2EF283871FCAB6435C488D61444098923C6F5FB9A392D0F652F567CC9CBDF75460B788A35B855BCDBFF473862AC2F46B6FEAEE55D86A399C4DCCA3C04FA156ED6F92C6207A05D21B8FE0BFE87FE837488CBB826E76B4599DF1825C40C3C115ECD9C5EC0118073E11ED25FBA44470EBABF7251852FE964E248EF302D8313CF3D4C012C04F7A358BC05769EBE43A1883B2
7EC4E9155FFE0F565ABFF3031083B98E74AF99CC9D9C6AF4E975572FCECCFCB11D118ABF09B74AACB54DF4A2D40C65A8AEDFD1282BA1E817769287A1F18CD448EEB8F5F2C2D0A4254A5B567385F2E020E2FDB32065BC1D24BCE5497E3B57ED5B4D3B714F105A5C3CAD575C475D683D61ADA06D20ED205F3451873CB054047F51DB399D7F4BC24E298279FB3205265FBA234BA1A043E46FE15DEEC3649B581AB6371ADA433CBD0A0103FC9AB1CEE7BDE36E266B189EBD12A98085833686A3194A51960C26D05528C047586A15A800905CA06ED5456133FFCB1810710E05AC340AD92A1CACF520DB4915819CBCBAA8E281B9C208DBC9696D964BA1D5D85DBA90FCD4C6A02218632CD9B9F956F64E6B57228223191C49EC148C43139CD2C2FA8AA33A23795970B57C3CD701C45703B043A5BED4E5B5DD9D9CB2B7DE031A617DDFB826D93BEB4BC449DF67D36FC17A05FDD902CE8195801737A545BAED6213EC6E10F4C3CCB2784E9DF37B055C50C487BC8499BEAF8CC9A0F0E07A22A2D76B7B874C580813245E4E0359A491DDB60331E6D6F8DE79727EBC81BCA99E05B79511836F07732F9BD69449991E5A6641A4FD803A936A51D6E4F5DC38EE5D704DB0605C79E55DB505071892396598815AAB5FC6B72C5DE763157D7E1B4D38DA992B74A450FA37ABF87A77E6BDAC659C233DEB085F821F820621BEAF0D82E590C221B2E1D0E779172FEFB47B0F626956EA75E328F378587DC93A67BD04ABBC00429A09F43DAC56A994390279B567506985C91CF8BB967BE011083DC2A079AF4B5B2451036E707B77F9ECC126DA08E13F1269430278696C989860EE663DA7A377A7CEC0EC9AC343182228D1EDAD2B757D6AEA1AF554F67C31A4BC61F43B04D4CB22705AE49F12A5D1F509E6D7E4AE84DE6604FAEF36CA305C235578268D0C711CE021CCA2B8BF417BC727FE82C601C0030B20A92696D620F653ABAD7310D53C861CBF149545875186E230C92819AB3DDE42CD9BC7D6BC77FAEDAFFB296FC02AB308D9B03F0FC2F7A1B611AD140D65EB5FBEB5F070A4F11F00A18E93471EB33B94D0701E92E9319451FB902E635DE5192EAE8C968656297DF23AB38207DE413BADA639A9451DAECBF736FA42F2F88CDBD642CFB4F6CF68CEAB6061D165E2E03024F8A4A69361D250270BE467576660D9AB51DB881ECEA56D3E0578DDC82E9F182CC48D1D895DD2951160351F398E3BBB45471332F729911654871D8CD98981627464C5C4F8ED8DD0205933973E00
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F1.1/HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /L put
dup 34 /two put
dup 35 /comma put
dup 36 /space put
dup 37 /f put
dup 38 /e put
dup 39 /a put
dup 40 /t put
dup 41 /u put
dup 42 /r put
dup 43 /F put
dup 44 /l put
dup 45 /o put
dup 46 /V put
dup 47 /c put
dup 48 /parenleft put
dup 49 /nine put
dup 50 /six put
dup 51 /parenright put
dup 52 /i put
dup 53 /d put
dup 54 /A put
dup 55 /S put
dup 56 /C put
dup 57 /s put
dup 58 /equal put
dup 59 /zero put
dup 60 /k put
dup 61 /one put
dup 62 /n put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<







021900240128000C00DE00450207004500DE0045022C0040023E0024014D003D01F4001F013B0009022C0040000000480048009200DE010C01B801DE0266032603E003FE042E049C04C804E8057C059C06A6071807B6081E086A089408C608E0092809C809F60A9A0AEC0B3C00010000001F0096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 31 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/zero 5 def
/one 6 def
/two 7 def
/six 8 def
/nine 9 def
/equal 10 def
/A 11 def
/C 12 def
/F 13 def
/L 14 def
/S 15 def
/V 16 def
/a 17 def
/c 18 def
/d 19 def
/e 20 def
/f 21 def
/i 22 def
/k 23 def
/l 24 def
/n 25 def
/o 26 def
/r 27 def
/s 28 def
/t 29 def
/u 30 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB280353B1C5819C3A497CCA8A8D3CF7A0276FF808C0FA4CE75E005BD83D12CBF21C9CD96C4E8CBF78C00F559B725FD3B9813FD44A5EE63191F744C6DDA2485681558E9658432E3484EB3F29C1A78B9650F1DFD40E43A7EC9D912DB39017F74566F295C44EAC60C8390A7D0F2A3FB9080B3E29BBB90FBF1207AB57C5CE0CBDFD8D66559B6321EBE3CD887C0DB92335A488DB2B082C63C09F26DF5F94598C8F24BC336D76DC1490B94FB70DB2912D2D70BEC004E8BB986B72B405D5C5756C04C0207CB62D4B040B30F0C06FC25F98C454F35BAAA3B3CD8153CA91B19455A19926FC29DB4EF1B48E33A9E718A5C5846D785B02F5A33B3E0F1EF2C8F4C448320688ECDDD85A7AAAE3FD7AD16FF32C5BD6FF944805D4305BA46751B5D7F09EB53CDEA04589FDA1C9F081B3C8066391CD2028054D75AE8CCDC9C4F0A2AFFBA34336CA49F259691C702A19BD707EABFE678C1B9AB36682E4710E8DB1123368EBCA31AEE2EBD0B4B2DC71D520BA26CF79035FEFC3532642ED8B97F45A1DF803BF69AFD16E49CF93BF4FFB78D5388BFB00B5158241D6119350CF4B8E1226065176FB1AEE02638EEF884B6805BFA917FCD208774166307D168F040989C813782E2C12BEC84454765D727E0CE361FCF96527E98CFCAD2D086D4532211484E7BC0E65F3B285557869CC070EFB4FB2548E1D342C70DD4B2F62087906AB4A420663920E5B5718854305B5662AE4578264DC5360892F111A3025B7B3757834A364A945D80D15FC33F84AEDA93
4D7D85ECB559B005151191BAF45304613518ED74206258857303B0347B8FE4A563945C8E92BD16F7CE6495339083A06325B1E96B10C0C3E99B5A8E205A286E3E892A34EE1C04056848BA614A40D79F91AE1DBFA1C9DB33C9F66F4252E9F7BB1572DAF4733740407F8401A4AD757F8239EA5CB0A3E77917A90B33C1B4795CA437C179636D792250118B2EC5994B46F08C02F35EF86534D4475D1767369E78D69B5B463E5021D3427F48C8A2E344B05E46529A864B1D644F7736D3A36246B0F25AC6C71AA529E0F56177F388F0F5EDE90C8EDF79DCD06B208882A54B6A15582500D22077F960820F10960220E993163105572E549C8A245D5B1B46CA408DB71036BA5DF49D631498EECB35B6930175A43823993EDFFC2F6B67A22A65BE4AA5B3ECE70DE00DE578F3989BA82326AE92BC25418D59913B9852F557016F72FC3D11B0B2B1A3701C2922BEE59ECD5D37587B416F1B434F278876241CB0F2F7E56795854657FA695610449B6AC7457AD451CC14D8E70BD703A3C10519BC14C94ECA8F7648607FA7A2510FEB0348739B2F8D8DE1C73A164821377910FEBC7288841741BDC782FC6574A46D1E51C5B2A3C740E4F1D293C8A565F4D90A61A758AEF2FB64B8DA41F7161431241CBD5BC981AE9ECECA0F47E2D72178A1BC651A6EEC261468FDDC122ED4B93BBE4F5F78589FD928356528CF6FA39923B1D29417AA9F4372AAA86B028106DC4C79299A37470BBBFBCFEC1724DBA77E8CFA5B8935774A4FDB52F93F78A76066C72A67515590D9216EC1E8F4F72C10EAB55F4B6E50D1F12223A6D6407FA3F6BD28B8F5F99AF34A087E060D1CAFC2E2028AED0CD9484C839B01043A4E05A392B38337D41476CA57FC260ABC8017B02CE44446E30C251288CF4363060E96BEF6CF8AC8074BF6E6F65A9CFD6A859F568DE93ACBE7BC2D5652A1710A682370E023D9D67E9D581D4FBC9414B74D99AD094BEF18C263332626A71F0A73844A12F2278F692B832C277F4DF79177D68EBB0329B6B10D0EB1AE687F237EB9761F7A15CAE737EB6A6299EC1C5D19FCD28F67C389EC0B5D6661D09BAE300875FDB9DEE3E57E41A645AA663CA3D8264F5916AF1B274A02AC5ECFEEE262AFFDE54BCED313126413E3D16E599523CE2A1574F7D48D62F71540E745C71F098E8FA0E82E639AEB6324BB86C1D4856DC5E53F4F61A595191DA8BC46BED825496E53020E108B5B3B8AD38A51E4DA6370FCAA78AFF4BB636D211605B29B165DF1D6EF88FDD6E209A135B8856376DABD638EF0F38367D9960BAC89870CE2673492FBAF5F9F4DB5D4B5FA412F46AE38A04F7F88E463FC072DBD97D15D592B778D63149EBC01D95FB9F5915F6CFF5A25D1B41CD8C0575CF70558D7D7AC80F43724A0CDE6EA45BD9013C46702B5AF8DE49C8126F087A411F8992E2D1092A6DDB078B3B43E871C
84CE37A2DA548B0E13049223FED9019B7001F6010D887D851374C1C5BAF551145D063A001C92C28534AEE0C4809C24B1805BFFC03B74C9B56D5286D4E97344328158B23CF572851F314D0EC486E5BA0B97535D7C7797D1DB3550A685EA145527B34DA2188BA23534975B4E6F84A4964347ED83B9C5C8ACE1998A134F135D7D5F2D62726B71A8CFBCB10602F00D0D4ECCC153054E1A36DE6DAEDA7FC58C910BB122C71D8044033AE65B97F01ADBE731085B1DF919B862EB13A26A663B0BCC2632BE0179B62A08633951152604EC01F2A9550E4E4DA69743BF693F485AAB54EC4E0ADB930F91067D939D136F11FB5FE6BA262D2EED2ACBC2801FCE3A377C6956360719ED863F2E1FD3F498EB5B651EC005639503C7C0E84E220C3B8B45953AC1BCDAE040F34562F3C17B7387B4D32949C7A7162427C6A215F53EE5871D5961B319EE0769FF69BB2AFFB4582EF835E3A022BCDBB199F962A7E115C8202A086E8BC00D34FA3849C22C40984065D3C6ACC8AB74C0E5F336A540266E90B44B8390748EEC465894F218BC8B1C9351CBC9B4713C3BC466938747D7170E2DE717125DEE2B5CFC33A8336FB3774A3027A5A1DA7588F71C5D8E97CB7F6B62FCA4824B3603560A9B117BE26F9F5DD6AC0A18BEAE83007C18843319371EE46BCBDDFFE35300E5AD64B85A08292ABD6E0D0E2FEF56F7430C12EE973884EA9F9669B13155B368379A07B1D1A6E39C5010BD33FC1E6846945CEFE3700DF93DD642192763ACE79816A86B9797FE7701E2EB7A2FFCE5B7E4F7EAF908B5772129377A1924D6AE1B2730514E166BE96CA6B80F0CEB9BFEF32323DBBDF7812FB5EDC04C20BDC672CCFF055A2D2AAA878388685DDC2CB9A50EB65E99FD4B99861625C85219856B5847D9B2542F6D00B497DC8BCE7F49C53FFA318B8659F486416C8EAE2F46AB7B53F74FEE3C0C959BCB822D12C6664583BA52F7BDD2D1A0C1C9B880DDE2E9BE68E2EE0C6F3586524F646E5C4BFE91E972BD01CA1A92DE8AC2827E46F7D491EB8FD97687DBCFA4B803BA37F6FFEFC32A6C5756A2EC4C9B3B95257EC7BF753EC6B34D63596556B15335040F8B93A5D9173E041B416FFC7F3A720D691D0C7E6D5D8B368CD04955227E618A730DCF9B40119013B2251292AA462ABA87E99459CB38F3C05AF9C37BB34D2C75F80906EA830B591B126C8B8F5E1F3AD6572E563FC7B469224AFC96BAE45907E83F15850B8016159E9DBD186DF5B99304EC9966B38081F4298C5E8E1F9880EF4882FDF7A77E6333942458CC925B805CD701B5B1A44548227D55910618326C4DD7E3B1A37C34876F7C1E7908036B75CF45B98B21FAF153FD7F10D05FFA8277C30BC713FDB3ED42A89C53C9BE0A4038ECDE7CE085FC729CF1C441BFC34ED8B08F015497C2AF46321BDE6644597660207CE704DAB28BCF4DE17AC7D018


2D7784C20519C12AEBBE1335BB6C78EB0698F88437E1DE88B751960C452D93D534770E736C3664899A5A026902E66C07B4D9C74EF51168B10129426DFB5A753801E4C28522DAC774EBC2BA58FBD01242DD530B8937F18FBDEAB197B61C4E14186395CABAE2E6C0911843ED151DC578DE3615266F3D16D9884E77343A0E23BA25A5BEFB1648C5782AA041FAFD13CC86E8536FB074CE8A977D5A2E47D4693440DC4E3B802461CF7559F80D361D5BACFAE97A704B8EFC00A72C7D473161A00F1C4DF436B3392F859D89E7CECFB163604789D45517FEA0D27223A6E2D18265322B826AB50B6439DA66E4DE901197D1FE6EC7D7DA7F56D01985BA4EB958BD9BF4394D9DA92CEC6253CCD9ABFE511E9EAB04E5080151EDABA0A3836208EF491E8D4080ED5D08F8EAD5B2FED46A572CAF55355C59E765363A096CD08F6D5496A7B2615816824F38CABB337129969CA729D3EA1357D16CA8A1E8BB2ED1FD005E75D38C2E330E1BE1272B3A5EA23CB2B6DA3A300FD4606E3B3520C7D0AA239CD2DFB52F11AB0F7C1C62FDF37E3804872EAFDBE958CF73D5D7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
q
0 0 765 318 rc
265.5 42.974487 m
500 42.974487 l
500 0.4744873 l
265.5 0.4744873 l
h
265.5 42.974487 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1169 cm
/F1.1[ 12 0 0 -12 0 0]sf
403.358 1144.4335 m
(!"#$%&'\("\)*+,-.)[ 3.540000 7.116000 7.332000 6.888000 6.444000 7.788000 6.888000 6.888000 7.116000 3.336000 3.552000 7.008000 8.220000 7.116000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
384.95599 1158.7815 m
(!"#$%&'\(\)*&#$+,-'\(.&/0123)[ 6.672000 6.672000 3.336000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 3.336000 3.336000 6.888000 2.664000 6.888000 6.444000 3.780000 6.672000 6.444000 6.444000 3.108000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
265.5 160.76324 m
500 160.76324 l
500 118.26324 l
265.5 118.26324 l
h
265.5 160.76324 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1169 cm
/F1.1[ 12 0 0 -12 0 0]sf
433.634 1026.6448 m
(-$/'0)[ 7.116000 6.888000 4.224000 6.888000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
391.31 1040.9928 m
(045$678#$9:;#$<:=;;;3)[ 3.108000 2.664000 7.116000 3.336000 7.776000 7.776000 8.664000 3.336000 3.336000 6.000000 7.200000 6.672000 3.336000 3.336000 6.228000 7.200000 6.672000 6.672000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
265.5 278.552 m
500 278.552 l
500 236.052 l
265.5 236.052 l
h
265.5 278.552 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1169 cm
/F1.1[ 12 0 0 -12 0 0]sf
431.86401 908.85596 m
(&$1$'/)[ 7.788000 6.888000 3.096000 6.888000 6.888000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
418.742 923.20404 m
(45#$549\('>/&)[ 2.664000 7.116000 3.336000 3.336000 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
449.75 1008.2368 m
449.75 942.84802 l
S
0 i
CM
382.75 234.15201 m
379.75 226.15201 l
385.75 226.15201 l
h
382.75 234.15201 m
f
0 J
0 j
1 0 0 -1 -67 1169 cm
449.75 934.84802 m
446.75 942.84802 l
452.75 942.84802 l
h
449.75 934.84802 m
S
0.64705902 0.84313703 0.82352901 sc
CM
530.5 42.974487 m
765 42.974487 l
765 0.4744873 l
530.5 0.4744873 l
h
530.5 42.974487 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1169 cm
/F1.1[ 12 0 0 -12 0 0]sf
670.85999 1144.4335 m
(!"#$%&'\("\)*23.)[ 3.540000 7.116000 7.332000 6.888000 6.444000 7.788000 6.888000 6.888000 7.116000 3.336000 3.552000 8.004000 9.336000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
649.95599 1158.7815 m
(!"#$%&'\(\)*&#$+,-'\(.&/0123)[ 6.672000 6.672000 3.336000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 3.336000 3.336000 6.888000 2.664000 6.888000 6.444000 3.780000 6.672000 6.444000 6.444000 3.108000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
530.5 123.56085 m
765 123.56085 l
765 81.060852 l
530.5 81.060852 l
h
530.5 123.56085 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1169 cm
/F1.1[ 12 0 0 -12 0 0]sf
672.87598 1063.8472 m
(45#$5,"#6787/)[ 9.336000 4.452000 7.332000 6.888000 4.668000 8.220000 7.116000 7.332000 7.116000 3.096000 10.872000 3.096000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
638.41803 1078.1952 m
(0549\('>/&$678#$9:;#$<:=;;;3)[ 3.108000 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 6.444000 3.336000 7.776000 7.776000 8.664000 3.336000 3.336000 6.000000 7.200000 6.672000 3.336000 3.336000 6.228000 7.200000 6.672000 6.672000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
530.5 278.552 m
765 278.552 l
765 236.052 l
530.5 236.052 l
h
530.5 278.552 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1169 cm
/F1.1[ 12 0 0 -12 0 0]sf
696.86401 908.85596 m
(&$1$'/)[ 7.788000 6.888000 3.096000 6.888000 6.888000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
683.742 923.20404 m
(45#$549\('>/&)[ 2.664000 7.116000 3.336000 3.336000 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
714.75 1045.4392 m
714.75 1017.2528 l
S
0 i
CM
647.75 159.74722 m
644.75 151.74722 l
650.75 151.74722 l
h
647.75 159.74722 m
f
0 J
0 j
1 0 0 -1 -67 1169 cm
714.75 1009.2528 m
711.75 1017.2528 l
717.75 1017.2528 l
h
714.75 1009.2528 m
S
/Cs2 SC
0 sc
/F1.1[ 16 0 0 -16 0 0]sf
157 875.47815 m
(&9,:)[ 10.384000 11.856000 10.960000 0.000000 ] xS
434.854 872.33093 m
(+,-)[ 9.344000 10.960000 0.000000 ] xS
703.19 872.33093 m
(23)[ 10.672000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
449.75 1126.0255 m
449.75 1060.6367 l
S
0 i
CM
382.75 116.36324 m
379.75 108.36324 l
385.75 108.36324 l
h
382.75 116.36324 m
f
0 J
0 j
1 0 0 -1 -67 1169 cm
449.75 1052.6367 m
446.75 1060.6367 l
452.75 1060.6367 l
h
449.75 1052.6367 m
S
0.64705902 0.84313703 0.82352901 sc
CM
530.5 204.14722 m
765 204.14722 l
765 161.64722 l
530.5 161.64722 l
h
530.5 204.14722 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1169 cm
/F1.1[ 12 0 0 -12 0 0]sf
698.63397 983.26074 m
(-$/'0)[ 7.116000 6.888000 4.224000 6.888000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
709.85999 997.60883 m
(45)[ 2.664000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
714.75 964.85278 m
714.75 942.84802 l
S
0 i
CM
647.75 234.15201 m
644.75 226.15201 l
650.75 226.15201 l
h
647.75 234.15201 m
f
0 J
0 j
1 0 0 -1 -67 1169 cm
714.75 934.84802 m
711.75 942.84802 l
717.75 942.84802 l
h
714.75 934.84802 m
S
1 J
1 j
0.60000002 i
714.75 1126.0255 m
714.75 1097.8391 l
S
0 i
CM
647.75 79.160851 m
644.75 71.160851 l
650.75 71.160851 l
h
647.75 79.160851 m
f
0 J
0 j
1 0 0 -1 -67 1169 cm
714.75 1089.8391 m
711.75 1097.8391 l
717.75 1097.8391 l
h
714.75 1089.8391 m
S
0.64705902 0.84313703 0.82352901 sc
CM
0.5 42.974487 m
235 42.974487 l
235 0.4744873 l
0.5 0.4744873 l
h
0.5 42.974487 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1169 cm
/F1.1[ 12 0 0 -12 0 0]sf
154.078 1144.4335 m
(;"/7/<&'\(")[ 7.776000 7.116000 4.224000 3.096000 4.224000 6.228000 7.788000 6.888000 6.888000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
166.192 1158.7815 m
(%&'\(\)*&)[ 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0.5 101.86887 m
235 101.86887 l
235 59.368866 l
0.5 59.368866 l
h
0.5 101.86887 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1169 cm
/F1.1[ 12 0 0 -12 0 0]sf
159.748 1085.5391 m
(-="'/7>")[ 7.116000 7.116000 7.116000 6.888000 4.224000 3.096000 7.332000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
119.956 1099.8872 m
(!"#$%&'\(\)*&#$+,-'\(.&/0123)[ 6.672000 6.672000 3.336000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 3.336000 3.336000 6.888000 2.664000 6.888000 6.444000 3.780000 6.672000 6.444000 6.444000 3.108000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0.5 160.76324 m
235 160.76324 l
235 118.26324 l
0.5 118.26324 l
h
0.5 160.76324 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1169 cm
/F1.1[ 12 0 0 -12 0 0]sf
142.87601 1026.6448 m
(45#$5,"#6787/)[ 9.336000 4.452000 7.332000 6.888000 4.668000 8.220000 7.116000 7.332000 7.116000 3.096000 10.872000 3.096000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
111.526 1040.9928 m
(549\('>/&$678#$9:;#$<:=;;;)[ 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 6.444000 3.336000 7.776000 7.776000 8.664000 3.336000 3.336000 6.000000 7.200000 6.672000 3.336000 3.336000 6.228000 7.200000 6.672000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0.5 278.552 m
235 278.552 l
235 236.052 l
0.5 236.052 l
h
0.5 278.552 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1169 cm
/F1.1[ 12 0 0 -12 0 0]sf
166.864 908.85596 m
(&$1$'/)[ 7.788000 6.888000 3.096000 6.888000 6.888000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
153.742 923.20404 m
(45#$549\('>/&)[ 2.664000 7.116000 3.336000 3.336000 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
184.75 1126.0255 m
184.75 1119.5311 l
S
0 i
CM
117.75 57.468864 m
114.75 49.468864 l
120.75 49.468864 l
h
117.75 57.468864 m
f
0 J
0 j
1 0 0 -1 -67 1169 cm
184.75 1111.5311 m
181.75 1119.5311 l
187.75 1119.5311 l
h
184.75 1111.5311 m
S
1 J
1 j
0.60000002 i
184.75 1067.1311 m
184.75 1060.6367 l
S
0 i
CM
117.75 116.36324 m
114.75 108.36324 l
120.75 108.36324 l
h
117.75 116.36324 m
f
0 J
0 j
1 0 0 -1 -67 1169 cm
184.75 1052.6367 m
181.75 1060.6367 l
187.75 1060.6367 l
h
184.75 1052.6367 m
S
1 J
1 j
0.60000002 i
184.75 1008.2368 m
184.75 1001.7424 l
S
0 i
CM
117.75 175.25763 m
114.75 167.25763 l
120.75 167.25763 l
h
117.75 175.25763 m
f
0 J
0 j
1 0 0 -1 -67 1169 cm
184.75 993.74237 m
181.75 1001.7424 l
187.75 1001.7424 l
h
184.75 993.74237 m
S
0.64705902 0.84313703 0.82352901 sc
CM
0.5 219.65762 m
235 219.65762 l
235 177.15762 l
0.5 177.15762 l
h
0.5 219.65762 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1169 cm
/F1.1[ 12 0 0 -12 0 0]sf
168.634 967.75037 m
(-$/'0)[ 7.116000 6.888000 4.224000 6.888000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
179.86 982.09839 m
(45)[ 2.664000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
184.75 949.34241 m
184.75 942.84802 l
S
0 i
CM
117.75 234.15201 m
114.75 226.15201 l
120.75 226.15201 l
h
117.75 234.15201 m
f
0 J
0 j
1 0 0 -1 -67 1169 cm
184.75 934.84802 m
181.75 942.84802 l
187.75 942.84802 l
h
184.75 934.84802 m
S
ep
end
%%Trailer
%%EOF
