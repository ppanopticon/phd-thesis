%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 765.000000 378.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.4 (Build 21F79) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 765 378
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 765 378
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /I put
dup 34 /N put
dup 35 /D put
dup 36 /E put
dup 37 /X put
dup 38 /space put
dup 39 /parenleft put
dup 40 /P put
dup 41 /Q put
dup 42 /slash put
dup 43 /V put
dup 44 /F put
dup 45 /parenright put
dup 46 /L put
dup 47 /T put
dup 48 /R put
dup 49 /S put
dup 50 /C put
dup 51 /A put
dup 52 /O put
dup 53 /plus put
dup 54 /M put
dup 55 /H put
dup 56 /U put
dup 57 /B put
dup 58 /r put
dup 59 /e put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<





32160721362E0223220E0215141E0233323637230E012322260192E7010B1B2D223433DD0175041C3F62423B6146262544623D587C1E7D073E2B3C40013A0F26221738903C6E56332A49643A3C644827505D182B3E0000000001003600000183021300150031BA0015000000032BB8001510B80002D0B800022F00B800012FBA000E000800032BB8000E10BA00140008000E111239303113113335343E0233321617352623220E02072335368E0E2136270D1C0A110E1B322C220A020205FDFBE9233C2D1A03028405101D29186000000001000000010000C1F9E5345F0F3CF5011903E800000000B643F84C00000000DC4364CBFC06FE1F059D04750001000900020000000000000001000003CFFF27001D05DCFC06FE77059D00010000000000000000000000000000001C01F4001101160000012800340128FFFA025800300173FFF602ADFFFA02C0004502E5002602E50045028800450251004502E500450127004502510045038B004502E50045030A0026029B0045030A002602D20045028900170263000D02E500420276FFF9029BFFFB023E001D01850036000000160016006200AE00E200F8012801E6025602BE02F0031C03580374039403DE041E04BE052E0572060606AA06D0070A072A075807AE07EA000000010000001C00960009006D0004000200000000001E00000200042800030001B800142B01BA0004001000162B01BF00110027001F001A0012000C0000001C2BBF0012002C0025001A0012000C0000001C2BBF00130024001F001A0012000C0000001C2B00BF000E0030002500200017000C0000001C2BBF000F0034002B00200017000C0000001C2BBF0010002A0025001A0012000C0000001C2B00BA00140004001B2BB8000D20457D691844B8000A2B00BA00010002000C2B01BA00030002000C2B01BE00030028002000190012000B00122BBE00040024001D00170011000A00122B00BE00010033002A00210017000E00122BBE0002002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 28 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/plus 4 def
/slash 5 def
/A 6 def
/B 7 def
/C 8 def
/D 9 def
/E 10 def
/F 11 def
/H 12 def
/I 13 def
/L 14 def
/M 15 def
/N 16 def
/O 17 def
/P 18 def
/Q 19 def
/R 20 def
/S 21 def
/T 22 def
/U 23 def
/V 24 def
/X 25 def
/e 26 def
/r 27 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4124212 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281EA889C2D878C3AD50E8F3FE62C0EE5F6306EABD6A13240585D9168F9E9DD38556DC4B34480531AACF1BF2B3F33D4AB0AAD550819A42D0565FB60BA1D89D2F95F8D25B148DAE397C4FE4B5B4C9003FC6A34EE8787EFAF057461E3EC30599A083B1CE88F84DB4F4FAA0B07539E64D824A0A59116FCFE17A722C2FE6A87B0CB4725E492FFAA034678E2375058BF4E428E52E05EA9E8742DE8D98A4DACF51C074B5614A54DD625A43273A898EC99D3B2FD72D597B2A5E4B51F3FA7732A13AA9C63DB87E9DD396838C9F5F5C2C1CFAF1536A6158FC075B2641827E2E0405FCEF79409838CD571EA67420A9160163A2A8C8BE6F1ACC2D370F1A0399724ED165F35EE4B17AEA3B34C312CAA2C581ACB6369C11AA034A81D8CE5AA864508986F6C99F9CD5E10044AD6ACF0436197B41E07BAB965C3D8259369B96ECB33C3BE46642036DE885224E152F829EFCB01B33207F5C0D9FBF6C46AFAA31E82BE84041BF72058AE0F2877BA3C9DD0C8F717E41439149A6CC279AA87D0CA76AD1CC58265D930246351292066A904EF3217C4CFF18C1E349483CAEE4F3D1D8249B0F570D54CA46FBE2E9E2654DFDF8527A02C7AAE68AB2CF6A5276B97BAB43572122E1431142C50A0CA3D558E81BC63D20D70169B72E1F1219563F966FC7AC0E8909967755097D4DA506983E231CFEC35F43A7F3AC645B2DE628E861F3F790F6B0B552D4A1A8E0B8D901C1886393C387143616A1C8C83D498C8B5A6935CE36919DFFF47067C8F115E9C5F55
0DDF71031E652E4B667F854174896A614274AA90375A879B2DCE302021F05D9D424B607D4A77F7E18D414E29B0C4CF56FBEAB7C34388B1CCBAFD4A3C3A869A6D5E48BA19C0A1F9E83D82763DEF330234999F69D20D049E4C8006EE7209646C3EB1C9EE3C163AF695EE3625C67E79CE0D5DF97E77D3031A52C51E58D4CBBD146809B62B7C5EAA4D63B4B96D203C9D6362C6148E746A302D2C237F3925F2FE5849FA09C802DE76B4C36A71BAF900C6F92297EA68BA6A9AF778B4C083515CC6D212060E634B649CEC161864004C64E46103CC0D9F7D225C537FF68D71E5B10F0A50672C9E9AB50C8269438A46A7F4BB914C89549D3F0CF50D419E5938D88D2B60527D3707B2E1B9F5F1809A84B1B7CD3269B8210F714F574EADD275733D8059FF530E34D0259917983B85732BA3372E0F8C8D7D4FFC9C08BA79F9A4D953907CE19729265A265BE41362751BCB4351622C0A555787916ADC1EF654CB367C8A8D42163A01B206C850C25FBBF1484BC6058A57EE8F14DDD24E396BE879E1D5387899DA2A2E534E92CA57F08155BDABF5753167143439C6DBBB73FB1D9F98CFB7F5EA24CB8E68A274EC354451081C696B23E29FB95229DCF2FF4437A528A22539C5C4B648BC4533FA71A41C9A394D0110160BE745D97594F542A32645AFF429E8E433B8CD1245F5DF92B4FA5DE561B1DF001A59A7AA8312F16DDE0E048E20DFAEE02049C8EF9725045BEE788066AABFA4C768447DCCC84DC384F1104A8CA319EB02381B9A59FCDD7A982926E6A64B9C45498FB1A0E46E09B8D1790E03FC0A0372ED186529C4487A8B2DE98CE6DC87AA8CF777BD0D93CF12C7741596E8BE40F3816C6C47814E739E44802D7C459B8268455B24A48B43B9B7C26DEF5F316FFCEF5F9654B71C105372A5B1EC88EE0BBA2FEDD9CF6DFD6A77E9F17F71220C52A5F27587EE42324392297F450DDD619D013706E0245B550EEB1A7EB64465372B54F02E5AF8A65109F89D78419AC7ADC9FED45B7C63C285EDD9F06D76F11CAE7F43D0219B468530BD979A03747D9E6D5CD4E62BA7E693F357E77B6F47D46A41E04B310DD95E7978FC96199053F42AD060D4B317CCA856FC58C98D80EC655A38EE1898D644748ED1343185199208B14220049FEE4BEB78A190D920577704EFE43F648825ECAC5F6BB12D77611671693BBF4A9307354D2D7FA022E8DBCC631DCF88B75BB83644BE427B0A2167CA472521D55AC69649055D95133201E5E2746FB3E36B3F100F0D762BEE65C5CDF49E9CA227EDBC4BB84D65CA2A7D9C4D73C39266519DF8ED7BAA7AE737083666742C6D1F9D7D234143F050DFE52BCE6ACFD955AAEBAC45A4033B81F5ED35026B910716E8E122B2C2E02171265DAE5042649B437763EAB950C9FB98E90A5452743C9E78398235A01533EC6DB9F5A8C6B82AC6849FFBC5FF1CB5541D
FCCC402A6C249214AE63D56F1D5E2BE53EBFD25E34DD8395FBC4E26615C12D5A1874ED775BB25B301A7586AF843AD1A773A60D95888DD467E81571A8CF9208C7F03850673DE3F9F075E0D3B91771CAB99F3138683C800BCF9CA5DE089D8D6932F6DC253EDB0722423AF9ED0BCC7E30C972CD27FD505B5B04B78C9D65821EC2ADD3B26EFD41625DC9D2DB0EF6035C7A0775A2055AAADA9AF54CA8F68F9C0754B5ED250AAB71A6BA014876A52E81658594548D1DE8EF4E9E2DF7F6FE0A1278AF81B97AB7881E81692AA3F55C1A588FF55CA68C2BFBCB572199F72E71477D9EAB8D9A874ED6A45CA40C8E2DAD79CA41C0F9A2FE4E3476A43563D0FF596D4FBF9A6FC62D253E12A2061A8BF717CB627CE0E96F03242CA4701BB8DEC594B60F14DB330C166F04443C4F1918732C0C9FCCCEE283307CA9FFDD37F26AB175E17CD4F38C095C9950100155375AB9A8EABD8F4640FE57868C8DB5525EB2A18C653A9A05C3555FFDD3534B9F50528D899BF08C293B1033D353DF2E9CA2EC78FCAE1DA593952D95FA1D09EEEE3F48F8DC6529796E513E01E8B5DCD5E9B8EA5AE47D589D3D4C58EDFDEDE4F2B670A6E37CBCD789639F9D40A240BC40D4A01761E1AB901CC1BDF078C0C8F44E377E1D78DBC38E1F7395957BC059A9E6F925E18ADC5ECE2657386289415C18B562476C028CBC3229F4662B6523857D7D71296A98215B5E6C47B69EAB73BED773D1948E44166D53D333F01F31FA951FC5C7ECA5B07F8DF2FB19EA46C1D9333D222E691AE6F331297B8B11B1B313CBAA9CAF01F49328FFDD76836C1D3D172C2392C1E3A570D24A905D737CCACA3C414906E65D81908F5715EFE0B0C901DC4CFA142B19D237D0394EFCAF0594031749A7E15F8275DF73B8320566D72A3E955BC90E8AC3DE55EBA1F47F5CDEFFADCF442A33D5A319ACE5840DA6EDBAF546816210E80694AB323DB74119D12EBAC47BB63FE167EFAFBC0BD0AF241653AC606983246D05E0967F2DFF4BA52529B12790A8E02E643858DB0CB1551112FEF0A145D0E732626B4A61FBECDDEF84551AB09652089296B30324267CBB6808636F2FFA1EADDCBB8850578D017F6D4A3CB119E9DB92914290CCA40098F865E0BC1301FA614AB94EC0531BA42D91FDAD6503461BA1596E2812F897E6580715EF99FCB778CCD5FE3245ACDB6B1C2DB2E08BA54D99FD1D3B9ECA8B00DD8B4F27474CDBC9E29A9BBE66608077B15BBB0E49F837E8EA445F005AAFA29F843884076C43ED55396EA140E708FD68193231EAE712E5FAEE2AFFFD337CB0126F0628035F1F34678AA30E905EC723E13BEC6CFE2D185D9BC634A89E750263C402A1436B1CFD2BA913F8D419C5553006F2748792AE27F33750B7B4619CBC9F15373078812872B77147AF6339EE5148E42AA112FC5FD4D6E88A51DE9A33E91751B3EE26962F0A

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F1.1/HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /L put
dup 34 /two put
dup 35 /comma put
dup 36 /space put
dup 37 /f put
dup 38 /e put
dup 39 /a put
dup 40 /t put
dup 41 /u put
dup 42 /r put
dup 43 /F put
dup 44 /l put
dup 45 /o put
dup 46 /V put
dup 47 /c put
dup 48 /parenleft put
dup 49 /nine put
dup 50 /six put
dup 51 /parenright put
dup 52 /g put
dup 53 /y put
dup 54 /equal put
dup 55 /colon put
dup 56 /one put
dup 57 /i put
dup 58 /d put
dup 59 /s put
dup 60 /n put
dup 61 /A put
dup 62 /S put
dup 63 /C put
dup 64 /zero put
dup 65 /k put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<








00>] def
/CharStrings 34 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/zero 5 def
/one 6 def
/two 7 def
/six 8 def
/nine 9 def
/colon 10 def
/equal 11 def
/A 12 def
/C 13 def
/F 14 def
/L 15 def
/S 16 def
/V 17 def
/a 18 def
/c 19 def
/d 20 def
/e 21 def
/f 22 def
/g 23 def
/i 24 def
/k 25 def
/l 26 def
/n 27 def
/o 28 def
/r 29 def
/s 30 def
/t 31 def
/u 32 def
/y 33 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2803033656251216BDBF602CE887AD86A5BE726F3F42312EBC0E6BCAAD0A1E3A7D81B386E3D2BA7269F921CBCAFC557B3E8902CE68484443CE5BF02FE4DC1F45D21D8D5256C92362B1994104C5FA6A7E8E4C6B297762FDD52228082DAF44FC4448B364D3EDF22EC1F637F9018DA4E2EC4F4E8F10093467DF69DCCA4994ECDDC78077523B2B8BCF898BA40B4B846817B0C612A2919E780389220324914CFB4E887419D7A2D02D98DCECB92F7566E75AB65FB58CC56B7DC1A9B2AC9A734ADAB495486052231236EF79DFF2EA00B6F5BB0BBFE0DAFA17AD817A5B41B588F433C4A9F025005D7233A1CF76973660CD60BF02B15831F93C3D716A3FBFC61EDCBF5C82A75D753C99D8FB3B444C8AB2C7A3D43D151A2CF12C4CB61ED05AFF8CA52EDFE7B4AC1BAE6A40244DA4B368858D60646F01C05AFC0935DC0AC76906EAAFB8FCB5AF84AEC63552E1FB2D478B621B90DC6734EC38C00AE14104209F8CC6D5BFA7CE19AF892E13B7EA2A6696314FE49C7EDA98D28633F4E8AE369FF0EEDA084524889340EA43B5384D5426DF18830BB69DC24AB61E970C6CA55DE2AE64DB170267630B8F474EC00832A01B19BA522F6807F0A2FC1C76D9C48ADB983A1BD53FEE2CAA1E169E80E74E475A0C0740FB6CF264977C86FCDC566E672DA8B5BDEEDF4D3F5BC2D781CC6C0A1CB0A7ADC58A4E3E00454BEDE22946E2D579720DC81FF6BF3E6010AF0DE71A0DC119F7CBF819826797FF6CE4AB2120E0EB5C741D7AFD28FBA8D3345B2F163
D65348C291CC66CB0128BF209BB32C645D75641D644C3201B3EB4F7D295C6440B5391F98358D461C69FD7F20731980C3D97CA092A2B19DDC466D392AD8A2D67511D592F4FBF6BD4930B85527FFA372D9C312D2825200ADFB4A8A0407CC78F393E48498C9C74506FB4796AAC12E3295DE101F79CE81C9CC4978D55BBE3CD29C5894142FC229CEEFD4AC549EC94C1DF961ED10409BEEB8FA2BB141F5DF049C7CED7E34190B0073C9C396AEA26FFAF2477839DC5410F1B007D929E6869416EA9213AC537D6DC793827D13C7099661DF05C3990830DD3B3F5895BA7E8B18CD296D01E8DB4EB245FD50D40443EDE9CB4597E31F99B8B1F1B5EB52D14278A96CEF3E010AFB570F79E7CAEE442E1439731E7D19C42819F6EAEB5EF2C1458955C9E756C7F27E186EABAC035E8AF9EF8CF95E2FF2568DB47A3BC90ED1B71EF759743B9892D2680C52E79F9782F2F59C70B4F24FA2C6FDDE03F3559FEF535B8E90BF0A44A7C7E712F77E1B612B72F5067034EA3925B3C3BF05715C323D1EFDF755247F69B9BAEEAF5D422EF779425C63309DB83F3A9A500701BF1F04137C2A0D68701DA171359CCBBD11F39AC915C01EDCA88DEE9B455BEB24FCFC155B65FA1B4CA01A9FB86AB098F5FA66441151BF094C9FF980A6DB80990289B7B35D132AD3DF0708481872E363F0AB0C81F48E9DE25542D065AC1CCB5FD7D43C20D1F8C85DCF6A99C3CD0CB69A542C2C20A183794A8DC01D7A03909EE02285C33651F0CE580D57F2047B27F69DECD2CFA36B2912F127386542A03603147FF113BF03FB1D9CDBBC85FBEA4F76EDEFC1F3E18BDF4722D457E4B561FD74BA53F20F26B3BCB5E6A2DCF3439E4B286CC8C3133756EC934D5B195E1D1D3AC11D4570CA8CB1E80867F6F0E8F6DCE7DE271368DC332ABCDAC2778696F1D918A8EB3B3C5DD53879801DD3BD68B2C67D4B9F025BF2F5276975F2BDF99E33F6F0A72B5A36F4385DBEE255AF60E8BE87D24A99D38052CFB31FCA62E3FD8A7F56DDABC5073382BEE7A365E44335AAA0C91D0848AD11340604322C2F307E437FA635CABE22AE1489F1A2069866F70DD0E623A0DDB4D8F2C0977D801DDA98D65AA03CBEBD1C90FD4099892A8F722037960FA27511018803AA738F3B4F5C542AF04E0BF2F4EFE3B8507605C321460A1AD32010AF32C0CB040306B8B17FCB687403271ABE2449CBE795E3FA9666F45C28330B1CFC2F568DD79372736F40C827994D692E9850CFC350B2BDCE7E2E6B146641ED5FF39BB6AD04A32D128B0BEFD575C97E99724A87BA9B7A7779C37F3BC616AA4B2477352AE2D96B0B58C98B8F67696377736D39F35395C9709EA32B74EDA653919225649D175FE40DF1C60CC8F219EBA7B2032564622E62D54BF7B626ED53B2EB483D40C42E177570E4DEB7D32F01115E01822F260420AB71663EFAF48C9AB5C3
1289A4050E5EF18CF062AD5EE826BD2269D22C8DD5BB20A5EDF940983585A1A6C603F43722C272B5B8C2A360A5E7BFAC29ED16D1EE799735A0C683E23BEDF08B719449B263823AC8331892E6F384B9E85C6D2CC709293D9B51A7418CA703637A925F0B5D48C8BA10A85701D095E8D9E163205B460EC9DF1D5DE9D0ECE22E592602AB412EA78D9889BB1BE13893D18AE54372839A44013C28DB983ED20DB9EA85FD7086334D835D104588C5238CBFAAC43C3B265F3ABCC8A5BAD9A3335AD7A9DCD145C33527BF3EAF74FA7EA109E52E2D476CDAE41C793ABEFFC3265242816278C082AD7C38BE132B34BD482F9FB388146A96A7674EC6C302FBEFF14102BF4CF4C21543213D9F274DBE2029C7E6A861AF9F268521F29A0D82B7084288F42DF6A188E5CC7B353AC19F3F924C5A5070AFD91FA92C362D1C79DE28EDE596316C1FA449884B52C9083CC482DAC016EE49ED0767E0BB12C34E70BB5E7A8973CC85F4472E2B1FD7FBF91F44E295F01B332DAE94D8EB620774EC36902C768898142BBA0C3C9A3A1AE02161E14613EC308FB4AACB2E3266B54212AFCF02CF455D7EB45883CDE69AD1C01DA60164C1483CA7B45616E35C1965C26DC670583ACF9AE7BB6E3BBA6B813D4173E2300CFF7754A50246C58C49FC2030F30173648644F9B98869A438436B894529616B9F16BD1F4E6DBF8365E7191CAFFE36C484B4325DF28D6E89510FBDF8E63F6BEA5A003940FCAB1827538DAC1A7C877D0EB5F0BB3FB6DB1837FB78A590A92F017F3F57D1F6854247DD1F5831DEB168946C96374DF672A6976DF541DB47483D1858E5C22CA373B95BD73B40FEC01D9693627BCD6176D8DC0B08C22476E092854357477B86D2C800E8AD919CCF5C2EEDFED900BAA9720CF1BF95D2687B1E04B6147CEC2CA819BB106A3CAE4D9C33158AA7290B8ED69C78FAC39BF564AE8D05B54D105F2D0063D0AB8D29FB30D5D71B9925ACEE1EEAADEC00C9C5066B804BB0D6F2D60F0A776F8EB022F6B50B7BB29540EFF252C8C562CA86E78F4CCF6AEF1484DB053DAEF64619BB5CC403C7089DF7A6FAAFEB53F28466CB14FD2E10F5477809CC8BC286FAC42160C0A53812FB8F3BECB5E68DA7B2F0A726E88F59822F385D27FE2CFB794DF276833FAAB7EC5AEFCCA1B7ECB3EAE3C3C1C0867937219AA3454B0FA1AE51F6DDFF722F431D0AEE5EF796F98AA9A8274A5851B76F855580E6DEF6145CD002719593FEF976CCF4A1F2CAE0CD7EB2BA8AE1DBD3DC0C54B646B7AF6A059777354AF793655C48DD4E74AA7170114ADF5D912E812C65F1DEF23C0D88A035C816C90459730F27FE292F97767D04E524ADCAB813880A8721E6BF7FCB95272076DD2096E3B394137EF3B6639C33C2DFE909FFDF32AB3FE41BC9C1A35B448E02A6BEB2B490058530865EB9BC9D9A10AAE1F6DC14C517138B7A
7586DDFC67D5EC0F0926A7D5B1A7313DA982DE17674302007CEE086A00A9FDF93314CC7C766733EE34D482D5062BCB1C001B4EBFBC660B71DC39D5792337E5D4A2A98EE7F4362AAF8AD67AF8605C4075A2DBD5EECDE2DA7EE412C53700A846D0721B9E3B39A15751833F281E81AEE70BC6F0A486F471D0F7954072066C1636AF08D69F76879D6AA83DCE0C045C5F2B55B1E9A9CE80BC993100904B5EC15933644F2E1C9080112555EC3F44FD8E99CB9B8D20C4D585F0D7C281A89ED12E4FD768763123FDB821B83873981B165C15BEE0D38DA070B5A8025FBFF9399D099B7FB6344A17937739B0EF9CDA38B1C3B7038DB1BF6751E5FD1D41705D46A4E66FECAD71BBBF05D2A3F319AB49F0C2E56496BE8E0A7971E77BD16D503C41ECDB1F904FBB68B27A3C66382D1DB2DEDCDB8607658B9EF3CFBA7589B6605FF4BD84B230FE99DEA8CA52DF535400CC1A8B87BBFD9B5A0B583DBE57DF2598900ED155C4FD37115CC5F87F85B0FEECBFD5FEC6003E5A64278E59183034D415B98CCB28ADBD6DDAF3F89CD91477AA4157BFC547DF58B7DE2CA00A1F26E491618DC94E7C82A3D5461D268C0484B76FA185DF9F6A842650260F6C0460AB0A945CC85C4928ED58E5D004B246601D2F75F4A932C5E09988ACE82BE408735AA49716AE742BBA13C8B6B93E7780F713C0823F340EE64C56547D53834A923735534137BBC8C6A32071F68FEA4A7518A66108D87A8A76D98E4D952A327E7C8D001360CB136EF63A64FAF12F5DADDE3A1CA390F2C9C028E3A41E3536A9037B457ADD8367692F59E1FC3B579CDB21F3AC14F8D5D9A3AE21920AE0A5BC8E8B71D6B817CA185C34197C972DD31BC49F57C2BEF993ED3D27C8EF8048BB38499CED626A1F7F15BEA528FB27855FB36997ED879CB43406743D248D740C1A83DC763DA3F4003E6B876233AF184B0BFEA619190077230CC6E7EDEDC8515FCF87CB3AB3FC89B39E7C7ED61B6C185EC03B8D9499551A8DACEAF1A65E864FCB14987FD3306C6CCB0011FA59FB49046A0F74E081FB1ED9ADFC3A12C44C17A96DC8369F7BBC245A2D684ACE0FD3D8D369B459342DF159DB737A0EA3350EB265A76100842DD5A83B44CD3FFCB2BBEADF5B75EBB486811FFB8EF916C009EEFBCA008AB7C4A8F56DAAD65B21D0B4828749AD083332AF1E0C844EE208506C788B1ED07D6CB1B699E53D17AE7ADC4A8A250CBB42BD08FBD96083BDA0A83C02D82EA388BFFB1703B52EAD8E87DE5F01A1CD02E5F57AC0288DA2880D3C460CC591B5BDD245346B9F24733B996AED42CC427568015E63A4E69FFC40D58BA542711729079AD291393D3195FC862D536967A2D0D47D1C5078025540AD0F4C6657B14A869D9120672F072CAFCF503C1DF8182CD54693E1FC8D1E5AE6EFED40238632E5411DBA5214249844D9F91678CE9B7912FADBEF66

3A4EF11B6BE8477E006AA12FD2C84FE16A49F6D954953C19CA4ECCB3DAB5FE7CD608B2D19F10634C976DF1120624CA3C2F205602FE3F22B30855D38AEF876D21EFA2503241E27CCD4F2FA626202C8304DE8786B67AD76986ED63231945EA91DB46FE8BCE01645AEB4272D2F2EBC6F1158E7A158A9F767CEF06A5D02765E22C78D6D7368406FD7BBB309F8D523C6820927075AB0F79EB6855939F7D7B7712F886AF40ABDECFE2364EA163FD17F0F2535C8EAFDF4C4D25EBDCB1CB5032B5360D3F2704159176204CC8951D4C1AD2EFABB31A88B9AF4F5D137F14F05289695060BEC60407517D6E66089F6D5BF7D80633D763BDEB69A967AA93DF1FBEA344FF4DCBA4D8248B6AB18ED2C867ACAB80E1EAEEB86D8935F9E0863E946391D9D11BB5EA6BC9DB2578B1AEF7A5BF440286B05BFA5FA1CB3CE520FADE7D0F48CCF92795041986A4B10C90FE4CFAE95ACC6F11BAA41F97167B81F011ED4DDE6F4850DE6986F98B14854BDBD036C1876C469A7020E6CA82126EFC80012C42BFFC2824BC6C1C7394F004E43193C99F68EF6E40E85E7F7A91E8B77A8A3B8A29BF98750D5535749ED4A87AE5352205A3EE5D95F474D8B1470DE28F7B94B98C0C5CAED8FBD056D576A8CC1FB1F3F3126B8670EAA54F393893CA0509E2818B367C78D5153C0E73E7C1C77BAF860C982A26A6DE055DBB4DF228BFAEDD3C417E2647304833865339A36C60624527427FECB3AA48FA06B30F211898EC5DD74CE1862626EAE636618E179C6F5096FF7FEA5E3E6ED7D5EAC929F85CD26C7406239E72B42421798FF24B2246FDD33909120665451F58F09307BF746B29F6823DC570646CD7F1B535F6028AF67AA80AFA3812D1197C245D3F1866BD0EDDCC960396B6EAAEDADF007DC49F60176E127CB5FD96DE40B9A272CFA8815E212CA79FEA1163225A681E0153D0202A015EACC6927957CFF23A8BDC9C8AB6DCC548410C91717B23135247E8F3B346A306788F2BB2AEB2136A772302E42CF77AD6D18D05EBFFB9650FB8F0673802503F70418F6B3EF376CF2D76468E7F475DFE89FC34B68EC5C6E2AAAEBA64B0D178D6D5CED2D0E639481090F68A5AA4EA6A4155AFCAA577D4CB73355CF69D2CDD97F85D7CC6DF50E887324002D3D1889E3536F70CDB81876D7086F3052B9E59EEC183466373707E200FFFDF46EA3F5729D0B7122B2D3C28712F27979A10FE847A8F52D9A90662E33DB363A435132189D582C97A3678BA6536359C665971B84D4F6BA01CBA1E9D15B5489FA4EF5E06B7153B25AC55BBCE95E9724ADE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
q
0 0 765 378 rc
530.5 44.775986 m
765 44.775986 l
765 2.2759857 l
530.5 2.2759857 l
h
530.5 44.775986 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
662.30402 1925.632 m
(!"#$%&'\(\)*!+,\(\)-)[ 3.540000 8.892000 8.892000 7.776000 8.004000 3.336000 3.552000 8.004000 9.336000 4.452000 3.540000 7.560000 7.116000 8.004000 9.336000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
649.95599 1939.9801 m
(!"#$%&'\(\)*&#$+,-'\(.&/0123)[ 6.672000 6.672000 3.336000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 3.336000 3.336000 6.888000 2.664000 6.888000 6.444000 3.780000 6.672000 6.444000 6.444000 3.108000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
530.5 162.56474 m
765 162.56474 l
765 120.06474 l
530.5 120.06474 l
h
530.5 162.56474 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
694.53003 1807.8433 m
(,!./$0)[ 7.116000 3.540000 6.012000 7.332000 7.776000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
679.36798 1822.1913 m
(/'\(&4-*5$6$78)[ 6.444000 6.444000 3.780000 6.444000 6.888000 6.888000 3.996000 6.000000 3.336000 7.200000 3.336000 3.336000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
530.5 337.39435 m
765 337.39435 l
765 294.89435 l
530.5 294.89435 l
h
530.5 337.39435 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
691.40997 1633.0137 m
(1$.$2/)[ 7.788000 7.776000 7.116000 7.776000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
683.742 1647.3617 m
(9:#$:9;\('</&)[ 2.664000 7.116000 3.336000 3.336000 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
714.75 1789.4353 m
714.75 1782.9409 l
S
0 i
CM
647.75 177.05913 m
644.75 169.05913 l
650.75 169.05913 l
h
647.75 177.05913 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
714.75 1774.9409 m
711.75 1782.9409 l
717.75 1782.9409 l
h
714.75 1774.9409 m
S
/Cs2 SC
0 sc
/F1.1[ 16 0 0 -16 0 0]sf
157 1595.002 m
(123")[ 10.384000 11.856000 10.960000 0.000000 ] xS
434.854 1595.002 m
(+3,)[ 9.344000 10.960000 0.000000 ] xS
676.51801 1595.002 m
(\(\)*!+,\(\))[ 10.672000 12.448000 5.936000 4.720000 10.080000 9.488000 10.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
530.5 221.45912 m
765 221.45912 l
765 178.95912 l
530.5 178.95912 l
h
530.5 221.45912 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
673.27802 1748.9489 m
(40#$05.!6!/)[ 9.336000 8.664000 8.892000 7.776000 8.664000 7.200000 7.116000 3.540000 10.884000 3.540000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
641.526 1763.2969 m
(:9;\('</&$=>?#$;6@#$A68@@@)[ 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 6.444000 3.336000 7.776000 7.776000 8.664000 3.336000 3.336000 6.000000 7.200000 6.672000 3.336000 3.336000 6.228000 7.200000 6.672000 6.672000 6.672000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
714.75 1730.5409 m
714.75 1724.0465 l
S
0 i
CM
647.75 235.95351 m
644.75 227.95351 l
650.75 227.95351 l
h
647.75 235.95351 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
714.75 1716.0465 m
711.75 1724.0465 l
717.75 1724.0465 l
h
714.75 1716.0465 m
S
1 J
1 j
0.60000002 i
714.75 1907.224 m
714.75 1900.7296 l
S
0 i
CM
647.75 59.270363 m
644.75 51.270363 l
650.75 51.270363 l
h
647.75 59.270363 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
714.75 1892.7296 m
711.75 1900.7296 l
717.75 1900.7296 l
h
714.75 1892.7296 m
S
0.64705902 0.84313703 0.82352901 sc
CM
0.5 103.67036 m
235 103.67036 l
235 61.170364 l
0.5 61.170364 l
h
0.5 103.67036 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
164.746 1866.7375 m
(,$/27)[ 7.116000 7.776000 7.332000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
166.192 1881.0857 m
(%&'\(\)*&)[ 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0.5 160.71121 m
235 160.71121 l
235 118.21121 l
0.5 118.21121 l
h
0.5 160.71121 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
153.304 1809.6968 m
(,8"2/!4")[ 7.116000 8.892000 8.892000 8.892000 7.332000 3.540000 9.336000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
119.956 1824.0448 m
(!"#$%&'\(\)*&#$+,-'\(.&/0123)[ 6.672000 6.672000 3.336000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 3.336000 3.336000 6.888000 2.664000 6.888000 6.444000 3.780000 6.672000 6.444000 6.444000 3.108000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0.5 219.60559 m
235 219.60559 l
235 177.10559 l
0.5 177.10559 l
h
0.5 219.60559 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
143.278 1750.8024 m
(40#$05.!6!/)[ 9.336000 8.664000 8.892000 7.776000 8.664000 7.200000 7.116000 3.540000 10.884000 3.540000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
111.526 1765.1504 m
(:9;\('</&$=>?#$;6@#$A68@@@)[ 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 6.444000 3.336000 7.776000 7.776000 8.664000 3.336000 3.336000 6.000000 7.200000 6.672000 3.336000 3.336000 6.228000 7.200000 6.672000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0.5 337.39435 m
235 337.39435 l
235 294.89435 l
0.5 294.89435 l
h
0.5 337.39435 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
161.41 1633.0137 m
(1$.$2/)[ 7.788000 7.776000 7.116000 7.776000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
131.84801 1647.3617 m
(9:#$%&'\(\)*&#$:9;\('</&)[ 2.664000 7.116000 3.336000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 3.336000 3.336000 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
184.75 1848.3296 m
184.75 1843.6888 l
S
0 i
CM
117.75 116.31121 m
114.75 108.31121 l
120.75 108.31121 l
h
117.75 116.31121 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
184.75 1835.6888 m
181.75 1843.6888 l
187.75 1843.6888 l
h
184.75 1835.6888 m
S
1 J
1 j
0.60000002 i
184.75 1791.2888 m
184.75 1784.7944 l
S
0 i
CM
117.75 175.2056 m
114.75 167.2056 l
120.75 167.2056 l
h
117.75 175.2056 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
184.75 1776.7944 m
181.75 1784.7944 l
187.75 1784.7944 l
h
184.75 1776.7944 m
S
1 J
1 j
0.60000002 i
184.75 1732.3944 m
184.75 1725.9 l
S
0 i
CM
117.75 234.09998 m
114.75 226.09998 l
120.75 226.09998 l
h
117.75 234.09998 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
184.75 1717.9 m
181.75 1725.9 l
187.75 1725.9 l
h
184.75 1717.9 m
S
0.64705902 0.84313703 0.82352901 sc
CM
0.5 278.49997 m
235 278.49997 l
235 235.99997 l
0.5 235.99997 l
h
0.5 278.49997 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
164.746 1691.908 m
(,$/27)[ 7.116000 7.776000 7.332000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
179.86 1706.2561 m
(9:)[ 2.664000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
184.75 1673.5 m
184.75 1667.0056 l
S
0 i
CM
117.75 292.99435 m
114.75 284.99435 l
120.75 284.99435 l
h
117.75 292.99435 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
184.75 1659.0056 m
181.75 1667.0056 l
187.75 1667.0056 l
h
184.75 1659.0056 m
S
0.64705902 0.84313703 0.82352901 sc
CM
530.5 103.67036 m
765 103.67036 l
765 61.170364 l
530.5 61.170364 l
h
530.5 103.67036 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
694.74597 1866.7375 m
(,$/27)[ 7.116000 7.776000 7.332000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
691.30798 1881.0857 m
(/'\(&4-*5)[ 6.444000 6.444000 3.780000 6.444000 6.888000 6.888000 3.996000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
714.75 1848.3296 m
714.75 1841.8352 l
S
0 i
CM
647.75 118.16474 m
644.75 110.16474 l
650.75 110.16474 l
h
647.75 118.16474 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
714.75 1833.8352 m
711.75 1841.8352 l
717.75 1841.8352 l
h
714.75 1833.8352 m
S
0.64705902 0.84313703 0.82352901 sc
CM
530.5 280.35352 m
765 280.35352 l
765 237.8535 l
530.5 237.8535 l
h
530.5 280.35352 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
694.74597 1690.0544 m
(,$/27)[ 7.116000 7.776000 7.332000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
709.85999 1704.4026 m
(9:)[ 2.664000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
714.75 1671.6465 m
714.75 1667.0056 l
S
0 i
CM
647.75 292.99435 m
644.75 284.99435 l
650.75 284.99435 l
h
647.75 292.99435 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
714.75 1659.0056 m
711.75 1667.0056 l
717.75 1667.0056 l
h
714.75 1659.0056 m
S
0.64705902 0.84313703 0.82352901 sc
CM
0.5 42.922455 m
235 42.922455 l
235 0.42245483 l
0.5 0.42245483 l
h
0.5 42.922455 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
144.526 1927.4855 m
(!"#$%&'9/:;;-)[ 3.540000 8.892000 8.892000 7.776000 8.004000 3.336000 3.552000 8.448000 6.228000 4.452000 6.888000 6.888000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
149.368 1941.8336 m
(/'\(&4-*5$6$78)[ 6.444000 6.444000 3.780000 6.444000 6.888000 6.888000 3.996000 6.000000 3.336000 7.200000 3.336000 3.336000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
184.75 1909.0775 m
184.75 1900.7296 l
S
0 i
CM
117.75 59.270363 m
114.75 51.270363 l
120.75 51.270363 l
h
117.75 59.270363 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
184.75 1892.7296 m
181.75 1900.7296 l
187.75 1900.7296 l
h
184.75 1892.7296 m
S
0.64705902 0.84313703 0.82352901 sc
CM
265.5 105.5239 m
500 105.5239 l
500 63.023895 l
265.5 63.023895 l
h
265.5 105.5239 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
429.746 1864.884 m
(,$/27)[ 7.116000 7.776000 7.332000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
431.19199 1879.2322 m
(%&'\(\)*&)[ 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
265.5 162.56474 m
500 162.56474 l
500 120.06474 l
265.5 120.06474 l
h
265.5 162.56474 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
418.30399 1807.8433 m
(,8"2/!4")[ 7.116000 8.892000 8.892000 8.892000 7.332000 3.540000 9.336000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
384.95599 1822.1913 m
(!"#$%&'\(\)*&#$+,-'\(.&/0123)[ 6.672000 6.672000 3.336000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 3.336000 3.336000 6.888000 2.664000 6.888000 6.444000 3.780000 6.672000 6.444000 6.444000 3.108000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
265.5 221.45912 m
500 221.45912 l
500 178.95912 l
265.5 178.95912 l
h
265.5 221.45912 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
408.27802 1748.9489 m
(40#$05.!6!/)[ 9.336000 8.664000 8.892000 7.776000 8.664000 7.200000 7.116000 3.540000 10.884000 3.540000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
376.526 1763.2969 m
(:9;\('</&$=>?#$;6@#$A68@@@)[ 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 6.444000 3.336000 7.776000 7.776000 8.664000 3.336000 3.336000 6.000000 7.200000 6.672000 3.336000 3.336000 6.228000 7.200000 6.672000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
265.5 339.24786 m
500 339.24786 l
500 296.74786 l
265.5 296.74786 l
h
265.5 339.24786 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
426.41 1631.16 m
(1$.$2/)[ 7.788000 7.776000 7.116000 7.776000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
396.84799 1645.5082 m
(9:#$%&'\(\)*&#$:9;\('</&)[ 2.664000 7.116000 3.336000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 3.336000 3.336000 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
449.75 1846.4761 m
449.75 1841.8352 l
S
0 i
CM
382.75 118.16474 m
379.75 110.16474 l
385.75 110.16474 l
h
382.75 118.16474 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
449.75 1833.8352 m
446.75 1841.8352 l
452.75 1841.8352 l
h
449.75 1833.8352 m
S
1 J
1 j
0.60000002 i
449.75 1789.4353 m
449.75 1782.9409 l
S
0 i
CM
382.75 177.05913 m
379.75 169.05913 l
385.75 169.05913 l
h
382.75 177.05913 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
449.75 1774.9409 m
446.75 1782.9409 l
452.75 1782.9409 l
h
449.75 1774.9409 m
S
1 J
1 j
0.60000002 i
449.75 1730.5409 m
449.75 1724.0465 l
S
0 i
CM
382.75 235.95351 m
379.75 227.95351 l
385.75 227.95351 l
h
382.75 235.95351 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
449.75 1716.0465 m
446.75 1724.0465 l
452.75 1724.0465 l
h
449.75 1716.0465 m
S
0.64705902 0.84313703 0.82352901 sc
CM
265.5 280.35352 m
500 280.35352 l
500 237.8535 l
265.5 237.8535 l
h
265.5 280.35352 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
429.746 1690.0544 m
(,$/27)[ 7.116000 7.776000 7.332000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
444.85999 1704.4026 m
(9:)[ 2.664000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
449.75 1671.6465 m
449.75 1665.1521 l
S
0 i
CM
382.75 294.84787 m
379.75 286.84787 l
385.75 286.84787 l
h
382.75 294.84787 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
449.75 1657.1521 m
446.75 1665.1521 l
452.75 1665.1521 l
h
449.75 1657.1521 m
S
0.64705902 0.84313703 0.82352901 sc
CM
265.5 44.775986 m
500 44.775986 l
500 2.2759857 l
265.5 2.2759857 l
h
265.5 44.775986 m
f
/Cs2 SC
0 sc
1 0 0 -1 -67 1952 cm
/F1.1[ 12 0 0 -12 0 0]sf
409.526 1925.632 m
(!"#$%&'9/:;;-)[ 3.540000 8.892000 8.892000 7.776000 8.004000 3.336000 3.552000 8.448000 6.228000 4.452000 6.888000 6.888000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
414.36801 1939.9801 m
(/'\(&4-*5$6$78)[ 6.444000 6.444000 3.780000 6.444000 6.888000 6.888000 3.996000 6.000000 3.336000 7.200000 3.336000 3.336000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
449.75 1907.224 m
449.75 1898.8761 l
S
0 i
CM
382.75 61.123894 m
379.75 53.123894 l
385.75 53.123894 l
h
382.75 61.123894 m
f
0 J
0 j
1 0 0 -1 -67 1952 cm
449.75 1890.8761 m
446.75 1898.8761 l
452.75 1898.8761 l
h
449.75 1890.8761 m
S
ep
end
%%Trailer
%%EOF
