%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 765.000000 318.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.4 (Build 21F79) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 765 318
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 765 318
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /I put
dup 34 /N put
dup 35 /D put
dup 36 /E put
dup 37 /X put
dup 38 /space put
dup 39 /parenleft put
dup 40 /V put
dup 41 /A put
dup 42 /F put
dup 43 /parenright put
dup 44 /T put
dup 45 /C put
dup 46 /H put
dup 47 /S put
dup 48 /L put
dup 49 /P put
dup 50 /Q put
dup 51 /O put
dup 52 /R put
dup 53 /plus put
dup 54 /M put
dup 55 /U put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<





112BB8000020457D691844B800002B00
00>] def
/CharStrings 24 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/plus 4 def
/A 5 def
/C 6 def
/D 7 def
/E 8 def
/F 9 def
/H 10 def
/I 11 def
/L 12 def
/M 13 def
/N 14 def
/O 15 def
/P 16 def
/Q 17 def
/R 18 def
/S 19 def
/T 20 def
/U 21 def
/V 22 def
/X 23 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4124212 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E64FFC30D571E77C48863E0C382D48172FCB38E84ECA7A74ECC0BB53ED2E5B617A494596464142ED4E8C2C315DC45E8B7871ED6C146F4F984F1F5BE9E3EC978C8D0AB43D35AF1BDD954B10B60C2F64DB8255D02C0E4723527BAAAC422DA81A707EB833FB905A942FF237C79CAE395D7BE5AE232FF3828D56694E2DF238FEDEA1FF95A64AAB1E8552542CCBCB7F6F9B9CA2F402900F9A00C8D3A75B6FFC4C9FE7E9BBE247512DF922B4D4A11CCB129A2986EFF266C10A1D46CDCB8AD07A3055F93838B36CFEAFB3920943E77A07BE9B958CA7BFD2E386C8741B892E9AC73CF797D2920500A78F9E64911F48BEBA1BBDC0F96FFC41E6BFEECFD2648F53A23606987021B841038DCBB99EAF5D29797C279C9D50F670AC6210455BC010C054D955231AAE79270500DA3374695B9F81F31C56BC4945D2D8061391C72B49CC8DBFB33F1075604F232ACC5354D187586AFE2BD96F354BC2351F8586CCA83C7FEBD12A2E76F9E5CBE20FF1077E0C8C80CCDC5F5EB7E3F9673954CD731FA6679B25EAE9F77217AC70B0CBC2915850B22D56C49EC6989ABB1F53B4A8AE88E4075EE237862D1B14DC3B0280CE215009102EC0F0F026C3C5543FC402B5DCCFCBE31FB969FE7B4378C4B114371877A747A45989C7C543382AB88D4D104D7B394820202E05755C50DEA0ED7DA3A78CAF730AAFA585ACD71B39A1742A0A514EA32F45A9449F971BE22E0E59ED49F6CF615356EC60A32B2CEB87B803E60749BA8D3FEFEF7E74EA83B2CF33

5483E9F5A7B1C435DE7FA83FD4AC900E8D883B6C5CF13AF2CEC6CFB3F73C33F72917180032E185CA80BE57FEEFDA8380F8866EBE142957A5058435F73335E90633B57AA4528F34CD055A952803298AFBD66BAA3177FFDCBB60B71A1F4BFFBDE18FC5DC9BE2E062ACEA41B30C8B42E0895D8F37C4AAC19B7577CE8346C0AA7823F532A666C2C559E43FFF4B2C5C8CF20182CC8E902E3769EE6499CCA8E2A91DE4B7359D92CB4AFF7177F28006488087004C8D0A2D599B688313F3469F6C4FE146E8BF8D5E3C472C3CB51BF82C0939A763BB6B654D846EC0380F7425E35B0435E969C958B45977D0B2590E86E7296E554DC8BC7695F5104719593876DE55EED229ED2B0AB08C9BAEE94CD071A40137A6F2A496EE438582C778259639210DDCFF3CAA6BED268161071AA798B98BF0D1A45C1691B31B3A6D88A984763B3382A9924A49D4E32C98180B867403A64E3422669D170FC25521C43793AA495B08650DA21A0A9333C980508E13D756EF5D5E3DD2C450C7CD00545E5FC1765689F35F3996C9B5DD55F83953CF65F5E8DB4C036139B25A7C517249A54A19FA915166E2E57753F30D580431B4CEE892B8FEF515CFD8CFB9C7B89D75EC90C2CF8F2A3FBC0763B49BB41295564C8365720283A22658BCF50A3A0A3AE63EB3BFCA530127E2826A899A8ABFA1E208BD27968F3B5E982F42B46493E17905293D41C9140BD582BC747728E1471DD25E5EEB5A1977C7D46D7C33550F916336B4D5EF98B87029869D8E12B60AC7A8C5B64BE1D8439E979EE268B9CE18773A06BCF8B86AAE2FDE5A54C4A72F40EC7F932C81E51708395521DB4921C6E89327B77D9D2DA6E19404FD2C1698D3735EE25974B1763F09F3D4D82503EB6BF03613E96F04F1F182DAD65146FB97C7842A2EA44B040F6D40FCFB25952BB6474B338444AC12216C9F0A6E781E2B6F7360CF69A6BDDD9539DC823AC5A9EB32B75FDB499A459A0E1B092994ACEDADA600E96BFCCC1010EB204F38762E833EE8CBE6F5B6F16C2C9CC886568DDF8795AF0CE551A3AB8086A8F7A9143857D73F89500BCA73B4F2220C5CF920E9323A69596CDDDED3204DC8C1DD73B91488966145BCD5F6F6666C1078B2FA4B5480171E0A5620749B1A20B684D77B9A6191500854D74E15496609F7D6151ECF845FFEFE79901E9496972CBECA725ABD6A9C1440F2BB150DBF92DB06A4ABA9AECE4A190833395B1AF33F2DE90FCB42D0AED00AA02907B45CD75CCCC467A7059AB2BF19A2F4706AFE9EEDB04CC19A6E1885DADA85D2FDB4A3E092D2DF27CCFE03F8DBA922148C0A84EB3344E6CAB17A4B2AADD88C6CAB3C002B2B338BC85C7E8115C7F9F41C08A3C7FCDE5FF53C6FE70009D176C0C4D2DDA522E2B9E099BA7C029D5F9512845ADB4C17384ABBC0DAF5E72B4AE40EB78FBD8FDB2C495197196A07201A8C57C1
79EE5758DC94F40B44574708C2530B44E1A54FADB10C839480C3F832ABD054F792C0DD7360D5788F775DB39488D5B521955155E8B05C33EB081CA4DB1C208DA897403B0D9B4FBD2F483EFF8429BE298025BB261B2A2AF2DF301B45FE977A152EE64C4326DF7A939C03F632829442B5628D596CC08725F679911CE3DFEFD47F83CEE4FCE5B54A0FCF3BDDA9966031BD7609E047722C7C4A09C3F3DDFE9392C4D0E3D3510F8BE16E552E054BBF1F01B8355C3E5867B281EBF05DEB1DD144FCA8A989A671A1FFDBEF05C8C0FD6CB36722B46FCC2ED23DB3C6C3AEF1C0AAFBC7202A9E38DF2B6D5DCC305AD905052C87C67E29F0E90795A4A57765B689C785889915FC711B5EC0A442D334D5DB535D446481F788B0BD09ECD5632FE13C38F4169AE4F8CBD8958BF2EEC78CF2CBC12A294DEEF50F05FF13E7AB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F1.1/HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /L put
dup 34 /two put
dup 35 /comma put
dup 36 /space put
dup 37 /f put
dup 38 /e put
dup 39 /a put
dup 40 /t put
dup 41 /u put
dup 42 /r put
dup 43 /F put
dup 44 /l put
dup 45 /o put
dup 46 /V put
dup 47 /c put
dup 48 /parenleft put
dup 49 /nine put
dup 50 /six put
dup 51 /parenright put
dup 52 /i put
dup 53 /d put
dup 54 /s put
dup 55 /n put
dup 56 /A put
dup 57 /S put
dup 58 /C put
dup 59 /equal put
dup 60 /zero put
dup 61 /k put
dup 62 /one put
dup 63 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<




0323130167FE63CE02CC66FB02CAFD95026BFD3600020024FFF5020A021100300042015CB800142BBB00380003000D00182BBB002A0003001700182BB8001710B80005D0B800052F4111000600380016003800260038003600380046003800560038006600380076003800085D4105008500380095003800025DB8003810B900200003F4B9001F0003F4B8001710B900300003F4B8001710B80031D0B800312FB8002A10B80044DC00B800014558B800252F1BB9002500083E59B800014558B800022F1BB9000200043E59B800014558B800082F1BB9000800043E59BA000500020025111239B8002510B9001C0002F441050089001C0099001C00025D41110008001C0018001C0028001C0038001C0048001C0058001C0068001C0078001C00085DB8002510B8001FDCB8000210B9002E0002F441110007002E0017002E0027002E0037002E0047002E0057002E0067002E0077002E00085D41050086002E0096002E00025DBA003000020025111239BA003100020025111239B8003DD030312506232226350E0123222E0235343E02373E0335342E0223220607233E0333321E0215111416333237270E0515141E0233323E0235020A16272127235D36233F2E1B1E313F21233F301C152129143648035502243C4D2C2345382207140B0F8A1034393A2E1D111B24142A3C2612020D252A2A25102237272C3823120607070D19181C2212062939304229120A1F382DFEF61E1C05C70C0B0709142520151D12081723291200000000010024FFF501FA021100230079BA001C000B00032BB8001C10411B0006001C0016001C0026001C0036001C0046001C0056001C0066001C0076001C0086001C0096001C00A6001C00B6001C00C6001C000D5D410500D5001C00E5001C00025D00BA0017001000032BB8001710BA0006002100032BB8000610B80000DCB8001010B80014DC303101332E0323220E0215141E0233323637230E0123222E0235343E02333216019F5805263B4D2C3D5C3D1E1F3D5B3B63730E5708473F283A241110253E2E3640015F2E432C152B4B653A3A61462668603C4220354424274938223600000000020024FFF5020E02CA0013002C00BBB8002D2FBA0015001600032BB8001510B8002D10B80022D0B800222FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8001610B8000AD0B8000A2FB8001610B80018D0B800182FB8001610B8002AD0B8002A2FBA002B00220015111239B8001610B8002CD000B800152FBA000F002700032BB8000F10BA001D000500032BB8001D10303137343E0233321E0215140E0223222E0205112311232E0323220E0215141E023332363733157E10243C



00>] def
/CharStrings 32 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/zero 5 def
/one 6 def
/two 7 def
/six 8 def
/nine 9 def
/equal 10 def
/A 11 def
/C 12 def
/F 13 def
/L 14 def
/S 15 def
/V 16 def
/a 17 def
/c 18 def
/d 19 def
/e 20 def
/f 21 def
/i 22 def
/k 23 def
/l 24 def
/n 25 def
/o 26 def
/r 27 def
/s 28 def
/t 29 def
/u 30 def
/y 31 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28036C9F7C25418575A9E4FF5238FB0A96C8EB4A71AB1BFC326B832B3CAE7389AB353E1CB8778BB6E199C572CB0E887D6D181024E8CEE3C62B756F5C59C95F356D9FA6EEFECCAF27C069F3C0560BE109D25D24FF2094B2C743A76E2AF23DE2B4AD6415127AE249AA98D648732EACB93FF91B2E62420BF208A869D582CF7690323A50C629D25DBBE2B80A39A6B7B930F810BADEE2A43F9671F1EEB99D7FA08C93AB55172DB4D4B59E29FC100B5928296B3BA46895BE9B67BB03DECA7C068BD6A67E8425A5F328FFFD1B37514F772082FCEF595DE6E1EDB84C4F7D2AF35EC7991E603F14AD1A478E0FB203DF812F3205994886AE33C6408B672858D7B4CC490A46D359D935197166CCB89EBA47312208148EC65B88F8A966F7FB30233E369F2016FEAF16E8797BD33A41EDB8DEC4351B9D45C4A009BD99B4E9E6534CC42A53C1EECDC5F913A40D5A4A38AFFC52B0FF197F4E72D9C43ECC14BAC04E0090900D39AA2CF639017A18CC9629737E44846BAADE7DE4B3682AAAEFD81CF1ACA9A6E0DFCBF90622B50B24644FE1D0D49792D3977AC211E1DBE57239F65927F6D6D9AFE729368872F4FE137648ACE4380155F7C0E9E489E6616B36954C3E735C8E12C9FC4DFE0D371E4510E0C65EF7A47B274EE3F76BB7239521FB8AFBB49369F20936A58F796227D2EC1DF9818C240C4E571011BC905C26A7E65BA5DD7558CE2198D206B26F1763A2CE3696A1085740A1F7DB2300C710D53A208FF5C4D918564E3AB1D74AC51B7CFCD
CC72EBF36968A9326CC9382C9E1CBBCF4DDCE6066157794C03598983F6CB0D5353CE4701431538085E872316092A9BA48A3D0EBB2C2A7252B723756DA43A9BBB150A465296E5A5427F1AD90F23A84EA834085C65F13212E9FFAA4637D497FC3BA42480C304F695143D52363E041BF3D08A78950D1DF7BECEF47A8A158094B855849E8CEB30F11AE48CF30CEC92453F49D143DA1812100231A5D7203A959548C2B2393801BDCD5F92C5DB96DAC5EC2BB0C114CDF51076FBADF201F0E85518A35427B0413642965C72CE4A54984D88DE8CDFCEEA6F8A01AFB7D4298AA74CD1DF6E70E9844DC0802AF5977617D35C2229CE9E889A31366B223A8781BEC5B03140323E205B0CED4F3DAA17B23C61BC1DA6ED0120B5E235E1190907D6BF7E608CF3831B55C78ACB318DFBB33886710AACEF70E210CC27395A1ABBE7571A0C0A55082E4933A41025E770563278D23928882F511DE7FAED484CEBC1BE480E8587F96A6A0C0474E999AA62175546E0EA57F82EAFA0B041A053600A4C7C690F516A4D0751684EF093B2190CD071091D6742F0EA993388841EF8F4723364378489CA20015A9B4709A0CC6A70EBBA7838F9A3B8DBFFB5133C2EF7AFE658055D06ADFD9F27459BC8E1FF6A77C8DA280DFE4B51ABE8BED3C287A2DB4F9E74E713979F9B27F137D3B2588AB33F1639943B0180BDAF5495253129AC29FA77BDC216E86C759F233703D6F96FDFCD660C15FE83D6D41C5A44027B50B707A3F27583ED4FC381AB93A5FBD47EF0DDA5FB1E0F48D1AB84BCE98527FB1564FF7B0BBA57D928BD5DFCED20339FD01C5A1C42DBECF38A18D97C0936830DF638A8C005B9F8D74E9E5D337DCC6350C735515628E8F4DDD0848061FD0E4A3EF668D69FB41C4190E281EAFEDEA56B831FA83E653D50B75FF97966816A5C9043197CC1898BE4E8DE61DCC09233A3D9C210CD7B87978D1F293B9E26F7464384EE9CAAF66826B707F930D19A57EBB577712C4DE3D4816B80460772F94C54648CE39325A183EC923B5E5ADE7C3DE54049099B82F77DD1949618204E0B343AB7244C6A59287284213FFE0C40391677A759836C94EC57D1A769CCBFC21509EA64B201A9BA9747156DD1512FF4990D3E073CD69F19A9245583613D19C8EF3CF73C0550909C341D5C31C1CE3E2B5A16C44063B36BDAEA65B63EB6874C98290F5C6188330FC29BEEB9F7E48A97B64FB6D2AC24C05DF4B8A0AF339159F79F3B677F097B54FC1946C3215FC7350990CE74D33531D7E3C0FB95B88185AED1BF0B1A8BC5EC3C75D3A914A4520055ACAB4F7D5168D06CEF96A1C55D29B06998E5353A20894D3802EE08E6C8B02E34290280500B86A91FE026C6B0547D628C59C31B18DED924AFD88F85141EE2CF8B6065ECEAFC9AF4126104CD6F50A95748960E8B9021BE1714C5463BE3E43F4E6F5B05A5948109


C683CB133C3871FE2F31E32D8C81FDC10488B7683FD9D1BBF2244E786D06C4C13AAD283D5825452718CEC842AD83D0D4E5A8881C5BCEFCFBF2A7EC771ABC045CA00A2FC43229CF13D9AEB6C30004C6D84C86960EE95ABE53F57FB7166E2890F3889092F9F703545980DE4DDD2ADAC08DA25C47C180952810174D08B4EDDE439878E9E812734D56367F5974EFC6DEF697EEBA624F6C859922A9DF60D51F47E945A593E98B46E142A01883850648FFA9A39D9E47531E6397143EDD0C4EFF3450B9C98E409978AADF2E76EF0EB1DC5819FD38B4A6951090824D4D1F59283954D9E92865F8CEFA45DD0A1F2E3E9761AEA7DA832CD67A60976FA2F310900A141292A2E794C7E9AF742E4331B41A3EFE995B0354F8E96D4884B833EFEBE002719C2D28EA040C0EB1E50152ED015565CB0B95192CC38D0D2A3366506565211E6D3FE67B84B3E1EF8CE44F59F1004BFF8A3E44A6727B4438696BFD4D97B8A86514794AD66A37497F0420EB255E11027CAEF4CDB12CDE9302C7215567D2D67691B1D6E84B8FBAC02522E8B6163034B8B7CCE3477B2B16F6E77D21C12FB5F83A77239A5DAF61D45F4F5302D3AFF17FE640F028CA701D9005DAD388D4D5EBF0B263B9FB2721B791E6897A284C18BEA8C902E62607B07BCC75C38DF63DAD7EF4719432095B7566BF2920E53F358BBA7C92D411FF87C0E1D84DAA04A30D4E5FCB0A07A17B4D1A564C1B027B58703E3194096FD4EB963AFAA77ED7CE8D3D66C0EB3BD64ACA7857360BC619A2CE80F4BA0E9DA84A91FAA8B435EC6BF692937AE031CAB25E3BBC8D3261DA50BC38E8612F166BCA16D3B2D7DA51797286D466CAE4FBC682700CEFEB67E5F25212CF589B779F96B4B661B81289BC513A45899303A267877008D705885798DACC1912EF538C465152DD46B5F2F1C32FB66C8189459F54BE23E74FA0B3EE98EC312F88976A30B60089D7E8C84588CFEFA523DBD5C85648D54AAC9CD46E3C14CA7754E0B92FBFFB79EEA9DC8A15A3505D7BD2C02649C85D15827B40E013CC1DC47D2CCB4762E3AF290F3C8282FA4945B3497BBE996B64EF75B94EAED2EDCBAB8EE279B1D252DF135DBAD4912F7DDB22A64B6E007C0DEB63A48E377D708A5CF6F4F88DBD300D36D24C70449CE3DE3FF12990DB1D8E193D9F2D704040B78BA7971FD9074F71DC2317104138602C0B3E65433418158A2B7B9FE6ED41105BFB31B7586D659268334D22626C9CC69B5D08D3B2FDCF51A6EEC6C8AD7FF6E42625A5B41379EC208A54796488E740A8DDC798DE9AFD703D52315AD3664D69FDAC5AA4576953098F9322F082E171A2C8B56271DFF217E8063754D04C13B07853F303EEA185E3DB3FECCB8CA7A5B7A547423495247F67784A028D2365D19E0EAD2642B191FB0CA7D0509940E60A58658439B79E0A24E1633700A2C90C85D9645A7448
B956A7F2474099D05554236C26BBECCB36A120859B6EA781CC7747D9C48DCD2976F4D9A52988B920C86436645FE4E26B123E58548DEE8072DCC0CB31D2A5F189B293851499E3805950E4D0B6C80822FCC27373777865804C4C98704EDC22CBED947F6D747F92FFDE768709B1669E90D95410305623A379E552584F972C4B4765A7967F2691C8323779BD5AD250D6C62CE8F9ECC38F61BEF3D9805828A7B2060D4D8FA95EBCFC22DC044C29E708DC227B963E5327CD0EED0AAB0799378462650B019612F4D5281EBAC96F052AC94D6D73CE2EA8A5A31BDF60E8DE53F870C14B39A9BB88A4CFB50E7B3A4347C21381A95E3F94E2135C3FB64CF0CCC4A02D010BCB1CE056A81499DC3A18834779CDEAC958726801D6BDD666FD89BD09F8EE9A6E14A84DA54BCF4D14EEB654D0B3D5768B7EA591ECF85240C627FD07CA4169F8D9ED77F94BE3862D26448959D854EE608D66B7E8A64AA43C7C148E61E63B199F116AD48D7F80002D27565867C1D6BA41DCE63F7620FEE8477BA3385E9B33C31098CADDCD5AC75476DCB743D04706F6E5DF2469DFED791E6838652AAFC855044D6FF0BC7E001EF759CBC069448DD3B5FE2E512B35621E09C867B4ACD307F59EECF2EF67DA9E65301F62CFAF98FDCD76D6B8A975941C11866D323BD7FA6AE0DD01D0EE219FA834487E3412EE8C5E56BE308220DDD9B117C5302BFA3293121F5D903EF12D02657D96B24BB9AE9E42500845C1570D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
q
0 0 765 318 rc
265 43.305389 m
499.5 43.305389 l
499.5 0.8053894 l
265 0.8053894 l
h
265 43.305389 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 2110 cm
/F1.1[ 12 0 0 -12 0 0]sf
497.306 2085.1025 m
(!"#$%&'\(\)*+)[ 3.540000 8.892000 8.892000 7.776000 8.004000 3.336000 3.552000 7.008000 8.220000 7.116000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
467.45599 2099.4507 m
(!"#$%&'\(\)*&#$+,-'\(.&/0123)[ 6.672000 6.672000 3.336000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 3.336000 3.336000 6.888000 2.664000 6.888000 6.444000 3.780000 6.672000 6.444000 6.444000 3.108000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
265 161.09415 m
499.5 161.09415 l
499.5 118.59415 l
265 118.59415 l
h
265 161.09415 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 2110 cm
/F1.1[ 12 0 0 -12 0 0]sf
512.24597 1967.3138 m
(*$,-.)[ 7.116000 7.776000 7.332000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
527.35999 1981.6619 m
(45)[ 2.664000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
265 278.8829 m
499.5 278.8829 l
499.5 236.3829 l
265 236.3829 l
h
265 278.8829 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 2110 cm
/F1.1[ 12 0 0 -12 0 0]sf
508.91 1849.525 m
(/$0$-,)[ 7.788000 7.776000 7.116000 7.776000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
501.242 1863.8732 m
(45#$546\('7/&)[ 2.664000 7.116000 3.336000 3.336000 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
532.25 1948.9059 m
532.25 1883.5171 l
S
0 i
CM
382.25 234.48291 m
379.25 226.48291 l
385.25 226.48291 l
h
382.25 234.48291 m
f
0 J
0 j
1 0 0 -1 -150 2110 cm
532.25 1875.5171 m
529.25 1883.5171 l
535.25 1883.5171 l
h
532.25 1875.5171 m
S
0.64705902 0.84313703 0.82352901 sc
CM
530 43.305389 m
764.5 43.305389 l
764.5 0.8053894 l
530 0.8053894 l
h
530 43.305389 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 2110 cm
/F1.1[ 12 0 0 -12 0 0]sf
764.80798 2085.1025 m
(!"#$%&'12+)[ 3.540000 8.892000 8.892000 7.776000 8.004000 3.336000 3.552000 8.004000 9.336000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
732.45599 2099.4507 m
(!"#$%&'\(\)*&#$+,-'\(.&/0123)[ 6.672000 6.672000 3.336000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 3.336000 3.336000 6.888000 2.664000 6.888000 6.444000 3.780000 6.672000 6.444000 6.444000 3.108000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
530 123.89175 m
764.5 123.89175 l
764.5 81.391754 l
530 81.391754 l
h
530 123.89175 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 2110 cm
/F1.1[ 12 0 0 -12 0 0]sf
755.77802 2004.5162 m
(34#$450!6!,)[ 9.336000 8.664000 8.892000 7.776000 8.664000 7.200000 7.116000 3.540000 10.884000 3.540000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
724.026 2018.8643 m
(546\('7/&$89:#$6;<#$=;><<<)[ 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 6.444000 3.336000 7.776000 7.776000 8.664000 3.336000 3.336000 6.000000 7.200000 6.672000 3.336000 3.336000 6.228000 7.200000 6.672000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
530 278.8829 m
764.5 278.8829 l
764.5 236.3829 l
530 236.3829 l
h
530 278.8829 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 2110 cm
/F1.1[ 12 0 0 -12 0 0]sf
773.90997 1849.525 m
(/$0$-,)[ 7.788000 7.776000 7.116000 7.776000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
766.242 1863.8732 m
(45#$546\('7/&)[ 2.664000 7.116000 3.336000 3.336000 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
797.25 1986.1083 m
797.25 1957.9219 l
S
0 i
CM
647.25 160.07812 m
644.25 152.07812 l
650.25 152.07812 l
h
647.25 160.07812 m
f
0 J
0 j
1 0 0 -1 -150 2110 cm
797.25 1949.9219 m
794.25 1957.9219 l
800.25 1957.9219 l
h
797.25 1949.9219 m
S
/Cs2 SC
0 sc
/F1.1[ 16 0 0 -16 0 0]sf
239.5 1816.1472 m
(/-\)")[ 10.384000 11.856000 10.960000 0.000000 ] xS
517.354 1813 m
(\(\)*)[ 9.344000 10.960000 0.000000 ] xS
785.69 1813 m
(12)[ 10.672000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
532.25 2066.6946 m
532.25 2001.3059 l
S
0 i
CM
382.25 116.69415 m
379.25 108.69415 l
385.25 108.69415 l
h
382.25 116.69415 m
f
0 J
0 j
1 0 0 -1 -150 2110 cm
532.25 1993.3059 m
529.25 2001.3059 l
535.25 2001.3059 l
h
532.25 1993.3059 m
S
0.64705902 0.84313703 0.82352901 sc
CM
530 204.47812 m
764.5 204.47812 l
764.5 161.97812 l
530 161.97812 l
h
530 204.47812 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 2110 cm
/F1.1[ 12 0 0 -12 0 0]sf
777.24597 1923.9298 m
(*$,-.)[ 7.116000 7.776000 7.332000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
792.35999 1938.278 m
(45)[ 2.664000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
797.25 1905.5219 m
797.25 1883.5171 l
S
0 i
CM
647.25 234.48291 m
644.25 226.48291 l
650.25 226.48291 l
h
647.25 234.48291 m
f
0 J
0 j
1 0 0 -1 -150 2110 cm
797.25 1875.5171 m
794.25 1883.5171 l
800.25 1883.5171 l
h
797.25 1875.5171 m
S
1 J
1 j
0.60000002 i
797.25 2066.6946 m
797.25 2038.5083 l
S
0 i
CM
647.25 79.491753 m
644.25 71.491753 l
650.25 71.491753 l
h
647.25 79.491753 m
f
0 J
0 j
1 0 0 -1 -150 2110 cm
797.25 2030.5083 m
794.25 2038.5083 l
800.25 2038.5083 l
h
797.25 2030.5083 m
S
0.64705902 0.84313703 0.82352901 sc
CM
0 43.305389 m
234.5 43.305389 l
234.5 0.8053894 l
0 0.8053894 l
h
0 43.305389 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 2110 cm
/F1.1[ 12 0 0 -12 0 0]sf
250.354 2085.1025 m
(/-\)"&)[ 7.788000 8.892000 8.220000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
230.914 2099.4507 m
(&7\(4\(?0%&'\(\)*&3)[ 6.444000 6.672000 3.780000 2.664000 3.780000 6.000000 3.108000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0 102.19977 m
234.5 102.19977 l
234.5 59.699768 l
0 59.699768 l
h
0 102.19977 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 2110 cm
/F1.1[ 12 0 0 -12 0 0]sf
235.804 2026.2083 m
(*7"-,!3")[ 7.116000 8.892000 8.892000 8.892000 7.332000 3.540000 9.336000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
202.45599 2040.5563 m
(!"#$%&'\(\)*&#$+,-'\(.&/0123)[ 6.672000 6.672000 3.336000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 3.336000 3.336000 6.888000 2.664000 6.888000 6.444000 3.780000 6.672000 6.444000 6.444000 3.108000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0 161.09415 m
234.5 161.09415 l
234.5 118.59415 l
0 118.59415 l
h
0 161.09415 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 2110 cm
/F1.1[ 12 0 0 -12 0 0]sf
225.778 1967.3138 m
(34#$450!6!,)[ 9.336000 8.664000 8.892000 7.776000 8.664000 7.200000 7.116000 3.540000 10.884000 3.540000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
194.026 1981.6619 m
(546\('7/&$89:#$6;<#$=;><<<)[ 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 6.444000 3.336000 7.776000 7.776000 8.664000 3.336000 3.336000 6.000000 7.200000 6.672000 3.336000 3.336000 6.228000 7.200000 6.672000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0 278.8829 m
234.5 278.8829 l
234.5 236.3829 l
0 236.3829 l
h
0 278.8829 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 2110 cm
/F1.1[ 12 0 0 -12 0 0]sf
243.91 1849.525 m
(/$0$-,)[ 7.788000 7.776000 7.116000 7.776000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
236.242 1863.8732 m
(45#$546\('7/&)[ 2.664000 7.116000 3.336000 3.336000 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
267.25 2066.6946 m
267.25 2060.2002 l
S
0 i
CM
117.25 57.799767 m
114.25 49.799767 l
120.25 49.799767 l
h
117.25 57.799767 m
f
0 J
0 j
1 0 0 -1 -150 2110 cm
267.25 2052.2002 m
264.25 2060.2002 l
270.25 2060.2002 l
h
267.25 2052.2002 m
S
1 J
1 j
0.60000002 i
267.25 2007.8003 m
267.25 2001.3059 l
S
0 i
CM
117.25 116.69415 m
114.25 108.69415 l
120.25 108.69415 l
h
117.25 116.69415 m
f
0 J
0 j
1 0 0 -1 -150 2110 cm
267.25 1993.3059 m
264.25 2001.3059 l
270.25 2001.3059 l
h
267.25 1993.3059 m
S
1 J
1 j
0.60000002 i
267.25 1948.9059 m
267.25 1942.4115 l
S
0 i
CM
117.25 175.58853 m
114.25 167.58853 l
120.25 167.58853 l
h
117.25 175.58853 m
f
0 J
0 j
1 0 0 -1 -150 2110 cm
267.25 1934.4115 m
264.25 1942.4115 l
270.25 1942.4115 l
h
267.25 1934.4115 m
S
0.64705902 0.84313703 0.82352901 sc
CM
0 219.98853 m
234.5 219.98853 l
234.5 177.48853 l
0 177.48853 l
h
0 219.98853 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 2110 cm
/F1.1[ 12 0 0 -12 0 0]sf
247.246 1908.4194 m
(*$,-.)[ 7.116000 7.776000 7.332000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
262.35999 1922.7676 m
(45)[ 2.664000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
267.25 1890.0115 m
267.25 1883.5171 l
S
0 i
CM
117.25 234.48291 m
114.25 226.48291 l
120.25 226.48291 l
h
117.25 234.48291 m
f
0 J
0 j
1 0 0 -1 -150 2110 cm
267.25 1875.5171 m
264.25 1883.5171 l
270.25 1883.5171 l
h
267.25 1875.5171 m
S
ep
end
%%Trailer
%%EOF
