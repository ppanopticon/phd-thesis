%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 765.000000 397.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.4 (Build 21F79) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 765 397
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 765 397
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /I put
dup 34 /N put
dup 35 /D put
dup 36 /E put
dup 37 /X put
dup 38 /space put
dup 39 /parenleft put
dup 40 /P put
dup 41 /Q put
dup 42 /parenright put
dup 43 /O put
dup 44 /R put
dup 45 /plus put
dup 46 /L put
dup 47 /M put
dup 48 /T put
dup 49 /S put
dup 50 /C put
dup 51 /A put
dup 52 /V put
dup 53 /F put
dup 54 /H put
dup 55 /U put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<





112BB8000020457D691844B800002B00
00>] def
/CharStrings 24 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/plus 4 def
/A 5 def
/C 6 def
/D 7 def
/E 8 def
/F 9 def
/H 10 def
/I 11 def
/L 12 def
/M 13 def
/N 14 def
/O 15 def
/P 16 def
/Q 17 def
/R 18 def
/S 19 def
/T 20 def
/U 21 def
/V 22 def
/X 23 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4124212 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E64FFC30D571E77C48863E0C382D48172FCB38E84ECA7A74ECC0BB53ED2E5B617A494596464142ED4E8C2C315DC45E8B7871ED6C146F4F984F1F5BE9E3EC978C8D0AB43D35AF1BDD954B10B60C2F64DB8255D02C0E4723527BAAAC422DA81A707EB833FB905A942FF237C79CAE395D7BE5AE232FF3828D56694E2DF238FEDEA1FF95A64AAB1E8552542CCBCB7F6F9B9CA2F402900F9A00C8D3A75B6FFC4C9FE7E9BBE247512DF922B4D4A11CCB129A2986EFF266C10A1D46CDCB8AD07A3055F93838B36CFEAFB3920943E77A07BE9B958CA7BFD2E386C8741B892E9AC73CF797D2920500A78F9E64911F48BEBA1BBDC0F96FFC41E6BFEECFD2648F53A23606987021B841038DCBB99EAF5D29797C279C9D50F670AC6210455BC010C054D955231AAE79270500DA3374695B9F81F31C56BC4945D2D8061391C72B49CC8DBFB33F1075604F232ACC5354D187586AFE2BD96F354BC2351F8586CCA83C7FEBD12A2E76F9E5CBE20FF1077E0C8C80CCDC5F5EB7E3F9673954CD731FA6679B25EAE9F77217AC70B0CBC2915850B22D56C49EC6989ABB1F53B4A8AE88E4075EE237862D1B14DC3B0280CE215009102EC0F0F026C3C5543FC402B5DCCFCBE31FB969FE7B4378C4B114371877A747A45989C7C543382AB88D4D104D7B394820202E05755C50DEA0ED7DA3A78CAF730AAFA585ACD71B39A1742A0A514EA32F45A9449F971BE22E0E59ED49F6CF615356EC60A32B2CEB87B803E60749BA8D3FEFEF7E74EA83B2CF33

5483E9F5A7B1C435DE7FA83FD4AC900E8D883B6C5CF13AF2CEC6CFB3F73C33F72917180032E185CA80BE57FEEFDA8380F8866EBE142957A5058435F73335E90633B57AA4528F34CD055A952803298AFBD66BAA3177FFDCBB60B71A1F4BFFBDE18FC5DC9BE2E062ACEA41B30C8B42E0895D8F37C4AAC19B7577CE8346C0AA7823F532A666C2C559E43FFF4B2C5C8CF20182CC8E902E3769EE6499CCA8E2A91DE4B7359D92CB4AFF7177F28006488087004C8D0A2D599B688313F3469F6C4FE146E8BF8D5E3C472C3CB51BF82C0939A763BB6B654D846EC0380F7425E35B0435E969C958B45977D0B2590E86E7296E554DC8BC7695F5104719593876DE55EED229ED2B0AB08C9BAEE94CD071A40137A6F2A496EE438582C778259639210DDCFF3CAA6BED268161071AA798B98BF0D1A45C1691B31B3A6D88A984763B3382A9924A49D4E32C98180B867403A64E3422669D170FC25521C43793AA495B08650DA21A0A9333C980508E13D756EF5D5E3DD2C450C7CD00545E5FC1765689F35F3996C9B5DD55F83953CF65F5E8DB4C036139B25A7C517249A54A19FA915166E2E57753F30D580431B4CEE892B8FEF515CFD8CFB9C7B89D75EC90C2CF8F2A3FBC0763B49BB41295564C8365720283A22658BCF50A3A0A3AE63EB3BFCA530127E2826A899A8ABFA1E208BD27968F3B5E982F42B46493E17905293D41C9140BD582BC747728E1471DD25E5EEB5A1977C7D46D7C33550F916336B4D5EF98B87029869D8E12B60AC7A8C5B64BE1D8439E979EE268B9CE18773A06BCF8B86AAE2FDE5A54C4A72F40EC7F932C81E51708395521DB4921C6E89327B77D9D2DA6E19404FD2C1698D3735EE25974B1763F09F3D4D82503EB6BF03613E96F04F1F182DAD65146FB97C7842A2EA44B040F6D40FCFB25952BB6474B338444AC12216C9F0A6E781E2B6F7360CF69A6BDDD9539DC823AC5A9EB32B75FDB499A459A0E1B092994ACEDADA600E96BFCCC1010EB204F38762E833EE8CBE6F5B6F16C2C9CC886568DDF8795AF0CE551A3AB8086A8F7A9143857D73F89500BCA73B4F2220C5CF920E9323A69596CDDDED3204DC8C1DD73B91488966145BCD5F6F6666C1078B2FA4B5480171E0A5620749B1A20B684D77B9A6191500854D74E15496609F7D6151ECF845FFEFE79901E9496972CBECA725ABD6A9C1440F2BB150DBF92DB06A4ABA9AECE4A190833395B1AF33F2DE90FCB42D0AED00AA02907B45CD75CCCC467A7059AB2BF19A2F4706AFE9EEDB04CC19A6E1885DADA85D2FDB4A3E092D2DF27CCFE03F8DBA922148C0A84EB3344E6CAB17A4B2AADD88C6CAB3C002B2B338BC85C7E8115C7F9F41C08A3C7FCDE5FF53C6FE70009D176C0C4D2DDA522E2B9E099BA7C029D5F9512845ADB4C17384ABBC0DAF5E72B4AE40EB78FBD8FDB2C495197196A07201A8C57C1
79EE5758DC94F40B44574708C2530B44E1A54FADB10C839480C3F832ABD054F792C0DD7360D5788F775DB39488D5B521955155E8B05C33EB081CA4DB1C208DA897403B0D9B4FBD2F483EFF8429BE298025BB261B2A2AF2DF301B45FE977A152EE64C4326DF7A939C03F632829442B5628D596CC08725F679911CE3DFEFD47F83CEE4FCE5B54A0FCF3BDDA9966031BD7609E047722C7C4A09C3F3DDFE9392C4D0E3D3510F8BE16E552E054BBF1F01B8355C3E5867B281EBF05DEB1DD144FCA8A989A671A1FFDBEF05C8C0FD6CB36722B46FCC2ED23DB3C6C3AEF1C0AAFBC7202A9E38DF2B6D5DCC305AD905052C87C67E29F0E90795A4A57765B689C785889915FC711B5EC0A442D334D5DB535D446481F788B0BD09ECD5632FE13C38F4169AE4F8CBD8958BF2EEC78CF2CBC12A294DEEF50F05FF13E7AB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F1.1/HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /L put
dup 34 /two put
dup 35 /comma put
dup 36 /space put
dup 37 /f put
dup 38 /e put
dup 39 /a put
dup 40 /t put
dup 41 /u put
dup 42 /r put
dup 43 /F put
dup 44 /l put
dup 45 /o put
dup 46 /V put
dup 47 /c put
dup 48 /parenleft put
dup 49 /nine put
dup 50 /six put
dup 51 /parenright put
dup 52 /d put
dup 53 /i put
dup 54 /s put
dup 55 /n put
dup 56 /A put
dup 57 /S put
dup 58 /C put
dup 59 /equal put
dup 60 /zero put
dup 61 /k put
dup 62 /one put
dup 63 /y put
dup 64 /B put
dup 65 /E put
dup 66 /T put
dup 67 /W put
dup 68 /N put
dup 69 /colon put
dup 70 /x put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<









00>] def
/CharStrings 39 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/zero 5 def
/one 6 def
/two 7 def
/six 8 def
/nine 9 def
/colon 10 def
/equal 11 def
/A 12 def
/B 13 def
/C 14 def
/E 15 def
/F 16 def
/L 17 def
/N 18 def
/S 19 def
/T 20 def
/V 21 def
/W 22 def
/a 23 def
/c 24 def
/d 25 def
/e 26 def
/f 27 def
/i 28 def
/k 29 def
/l 30 def
/n 31 def
/o 32 def
/r 33 def
/s 34 def
/t 35 def
/u 36 def
/x 37 def
/y 38 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2803DAE628F29CF7415E6BB758A966C8CE165C4DA455AF6C4251FBCD8432F42D48310BE617B389B8A60DFC621E5089CAFE7AF337869CE23ECE217795045118EAB83F4D41C74E9966468767CAE60D12B0711097FE488178AC9915AE970BE8533554CDA80625515C46C2CE59A3CA4FB5F4DB6A9DF42F290E0EA490B8AB6098B619F534476EDE13DEFDE18DD74F30A4556ED435302EFC7FEDAF4A6F46606C7D71EECC5079BB7FF9BA3D219D0471022E5AE67B0FA6903E70DF292BBFDC05075A7E67FAACA12E006904C7B0596AB7EB18BC262461B39EAAEB890EC99E6466E93DE52DD42EA13E9EEDEB4FDF4697426906A984BBB61912743CE30B8432AAAA451AAB9FEA9A32151DD72C16DA27CEE3BBD5959585A99CD9ECF60AC5BAEC312ECDB60B9632D0AFDD149CA948A6CF76DF28BCC711B404445036558FA53CDCB84BE4D12EAFA15D4736F5EEF36C266806124F5C477F1207472C0C9D3AB70460B02B4B4923B41613A0FE69198776B3635C9BBB566EAC2E4B214D9332F06BD3FB058D376DD65C64A5BEF19855EF0E7A27D811379535532EB43280EC29A158830B571D1B6487094C58508A9A2843CFFD0C36C8D4DE4EA4D444AC96208A516DC831866D1928BE4370C0BD2AFE3BD45528BBD399DDA3D92000E3F4D439964842F831E5AE1E3323B3DDB9BA9879E645ADD7AA421BC902B7FA302B93C21BEF66C36C5E290F891D38C7066863F4E48CA3DEDC8A3E2F8D6150AAE75A0BD9BE61F9DDE7BE26C4838D4947C37D92DB6
423A836A85C0427D44F1C3E9FC38B34591971C37F92A0F0D03CA88817CE705B6941AB93DF7759EE2663CFCE9A60CE663786C8D37B35DB65EA217701FFA99F1D312386BD3D7AD2F68EF96B3A5C5B439105882146F30FC15475404BDA4ACBD7B1FF5DDD31727151E32B8FEDD68CFF60E44B9200988716D893862FB0864F1FB8B6DAA943AFEECE3ADDECE2097965EBB516A1624E518CADD980A1977BCEE95A4AE5F981C82056E0C02F9C4CCE202D9EE9637F0EE2E3D1266AF8596E9A4DA65CA088B1E9D89E3BED64DAB3232A782BE18E71CEE2A2C2269D30A706EDE3F8002D397E87D9C8F80439E7FEF75089F308611E8A996C0372218EA4C0ADF4076911F4704A7BBAEE313BCAF107BC2039467559286A53B0561CC56C1AA587298C78422925D0E1B82CFBD8A541E3D54875EE963B02AEDE57972A6C3637FC92C0FC6A9348CB7DB541A4FD4B0159DCAB907558A7D50B0AA938771FF309BD6CEBCC0A7AD3A3D502EC4940CD71612D434594BDDB7D41CCAE08BDF829C257CE83A3F24A6C80B513D3EA8D3006B1EECCEED592F3504EDB80AAF20F2D916EED575F460EC783B520C625D6EBEEA551B2DE8ADFAC75D1FB6B37028AC5C7357FB8B1B74774F98C15DD01A68F3D132A984B841DEEA2723297B92D635BC1B8F84EFF7EDE38546AE7111F3B3DA69466E083FBE1191BB15CC09510F5871051B77846A3A44192B10A948DD9AFAFE902090A69E21E9483A95C9E9B9946E0A2422ABF047770A01FD6A19ED5D53F3DCA0C6C8E4015D3F5EFBCBEC23868A9655E182A9DAA03069830CEDDD531B42828344A7CED0780DF4B8E8D1CD82ED4C021F78669AE78956C4444E88EFA330CA5A4DCE0A9D2E6C45B884D0CEE2B3561EF7E10ED511A124C1CEC42166A2A6E03113E83E649555222FAAF6C594E373BA3DDC90BC61E00EC5A568340276C3248C59555340BF4646408DB41EA205B8F2C299540728CA2CAF334B5D2D0AAF52280822275624CD810D4B9CAB0EDFD3692EFE0F2687817A220B5D967695083F807B122B1D9A2F69BE9B687A173455B53F68DDF8BBC42565CD2208C069AB825B16D61CE5D68BF702869152B97751620EA07A76C7A040CE21ACA7ED0A38015D67B428ECEF77B9FBF741102C42ECB7B22CC88821798A3E459AADF435B6BB4A9F8FB032E72397B0CBAD741953037149D947D80BF6FBFEC300BA17C9FC2368FEB6780E1498DD3440CE8EA91BDB684AAECC80A42FDCACACE71FEC7087BBB2C4C4D968A4703D121BBA15579A62574F671BB30C6460C1B66701DD783D66CFAB7304AAD0FD4F3CA0D7819907D795B717288A2F62105DD791D9DB8F1547A01DA9048F811865C78537346D84AE415DFEF96D8A8F41ABA20F734988F9078B1D06F93851D47F4CE922F13277C9431E97C7287DAD05312E5D0689694978C5B84AB9667AA89980ACE69E9B32C3

FF3308799437B3E5D27E811B62A452CE652643A6167EBF3F9559B01741B8A0303C9D9C9154C0E7747D4ED6EA6F2879BE33C4AA3DE1FF00AA60A360508EECA7DB37B386188BE314C2FF29B66C5EBBB29A5D0ADC375D6F8193023C07CA8353C5AF19AB92F60BD38E681669E287F20045AD14CD35338A5B44412119C10E4A47EB6B4BC8C3B653C3D4252ACD320C5C063DBC3E62C4F4A1682C21AD17033C5555BB6B93939A770AA44C42BC1D54F132C06628F6815C4055BDAA3450C69CEE576681F835B3FF9FF4909CF5FE62FAF8452A16E8E8CFFF7D27ADC8459643E613E884F1EB1393C5EC8D62ABBC83D015F5AF3150C462758E824146D26B1724823A4A05AF18159A82DFFBE165C11A139E69B5E9922CFADF542969CB604FA2002D6631FA6B8EF5A986E15CB4E313E21E8B3044135084321B58112A88FA11FDF40801335E65173F9A36D36F9AF13A25B97985A1DF65FE464C36E93671E88969CDE29A1F2F0B333F076D8F317BD34751735C976EF3F7A55E1D414D957F1413912576C7D6E9FD1BFB11B1D373C2D6F907228C657FE1B6005D5CCDBA56110E64AAB57324886D1E59C0612590A3F237DBE7816D0D312A29AD031BEC532138CB75F187E9C5831DFA8545203CA7ECCF0B028E2842C2E701087CE73A5BDA2EA5CBB18BA5DD778C9FB265CDE06C8FC59447C7E52F2B8A3722C0B6AC77C4FBE6EE4D59F98C2395D1308606CD6C9E451E823DB286AA7DB08F97668E6D72D41E360BAF7530142CBB4EA3D2DD990EB68F1E39450B4C27AFBFB10D7D8BE361FEE961081A4116EA446F464F7BD8002619A5CBF8ECFEA476B0A6C47800506C352383372F7214692A1324D3CDB994E53C7460E12E65F7F9FE4F5565720BCCCD161C3915C1B6A7933E9C8996AE0FB0B8A7412D35A570325617A9917E3FDB64EF50698D414C85474EC086031A46013EF26AE3A67379DDF04A5930ADE358B7E85DBD5B9B1E26776B627B87F0F002C25147C67815B0A5B9341D65B76EC5E367AD17A67390540A370EA7260B904805B95797B57F0E4946400280A26751EE5B3C47EFE252EB1069C0113739F0678CFC85A4E7A59A4E4C9ED5E2AE68BC8A5A9B83579737784453FFB2597AEA21E9DE9DCFC8C801F7C678E56BF8E1C96961B9D8A8894B682DE7F9BD882866C2F6C57B83D854AAB1A566F8A99AAA7776DE5AF5622B17653711A53C786D4A1214967C0CBA6AB797F729BAC7072D0D1C69D9008449BCFD7E1637156421C2905D49650B7FB02A659F5B3BA8EC633C6DF4E57F1CC8D31B9994B29C7AD1D2E1AA82632D89764E757ED40B7B1F466B7DFD0EBED7645620A0170E6045216F4F9C7FCC4B15D54F828F86D83B4DE8C82C8CC65BD9CCC025C30402EA43E0981846806AC55DEA6B746915AA43C0B2C8B13C03A7123F85E45221CF20763848DCB5A46ADA8A093E08DB1B58A0
67ACEDC331417FC52B473AC123D2A13E0A2AD700494C88F4D7D7DC7EDED7AF9FC0CC5A3C1E888D35BC2C0EF25A019733144188D55008818B96F967BABDABFC43C6B06F40CAE8F819725F1AEDF426729A431BFBAF8E024ADAE8F821C5602B1C88273F93A9FB63087DAB87093546C67361A6A24C2D3F6B76BF5146EDE1F4DDF60480FD3097313048E147DB93B30F8497FBE731EFEC779298A9153ABCDA1240BFC48ABC2364D03816E23F5FD4392FC5CF0A146C3243C0845667EA626366F02A53F7BE33483E4DE8C4274CBE92C9AAA30DF083C25EFAF5F954C1F2BC77075934713381CDAE59D6FB6F1DE109040B60F9C900F9F46B24020AC9856FE51BF89BDF7F85125D37D7A87E929DEE423C30E6AC4C640A30D4C81D8E4E87092A8672EBADA5EB2FC986E5F8A15C29E270EBA54E1B9D36D0F9E7466C03CEF17A39891BE4F17A2B786DD657E769A7EB66743488BE34776312B06422889EF3623E6CA32E5CFE4004817ADA19839A7A55B4AF5A28CDC0CA358030424EDB8CD2FC0FB181794A121399135D7C6C3A1156C93F423BFE392C03C7571B1CDE2F249EF29E9BB03516F5B604E3B21EA18531DF817D11871FD028D2BB20916338A7682DB419431EF2BEC9C90DF77FF3FCDE53F23C0902A939CFD8F9443A39DC85D53CE4EF38CC81197832B35AD04B85A3EBA761DE07D40D610A045EE81FC2F3A794BCE6267EC9149D0833E6E36E089E55C78511CEA21C22E7E2994A94B1C6AF7FDA3323A38CF7679BCED39AD88B9ACCD206DC9E8454FDD0D4D2662C75FFD0E9AAF9AF81ADDB200BE16532A4154F6B082D71C171948C0CFD273C72611D2B9763594DAB5040B4514D125A58A84771A246A4BC438C44412E9FA1765BEBF413341745172FE42A026C6F47FB46518D749D828A906DC6386A16AC7B73A775A94D9070D1D8018F0BEAA3D9E13FBB384BFDDBA894142F3B678A569C3F217A622CED86F7833C90247524634273B04ECFFCB87A8FF2B1B8EA03E8F340D7839341D19889373230E41E3F04C046FF526E0362CF064F9D01A863561488C9CC90D2A5280E7EF4CD098B30667970A43DCD07D40B53B699A82060E056A686975BDC75597742F8CAFC38AB4A94696A93F41E1A61C8F3BC5EE3702430707281E429A0C0B107CB1EA0E82C317AC98026F9272C3E68071A189502842BEEBFE7303473F791D8E48DD235E5B3627CD36FFCFEC7B341DA5B3F98C49B2B91FA00C1C4FB0017093822C68D9C6E279C8840B89DAA809634F28E97BEFF29E64BBA1236D913906594F0A0576D34B03D4AB714260EA4FCAA6613BE390A039AB7C2B933A454AB5D709E129A979982BE71027D5C1B8D85ADBAC335894E10F55199853F60FB16DA1EB633B76C13C0BBB34D03DB7784AE09676D84684CBBF4863FCA1464EB2D6B2AC9A5E99CD8E4692842DA2CDDAF526E5613C1F02C92
B8C240AB9A12FD4F166371908966F4649D33B92DE9E2CD59D3195D3842D840D972CE4E2DA372B7945D2687C33D1BE9FC700D83C2314B439E226FA824650953881364CD4D892ABAEB7392564397ADEC79048C59D41DD447DBCD08ED937D3994F68F468DFC23ED87255BB5287388DA7738BDD2BE00453413962EAE59B7D109D89FE61FF2A0E34AEC94BBE5C4F5D978D4557BE4868B03719EF74C836F13AA936B26794BDFE569331A29BE829032AB5FCA0EB0A662B650EF169B998F058B0C9F9F00ED943E1273C79DDF5F9CFDD92A0B859029E15E7E5A624173231ADB912473C38F119A852E89230C6B052F457889382B3EC40D1396C024551D9F2F72085743C5323B749E5BB251994BA0FAAADB4DFE32276E38B86B6E29FCDF3ADA179F9FA0AE3005E99CEB036981E355E87A8423EA1B225C4E255F5E10E09EF3EA38B3044C16B2C7A5BFACFD090D60A957A8BEA3B146E220A2CC0816BAA0CB1B4D37C50D99AD26E7FA2D603DE3AF6B3B5B3616C463939CF8082BE2BDE2788AE6FAA1823951A98031F1DBD4C79A97DB32770ECEEC410B378A7342C649E02F065BCF9D2F0850BEE163649031E70225AE14505FE03DAED88975544967F8935172B3508E7ECBB65AC8CD96B87038FD0C0B33A877031A50EDA732C26ADC94D6A1686D0297FE52DE7869090CF4DEA5A0BB72A9118CD2C70DEDD9FF8F0E1E2A271C45AB5AB292F13E291FCA988E8BECFF4D9787EF299A0D53938FB01E198C12B7D81491055986ABA16C148D19B23E6FCEA026A5146D43AAAB5E7DEA9651031210451417450E644B2F97B6C15A6F0E2BE56FF6256D04D5E1235598C237C13F1E3FFE009476117BD0601954575B46B64C6ADD0B8FA15C1FB1EDEB8C2269F08705AFEE67E4B5F3BAEA762C1615014BDE198069D9FC32D2450546085970F9603611FCCEBA00D656D478BFD04F6DF186FE72F51B7F115E7FCC5A334C91F51D3F68A4DEE4F051E3464A3D8D5EDC32BA8B719B4CD4C60078F5C2286D64D1993F0C558FE369BC6CC874352A03EAA42180ED587C1EC367C00D30988080298DCBCBE50EC2C5AA98841E7B2F420E3E299C84E325C4C687D8CA0302C3F66F57FA6A22252DB3DB0CDAC8E8EC193A3A152B3AA5861E39B8D42A19CBF8B541762C31993B0A35F8D75CA0A825284C8D6B7CDDC54B67FEB84831FDB3EB609EEA81E7E3F8C28EAB972756DD9340143C0E54CAB0BBD30F7F3C93A80096E699B89C176A871DD1A4F7770E9F733293CC4665E106E5BEDA2E04FE5EB7487EC11A46D1F1CF433774972D12C1AD317640B13B6430B1F6F121C15D65FC518D598C5D569DBBAD13CF97E7C6362CD082EE4841DD434A22430E9329AEBC7924C804FD6C15ACDCF4D68AE51B0EA9361E172BF4D1FDB8EFD818EC7628AAF3A024DA034BBB5970D78433E437070A5419213C0D762356EBB960F5
340D7858B32FCA018F7DA4DB87D9692D5B326BDB5BB47BA53AFFE1DABDC7D5FFCCC169686834C4C80BCDF3BAB350CD1961ACD1D7D12D62F5B3436ED2E13E9654CD34346DA7CBA67B08B372D104C2D1F7C7D2614B7D4CBB16D1F8319D38B154456325FAEF216ED6F3F6BD24483A4473E0CA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
q
0 0 765 397 rc
530 43.492645 m
764.5 43.492645 l
764.5 0.99264526 l
530 0.99264526 l
h
530 43.492645 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
764.80798 1718.9153 m
(!"#$%&'\(\)*)[ 3.540000 8.892000 8.892000 7.776000 8.004000 3.336000 3.552000 8.004000 9.336000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
732.45599 1733.2634 m
(!"#$%&'\(\)*&#$+,-'\(.&/0123)[ 6.672000 6.672000 3.336000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 3.336000 3.336000 6.888000 2.664000 6.888000 6.444000 3.780000 6.672000 6.444000 6.444000 3.108000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
530 203.63841 m
764.5 203.63841 l
764.5 161.13841 l
530 161.13841 l
h
530 203.63841 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
755.77802 1558.7695 m
(+,#$,-.!/!0)[ 9.336000 8.664000 8.892000 7.776000 8.664000 7.200000 7.116000 3.540000 10.884000 3.540000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
724.026 1573.1177 m
(456\('7/&$89:#$6;<#$=;><<<)[ 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 6.444000 3.336000 7.776000 7.776000 8.664000 3.336000 3.336000 6.000000 7.200000 6.672000 3.336000 3.336000 6.228000 7.200000 6.672000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
530 356.02206 m
764.5 356.02206 l
764.5 313.52206 l
530 313.52206 l
h
530 356.02206 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
773.90997 1406.3859 m
(1$.$20)[ 7.788000 7.776000 7.116000 7.776000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
766.242 1420.734 m
(54#$456\('7/&)[ 2.664000 7.116000 3.336000 3.336000 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
797.25 1540.3616 m
797.25 1514.0134 l
S
0 i
CM
647.25 237.98656 m
644.25 229.98656 l
650.25 229.98656 l
h
647.25 237.98656 m
f
0 J
0 j
1 0 0 -1 -150 1744 cm
797.25 1506.0134 m
794.25 1514.0134 l
800.25 1514.0134 l
h
797.25 1506.0134 m
S
/Cs2 SC
0 sc
/F1.1[ 16 0 0 -16 0 0]sf
239.5 1372.1399 m
(123")[ 10.384000 11.856000 10.960000 0.000000 ] xS
517.354 1368.9927 m
(435)[ 9.344000 10.960000 0.000000 ] xS
785.69 1368.9927 m
(\(\))[ 10.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
530 282.38657 m
764.5 282.38657 l
764.5 239.88657 l
530 239.88657 l
h
530 282.38657 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
777.24597 1480.0214 m
(5$026)[ 7.116000 7.776000 7.332000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
792.35999 1494.3695 m
(54)[ 2.664000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
797.25 1461.6134 m
797.25 1440.3779 l
S
0 i
CM
647.25 311.62207 m
644.25 303.62207 l
650.25 303.62207 l
h
647.25 311.62207 m
f
0 J
0 j
1 0 0 -1 -150 1744 cm
797.25 1432.3779 m
794.25 1440.3779 l
800.25 1440.3779 l
h
797.25 1432.3779 m
S
1 J
1 j
0.60000002 i
797.25 1700.5073 m
797.25 1671.5098 l
S
0 i
CM
647.25 80.490257 m
644.25 72.490257 l
650.25 72.490257 l
h
647.25 80.490257 m
f
0 J
0 j
1 0 0 -1 -150 1744 cm
797.25 1663.5098 m
794.25 1671.5098 l
800.25 1671.5098 l
h
797.25 1663.5098 m
S
0.64705902 0.84313703 0.82352901 sc
CM
0 44.36084 m
234.5 44.36084 l
234.5 1.8608398 l
0 1.8608398 l
h
0 44.36084 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
250.354 1718.0471 m
(123"&)[ 7.788000 8.892000 8.220000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
230.914 1732.3953 m
(&7\(5\(?0%&'\(\)*&3)[ 6.444000 6.672000 3.780000 2.664000 3.780000 6.000000 3.108000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0 105.86945 m
234.5 105.86945 l
234.5 63.369446 l
0 63.369446 l
h
0 105.86945 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
235.804 1656.5386 m
(57"20!+")[ 7.116000 8.892000 8.892000 8.892000 7.332000 3.540000 9.336000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
202.45599 1670.8866 m
(!"#$%&'\(\)*&#$+,-'\(.&/0123)[ 6.672000 6.672000 3.336000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 3.336000 3.336000 6.888000 2.664000 6.888000 6.444000 3.780000 6.672000 6.444000 6.444000 3.108000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0 232.68697 m
234.5 232.68697 l
234.5 190.18697 l
0 190.18697 l
h
0 232.68697 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
225.778 1529.7209 m
(+,#$,-.!/!0)[ 9.336000 8.664000 8.892000 7.776000 8.664000 7.200000 7.116000 3.540000 10.884000 3.540000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
194.026 1544.0691 m
(456\('7/&$89:#$6;<#$=;><<<)[ 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 6.444000 3.336000 7.776000 7.776000 8.664000 3.336000 3.336000 6.000000 7.200000 6.672000 3.336000 3.336000 6.228000 7.200000 6.672000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0 356.89026 m
234.5 356.89026 l
234.5 314.39026 l
0 314.39026 l
h
0 356.89026 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
243.91 1405.5177 m
(1$.$20)[ 7.788000 7.776000 7.116000 7.776000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
236.242 1419.8657 m
(54#$456\('7/&)[ 2.664000 7.116000 3.336000 3.336000 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
267.25 1699.6392 m
267.25 1690.5305 l
S
0 i
CM
117.25 61.469444 m
114.25 53.469444 l
120.25 53.469444 l
h
117.25 61.469444 m
f
0 J
0 j
1 0 0 -1 -150 1744 cm
267.25 1682.5305 m
264.25 1690.5305 l
270.25 1690.5305 l
h
267.25 1682.5305 m
S
1 J
1 j
0.60000002 i
267.25 1638.1306 m
267.25 1629.022 l
S
0 i
CM
117.25 122.97805 m
114.25 114.97805 l
120.25 114.97805 l
h
117.25 122.97805 m
f
0 J
0 j
1 0 0 -1 -150 1744 cm
267.25 1621.022 m
264.25 1629.022 l
270.25 1629.022 l
h
267.25 1621.022 m
S
1 J
1 j
0.60000002 i
267.25 1511.313 m
267.25 1498.4042 l
S
0 i
CM
117.25 253.59589 m
114.25 245.59589 l
120.25 245.59589 l
h
117.25 253.59589 m
f
0 J
0 j
1 0 0 -1 -150 1744 cm
267.25 1490.4042 m
264.25 1498.4042 l
270.25 1498.4042 l
h
267.25 1490.4042 m
S
0.64705902 0.84313703 0.82352901 sc
CM
0 297.99588 m
234.5 297.99588 l
234.5 255.49588 l
0 255.49588 l
h
0 297.99588 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
247.246 1464.4121 m
(5$026)[ 7.116000 7.776000 7.332000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
262.35999 1478.7601 m
(54)[ 2.664000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
267.25 1446.0042 m
267.25 1439.5098 l
S
0 i
CM
117.25 312.49026 m
114.25 304.49026 l
120.25 304.49026 l
h
117.25 312.49026 m
f
0 J
0 j
1 0 0 -1 -150 1744 cm
267.25 1431.5098 m
264.25 1439.5098 l
270.25 1439.5098 l
h
267.25 1431.5098 m
S
0.64705902 0.84313703 0.82352901 sc
CM
0 167.37805 m
234.5 167.37805 l
234.5 124.87805 l
0 124.87805 l
h
0 167.37805 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
247.03 1595.0299 m
(5!.0$,)[ 7.116000 3.540000 6.012000 7.332000 7.776000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
201.58 1609.3779 m
(456\('7/&$@ABCAAD$EF#E?)[ 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 6.444000 3.336000 8.220000 7.332000 6.888000 11.112000 7.332000 7.332000 8.664000 3.336000 3.336000 6.216000 3.336000 3.336000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
267.25 1576.6219 m
267.25 1563.713 l
S
0 i
CM
117.25 188.28697 m
114.25 180.28697 l
120.25 180.28697 l
h
117.25 188.28697 m
f
0 J
0 j
1 0 0 -1 -150 1744 cm
267.25 1555.713 m
264.25 1563.713 l
270.25 1563.713 l
h
267.25 1555.713 m
S
0.64705902 0.84313703 0.82352901 sc
CM
265 43.492645 m
499.5 43.492645 l
499.5 0.99264526 l
265 0.99264526 l
h
265 43.492645 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
515.354 1718.9153 m
(123"&)[ 7.788000 8.892000 8.220000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
495.914 1733.2634 m
(&7\(5\(?0%&'\(\)*&3)[ 6.444000 6.672000 3.780000 2.664000 3.780000 6.000000 3.108000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
265 105.00125 m
499.5 105.00125 l
499.5 62.501251 l
265 62.501251 l
h
265 105.00125 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
500.80399 1657.4067 m
(57"20!+")[ 7.116000 8.892000 8.892000 8.892000 7.332000 3.540000 9.336000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
467.45599 1671.7548 m
(!"#$%&'\(\)*&#$+,-'\(.&/0123)[ 6.672000 6.672000 3.336000 3.336000 3.552000 6.444000 6.444000 3.780000 6.672000 3.780000 6.444000 3.336000 3.336000 6.888000 2.664000 6.888000 6.444000 3.780000 6.672000 6.444000 6.444000 3.108000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
265 231.81877 m
499.5 231.81877 l
499.5 189.31877 l
265 189.31877 l
h
265 231.81877 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
490.77802 1530.5892 m
(+,#$,-.!/!0)[ 9.336000 8.664000 8.892000 7.776000 8.664000 7.200000 7.116000 3.540000 10.884000 3.540000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
459.026 1544.9373 m
(456\('7/&$89:#$6;<#$=;><<<)[ 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 6.444000 3.336000 7.776000 7.776000 8.664000 3.336000 3.336000 6.000000 7.200000 6.672000 3.336000 3.336000 6.228000 7.200000 6.672000 6.672000 6.672000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
265 356.02206 m
499.5 356.02206 l
499.5 313.52206 l
265 313.52206 l
h
265 356.02206 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
508.91 1406.3859 m
(1$.$20)[ 7.788000 7.776000 7.116000 7.776000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
501.242 1420.734 m
(54#$456\('7/&)[ 2.664000 7.116000 3.336000 3.336000 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
532.25 1700.5073 m
532.25 1691.3988 l
S
0 i
CM
382.25 60.60125 m
379.25 52.60125 l
385.25 52.60125 l
h
382.25 60.60125 m
f
0 J
0 j
1 0 0 -1 -150 1744 cm
532.25 1683.3988 m
529.25 1691.3988 l
535.25 1691.3988 l
h
532.25 1683.3988 m
S
1 J
1 j
0.60000002 i
532.25 1638.9988 m
532.25 1629.8901 l
S
0 i
CM
382.25 122.10986 m
379.25 114.10986 l
385.25 114.10986 l
h
382.25 122.10986 m
f
0 J
0 j
1 0 0 -1 -150 1744 cm
532.25 1621.8901 m
529.25 1629.8901 l
535.25 1629.8901 l
h
532.25 1621.8901 m
S
1 J
1 j
0.60000002 i
532.25 1512.1813 m
532.25 1499.2723 l
S
0 i
CM
382.25 252.72769 m
379.25 244.72769 l
385.25 244.72769 l
h
382.25 252.72769 m
f
0 J
0 j
1 0 0 -1 -150 1744 cm
532.25 1491.2723 m
529.25 1499.2723 l
535.25 1499.2723 l
h
532.25 1491.2723 m
S
0.64705902 0.84313703 0.82352901 sc
CM
265 297.12769 m
499.5 297.12769 l
499.5 254.62769 l
265 254.62769 l
h
265 297.12769 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
512.24597 1465.2803 m
(5$026)[ 7.116000 7.776000 7.332000 8.892000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
527.35999 1479.6284 m
(54)[ 2.664000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
532.25 1446.8723 m
532.25 1440.3779 l
S
0 i
CM
382.25 311.62207 m
379.25 303.62207 l
385.25 303.62207 l
h
382.25 311.62207 m
f
0 J
0 j
1 0 0 -1 -150 1744 cm
532.25 1432.3779 m
529.25 1440.3779 l
535.25 1440.3779 l
h
532.25 1432.3779 m
S
0.64705902 0.84313703 0.82352901 sc
CM
265 166.50986 m
499.5 166.50986 l
499.5 124.00986 l
265 124.00986 l
h
265 166.50986 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
512.03003 1595.8981 m
(5!.0$,)[ 7.116000 3.540000 6.012000 7.332000 7.776000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
466.57999 1610.2462 m
(456\('7/&$@ABCAAD$EF#E?)[ 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 6.444000 3.336000 8.220000 7.332000 6.888000 11.112000 7.332000 7.332000 8.664000 3.336000 3.336000 6.216000 3.336000 3.336000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
532.25 1577.4901 m
532.25 1564.5812 l
S
0 i
CM
382.25 187.41878 m
379.25 179.41878 l
385.25 179.41878 l
h
382.25 187.41878 m
f
0 J
0 j
1 0 0 -1 -150 1744 cm
532.25 1556.5812 m
529.25 1564.5812 l
535.25 1564.5812 l
h
532.25 1556.5812 m
S
0.64705902 0.84313703 0.82352901 sc
CM
530 124.89026 m
764.5 124.89026 l
764.5 82.390259 l
530 82.390259 l
h
530 124.89026 m
f
/Cs2 SC
0 sc
1 0 0 -1 -150 1744 cm
/F1.1[ 12 0 0 -12 0 0]sf
777.03003 1637.5177 m
(5!.0$,)[ 7.116000 3.540000 6.012000 7.332000 7.776000 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
731.58002 1651.8657 m
(456\('7/&$@ABCAAD$EF#E?)[ 7.116000 2.664000 6.000000 3.780000 6.444000 6.672000 6.444000 6.444000 3.336000 8.220000 7.332000 6.888000 11.112000 7.332000 7.332000 8.664000 3.336000 3.336000 6.216000 3.336000 3.336000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
797.25 1619.1097 m
797.25 1592.7616 l
S
0 i
CM
647.25 159.2384 m
644.25 151.2384 l
650.25 151.2384 l
h
647.25 159.2384 m
f
0 J
0 j
1 0 0 -1 -150 1744 cm
797.25 1584.7616 m
794.25 1592.7616 l
800.25 1592.7616 l
h
797.25 1584.7616 m
S
ep
end
%%Trailer
%%EOF
