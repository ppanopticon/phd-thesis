%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 639.000000 333.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 11.4 (Build 20F71) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 639 333
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 639 333
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /M put
dup 34 /a put
dup 35 /i put
dup 36 /n put
dup 37 /space put
dup 38 /I put
dup 39 /d put
dup 40 /e put
dup 41 /x put
dup 42 /A put
dup 43 /V put
dup 44 /L put
dup 45 /S put
dup 46 /h put
dup 47 /o put
dup 48 /w put
dup 49 /p put
dup 50 /W put
dup 51 /R put
dup 52 /T put
dup 53 /E put
dup 54 /hyphen put
dup 55 /c put
dup 56 /r put
dup 57 /t put
dup 58 /colon put
dup 59 /g put
dup 60 /u put
dup 61 /l put
dup 62 /v put
dup 63 /s put
dup 64 /C put
dup 65 /N put
dup 66 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<

206A61645258238A592FFD2DB800192C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8001A2C2020456944B001602020457D691844B001602DB8001B2CB8001A2A2DB8001C2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8001D2C4B535845441B2121592D00020033000101CC02C8000300070065B800142BB800082FB800002FB8000810B80006D0B800062FB900020003F4B8000010B900040003F4B80009DC00B800014558B800042F1BB90004000A3E59B800014558B800052F1BB9000500043E59B8000410B900000002F4B8000510B900020002F4303101211121131121110199FECD013333FE67029AFD950299FD3902C70001003200EE0153013E0003000B00BA0000000100032B303113152135320121013E505000020053000000C20205000300070037BA0001000200032BB8000110B8000210B80004D0B8000110B80006D000BA0004000500032BB8000410BA0001000000032BB800011030311335231511153335C26F6F01966F6FFED96F6F00000002FFFA0000029002CA0003000B002500B800042FB800052FB800092FBA0000000700032BB8000010BA00020005000411123930311B0133130301333721173301C9790277ABFEEA6150012E4E69FEE90127014DFEB301A3FD36D7D702CA00000001002BFFF002AA02DB0025006DBA001E000B00032BB8001E10411B0006001E0016001E0026001E0036001E0046001E0056001E0066001E0076001E0086001E0096001E00A6001E00B6001E00C6001E000D5D410500D5001E00E5001E00025D00BA0019001000032BB8001910BA0006002300032BB8000610303101332E0323220E0215141E0233323637230E0323222E0235343E0233321602445F08344E6438527F552C29527C53899E0E5F031E35492F405C3B1C1C3B5B404B6D01F339573A1E3B66894E4E88643996872C4C371F30516D3D386851304C0000000001004E0000023E02CA000B0033BA0009000000032BB8000910B80004D000BA0004000100032BBA0000000900032BB8000010BA0008000500032BB800081030311311213521352135213521354E01F0FE6F0173FE8D018E02CAFD3650F750E35000000000010052000000B102CA00030017BA0003000000032BB800031000B800012FB800002F303113113311525F02CAFD3602CA0000000001004E0000022702CA0005001FBA0005000000032BB800051000B800002FBA0004000100032BB800041030311311213521114E01D9FE8602CAFD3650027A00






00>] def
/CharStrings 35 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/colon 3 def
/A 4 def
/C 5 def
/E 6 def
/I 7 def
/L 8 def
/M 9 def
/N 10 def
/R 11 def
/S 12 def
/T 13 def
/V 14 def
/W 15 def
/a 16 def
/c 17 def
/d 18 def
/e 19 def
/g 20 def
/h 21 def
/i 22 def
/l 23 def
/n 24 def
/o 25 def
/p 26 def
/r 27 def
/s 28 def
/t 29 def
/u 30 def
/v 31 def
/w 32 def
/x 33 def
/y 34 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4203806 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28031C17829BEE98293CCF96BAF13971F3C4CDD5E6FE2DD02A8EDB11D8D36D558DE1A8793F5801ACADF6DCD2C324074E2DFF3E44C987DFABBA3EF15CC66522724D979F33E79788477D680C031A6B9957354E36D4B9A5E6FE0BFB34D832008C465A5D67ECE7DA6B980CEC7409DE67902A572E7F5E6BFE8CD6531A4AC265E226B41A4A00037B7D98771971480ABE7582D05842F0EB030D440C68BC0F9A427F32F9279B6CB4448197907B7773656871BC6D7237C4E3FD7E23A279F9CFDDE3B07C42AD1F9F67516E2266EC42EAE4570AE23C4EFEAEE431A621E76B861A8DD1C956FF0A68DA8D38252DE57E8B2BE3F3BF1C382E1B5D334DD85000AD61B04484E102B8CBE217459781BE4CE5B502F100510B81B7532E88EDF849C451023EB357258AF0B59D6B0F36429020189C25C8C8A73C790B3C1DC33DA5844EBB94D85A6FE6213CD5A5F9C4745688E706E7B89338081872DB4B5ED6F752424785BF76CAA7F8DC3B8CAA49EDE6B47AB7641B5B42812C03F27A61B19E380E6CC4D8E974BDD16EBDC3A84385D597396E906F3998B3006392BEBC2AB33BC65ACD838C34156C96DB91A0879C5E74BFF1E02D09EBBBB75C0198960A25B9EAC18E90C80E282BC8F474AB53E32B6F553B4B5B8D05C986AB5C3D67C3C6D161A5B4A282345A70DAEABD2D6A187BEA759FCA292CB61DA9484D2CAD42DB29FED272185C38B098428235D61891F8D4D5F44251FB924389E902E5C64D5F083B1F6A2165CDA028DB3DC877C7E399F8D4035EE56

86E172CAC016D734EFB13B91FA0D08C0CEE3F2A7466396659FF2FB51A6874AF79875E9FA07B41BBCF2C0B8645776D2B7595D7C7AAF1AD2B738D97502B9CA7D34324D7F7BF6603BF4B65BCD9F73A6A775766A34EAEC23453AEB874E9CC40F763340AA2EB2CAB7DD00FAD7BF10D4C42370F09584D67C8716CC3399BC41CBC6E37AB6378B09AB16DA52E3DBB72CA200635AD5B4DC637D795FDD64032D808A5E502B2DE0740A64EF622897D726356B33DDC40125852545F13496CB47AFA28E8310A39AF33F296502BD97EB860617A4A2AA212C5B6B5C64F720B3B03B2B7F58BAED6861CAC37E17CFC258E08B825E0660A222D76DF93C83B24C16C1EED396C824A3687A62D0153B63645BF0C937EAADBD4AD592CE007AE4BE45F2CFE92A062143047832541564C5C603AEF03C7CE85A9F939AC906659C7A75A5DAE86E0ECF54F2D4D76698BA358696BF342E336B66E2FECFA0CD72D24E8DCA8EC54C259403663406A20A2A1DFB7A47A86CDA7A42072794444E46CDDC614B464AB9510F3F208003EF3A7CBF479B8E3264B1341E3BEFEA18793CA29A89B9BF81AADB59FD164D38B521D22CD77EAF26323CBB09A8D0DA7335F8085993DA6B478FEB0B266FB629F172ACC34AA0F18AD801A5B0F6C9ADD1C6808021158B923253F840AE84393445BEFCCC7D578605D97F4AFF448A9BD5E5B14F735BFA3D7DC1D18F6D04FDDA56FC970920A9A92D17C93F61E4A294A2C4BBEB63645D531EF8CC5E3EE28CFA6D8CD777139D34623D9C7AB2181134CBE0032B9A6280BC8A310CC279033226DF18067028B2FF2F33C282990B2EDE059BFF0B180548E3005C54D3C77ED26CDDDC5298788B8FFB86637EE0A2CB7EA22412A57C814696EABB9915FAA747C6C17445A9D8FB038D96CD130228647A87AD05CBA518DEB6900E41CEF4476F4C90C9FCE07FC47CFCC898DFC8087C40462C629F5EA1C8BCC05E5DA182A84DFAA67044B4A97CF3700A8218A90E5B4B3D23CFFF7357AB6F013D9082836B535C33A3CF0ACF85F70BF35029640C624A2D2D7E04ACD3B7FA00F2147B89E940D1CAC03AFD46431640A273568990BC22434DD0537308A5C3541EA7BB52192B8EFEB6453A489BDEB6E76D20488CF8202A349ACBE086B4631B330CF544EDA585B8AF6C7E4E9B45594E41A8A3A04E69F85360EFAA4F9B1CD4C96FDC7A6671175D609BB5EE6D507E663D81BF7A7D292241E017A1BD792D27A2BB0285582E1F997DE2F06FC8B61F4B0ACEE381A17D0323676E2DE6B4F32D7A52B2545977AA33DE4E63F3B9DC76E57CA376DE34391A8670EB4BF385E17E9782F0785BBB4844A52F2A461FBAA9E7827C89F707398D943DA0BB06771868C54DDE3578DBCD80533185D40C21890E513D1104F309228601E3F6C53A347F9E811505F9271B4BFCD6C3391B458D4965B18245F05366974CE33E6A78

233A6BFCBB0AD3BFD61357E12693189BD7F71B86AA85F82EB3D7C5FEAD90474F264D0F6A6D0E97CAB8867BF768DD098026749EC7778459B31FDDE104776DCAC6C138A8C4C7B2EBA811CD9D57CDC6F760E31E3E4E3C2F7742832D92BE8FAC00F10C5AF667421DE22B29E060824DA4E0B375DEB7442CDA458974AA248DA7B09FF1F20818D354CECA1D21A6F38E998FFCE5FE2252CE0B7C44BD9D84FF59796237072676BD7CA7FE5C823AAD35C1F3BD858EF6EA3AED4ED3EF34801FEF1CC84531BBC9A71F649EDB502058F007356FF308096F68CA5983AD18D728F4A2E7D5AB47020B6F516DA00F07DD45AA07DFB3A6218DE87E342F12FB45F8802212FA4924E430E52B7529289621139796106FD880527E985AA03104976DEAA78792FABF61A4B7013BA6F7C4A6A40FC3F7F538BFEA378593E0BC7F93ACD39BAF31D023DA546EB4977FF772A0B31AFC5EF06BEF15FFC8E0247565101795CB2AA3AA4F62B05ECA222773D80D7DE6F3232CE5072100FBED02A9F6CDDE259804F0F9A9B9D779087D4D770772DF3454F859CF700128E63C5EBDB13EBBCF185F7E47EB5C91DFADE6C4C4D7F973A6C372A46C80198DF38ED0FAB6D184346D9A592DD4A851D000F71E0E5FDB35D31C9C24614C40DD1CFA9546A42C8A053267B40A36535EC98C2D55AF5C3603AEC66E645EA2D0E4F5BA14355E1B142FF29790ACA25E7ED94C8B57517B915F2AAC2A9D9715B149BCF40C8F348233088E84B5446497C5B8E075E60F2C423A6899BB68B5B8C32BAFBEAFBAB3DA0DCA6D01C7F21AF235DABB0CF15469D6DEE83D7F3B3C3D7DF96B46E8FEF7B40818722944A7E0B0AEC003167FF5C1487DA44656A42E4E84BE619E45F5592E74B2220C495709A0411D3FBEC62553EC3249BFE2EF719B7464C118E03E3C055929FABEBF37EB07F269154AFEEDAB3FD8313854C15A0520BD052BBF78715023A731094186B2AC9C6EAF10E103680572BA2FBDF8E28E2FC9AD9E017796F5300DB60471ABDDD93C26C4590C037D4C2FC3B775BAD9A71294E5626BFEC0D476C8DD75CC42531BEFAF3A6CFB7EA7C52B0B6632E7E0EADE6CEBE29B6D5A1DB7F3EF20AB8733BE1C25EF0EC8014A0F44D530866A0EDFB01C99D80714AF84D3157C6455DDA51ABFE45F9C814486ECC710722919B55CB0105D369A83F5B3426AD5C4257C71DF51BE1A434F625C2DA54188F320A1AB320CE0666245128235E1D591D480FC06C7B1F832A926899F7A6720563FEED9223E33063A4B70638A740264266D04B72A343AFB4ACCB5607A7B8BD0DCE019B016BBD0DED0672A67D2F5CE667118B7E7F5DB5D7A9A99333AF01F71931BE8D1D93462D231FB0168157F1019E87394A6461B43DF3C4903606465DFEB743DA60B987F4CC7C71C23771802C69A9559272D407D186FEEBC9D98EEAEF05A3D2BDF0275AE225117C377
27F4AD023ABBF358645FC47256E6508AB67405AA5B8D7A80433754C63BB09C697CC3674ACD90AA425C5BC8E0DACE4380315C9AD4B8724E1A05A4BE7B57AF2A45AAD2EF5F64EAE7822BEAD8B7AAE7139C5A1E310C145CDD6244DCAB65642DF7743DE2F84495AEBBF7588ECB0E149C211B0E97ED9D70F7B1259C2C0195DE30A2D8478C03CE8E76DC50E9F665B1257D21B773E7234D166DD8F68A0A8B320796EF6C70F5AD4C205290274CF677AB35B927B36FC5910B044D92764F96B182170914E569F11086D637F2EF023DC220E22ABAE17A944A0A5F1F4974C32DFBB59296C157327B7941E607C00BA1AB76FCEF5DBE715CEFC3BA24365830F1E8F35F88F09229D2C6C4C0A8C100F19535E249DB0F2D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /v put
dup 34 /I put
dup 35 /n put
dup 36 /d put
dup 37 /e put
dup 38 /x put
dup 39 /space put
dup 40 /parenleft put
dup 41 /period put
dup 42 /g put
dup 43 /V put
dup 44 /A put
dup 45 /comma put
dup 46 /P put
dup 47 /W put
dup 48 /L put
dup 49 /S put
dup 50 /H put
dup 51 /parenright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<



15141E023332363701A50C1C2F23212F1F0E0D1D3023232E1D0C02878E0218532E3956391D1D39583A3351190104203C2F1C1D2F3C1E203B2E1C1C2D3BE24202CAFEFC26272D4A613436644D2D252A000002001DFFF30224021300080022003FBA0009001400032BB8000910B80001D000BA0020001900032BB8002010BA000F000600032BB8000F10BA0001000900032BB8000110B8001910B8001DDC303101233E033332160721362E0223220E0215141E0233323637230E012322260192E7010B1B2D223433DD0175041C3F62423B6146262544623D587C1E7D073E2B3C40013A0F26221738903C6E56332A49643A3C644827505D182B3E00000000020026FF3D022702130013003A00D1B8003B2FBA0014002A00032BB8001410B8003B10B80020D0B800202FB80005DC411B0006000500160005002600050036000500460005005600050066000500760005008600050096000500A6000500B6000500C60005000D5D410500D5000500E5000500025DB8002A10B8000FD0B8002A10B80016D0B8002A10B80018D0B800182FB8002A10B80028D0B800282F00BA002D003600032BB8002D10BA001B000A00032BB8001B10BA0000002500032BB8000010BA0018000A001B111239BA002900250000111239B8003610B80030DC303125222E0235343E0233321E0215140E0217112315232E0123220E0215141E02333236373315160623222627231E0333323E020127212C1B0B0D1D2B1E232E1C0C0F1E2EE287021A4D333653381D1936543A2F55170201373C263A0A8D032B414F26596A38117A1C2C371C1D3529181A2C39201C3328185901E4452D262A475D32355F472927294437481F282C3F281330455000000100360000021B02130016004DBA0016000000032BB8001610BA000C000900032BB8000C10B8001610B80002D0B800022FB8000C10B80018DC00B800012FB8000A2FBA0011000600032BB8001110BA001500060011111239303113113311343633321615113311342E02232206072335368E343A33288E112A49392D561B030205FDFB010F4F453F40FEDC013E304F371F292D48000000000100050000020302050007001900B800012FB800052FB800002FBA000400000001111239303121132303230323130154AF8D6D026D95B10205FE9F0161FDFB00010000000002190205000B002700B800072FB8000A2FB800012FB800042FBA000300010007111239BA0009000100071112393031130333371733033723072723BABA9F6C6CA2BFAA9D5A5BA20110FEF0A3A30113F287870001000000010000D22DD0545F0F3CF5011903E800000000B643F84C00000000DB3521B1FC06FE1F059D04750001000900020000000000000001000003CFFF27001D05DCFC06FE77059D00010000000000000000000000000000001401F40011

00>] def
/CharStrings 20 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/period 5 def
/A 6 def
/H 7 def
/I 8 def
/L 9 def
/P 10 def
/S 11 def
/V 12 def
/W 13 def
/d 14 def
/e 15 def
/g 16 def
/n 17 def
/v 18 def
/x 19 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4381012 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E2150EE8A95E8E056CF63C096EC954E9AB4D39A5004249114C46FB9FF7C7734211EE1807103F4422CDD13751C002541F569736ADA75A862401B7B2630080B9FD8CB015AE357B57A3559190BA63C1F29D386BABC17BC7530F3DA56EF230AA64C4EA0A12667592934987CC4489CC010863DDE37460C04AE83B32FE78EAC1B58257635CAC6F96E7FC8CF8589003EEBA2116CFFBAEE1C0785C66A8EEB3D7F9DA55F1635C737DC29E1F9EA6A9E57912D668AA29E4967646FB44513D4D14B429DD991FC05A4308F91A2A3EC713C82403F1EBDC4164CB7886E77516B9113ADD89895F337321D843BE7487F62C6B9F6028283C53509B704A3080B2AA26BD69338A8C697641757E51309BC09D359D654BF7CE8A341F9D2EBCA4E4A5A8B98236E5C3949BE543BF5779210C512001B02C8C21DE3730987137E7B20EB9B1F8A3E587050293B77B7F00D599148CBCCEA23BA5375FD78AE42BDAA2C7E974FA90581732CE8F9D8B7B608683E9C34567DD4E90619FF22BFB52ADC8B1BBD7F78D779870E417556534EFD5181BD5E418A14BFF04BD61360B54AC3DA50ED06F7A6059C24B1001617A49B90B3D1BFD5B5327FEB61C52AECE769DE1A36FDF32196150FD383EDF11DBF99796C6322169ACE1DDA1843CFF941DA79A851499E3805950E4C185F398DFD924867459F49C9918CB65290839ED2F0F4AD5AF00F2B66202F659C61033B2C02AE6349BF98E61BF3B9690103FC09D62FE39081B61442EFA48F98C5EC53F24FD10E005903E1F

85D1E7513986EEFA1E0BCF9E46A5EA20B9C870320E27C9AACE8D7069E756E740E6C214CFFEAB8AA9B19301B2872B876636E8A40D2132CFBEEF0008A3B701DE3596F5AE59279563C4C4A0E6B6771770A3B2DFDEB0FA6B9936D15ABCD1ED6DFD1DFCBC7ABE1B461C0CC5E38C370A37EB9FAA1D1F54C787E1555243F44A7EDB51B9B67E81AD9E3C06EB5EF4AFDFC67AAF5466748F5109DED509AB3D36E1C9B71BFEC54F34C9FBE2CEDF5BB4E96C117AEABF79788CF5399ECAFBEE02016F70582249D3A362994C5626410DD9FCF8D3FE7F1E777ADC74FCBA2525F7BF7020FC29AE67A25B5A6FD43E567118D5954F9E6EF0CF5936E8D16221979D2289E4037A47901FE75BC492456DBC6D530335460C73B61318733C027A32C099EDA31911EECBB3754B85E4435A424B68566BBD8990E4647EE998D9AF70334710030B3E74C4E8825872D7E13796BB1860ADF8D2DF520D4DE0386F555A803FA6B6C32331F610F766165E110F2D071A3ACADC5FB627B85EC6D92EF98CA637DEAB8E2C9DDF88F2B0508BFD5298C30A3E9E5A7F2DA192D65534D3C853F98B18C3E9A68D4E26407833B4208B386CB358FC17F43628E57DA703F2E275ACBEA891B25B97D6D4EA8B3DE7A2107A655CD0F048D558B754A412786EF0D97FA4D66B8BB6442B744638A6DFAD9CDE76A785AF9A36FBD09E27BD135FB158990456AF142EADDCB37D5D9778CAB6269E2CC0810FDABB8602076EDD418324D685C4223F5733CFF6FC25ED8FCA5DFD552958E8D5D676B42BB0855D83BA9DCA655AFA86966601ADC307895AFEDD43BA18C73082F363BB735C4B5953DC5A3454F293587E5764277B645B0C9BE99CFC60986E89B30B199E00D77B614245D1B15CCCA780B03138EF9F772FE7ECED50157179CF1C2F1B6C10296820CE9B95DF0C5686F36AE50AFE2E9B66279864FCF8D7CB2625B1258866A2AA6688805F80654218E826A6D6FC0A6FC0C5E6CF2AB45F72C869A582048BF32C43633D38E390741F2D99B35A2A48D6DC258BC8C0C910DC207B2F35C05DEBA790AF53E9C8EC0005666A051C1E9AE5FED6989870B05752A5C7EA69D71FB386855CDAA342F54CC884B5633326B79DB41C57B230CBADA1CC323253C7ADCB0AE3AFC89BE24ADD716D07AC70D289CBC4A21B15E108EE5A2680D46C3261A777524F1AD4C65D9215E7353F0E48BC14CE8D11CBDF6E98436FC2514353474827E1B236DD8584D8ED2300A17CCF06E7B3C59907D108791851C8112BE4FDB65431700C5A25
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
[
8
5
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 639 333 rc
1 0 0 -1 -245 479 cm
324.63199 204.5 m
882.776 204.5 l
882.776 437.5 l
324.63199 437.5 l
h
324.63199 204.5 m
S
0 i
/Cs2 SC
1 1 0.5 sc
CM
110.632 228 m
266.63199 228 l
266.63199 170.5 l
110.632 170.5 l
h
110.632 228 m
f
[] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -245 479 cm
355.63199 251 m
511.63199 251 l
511.63199 308.5 l
355.63199 308.5 l
h
355.63199 251 m
S
/Cs3 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
394.216 285.526 m
(!"#$%&$'\(\))[ 13.936000 8.592000 3.552000 8.896000 4.448000 4.144000 8.896000 9.488000 8.592000 0.000000 ] xS
/Cs2 SC
0.5 1 1 sc
CM
242.5 241.5 m
303 241.5 l
303 221.5 l
242.5 221.5 l
h
242.5 241.5 m
f
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -245 479 cm
487.5 237.5 m
548 237.5 l
548 257.5 l
487.5 257.5 l
h
487.5 237.5 m
S
/Cs3 SC
0 sc
0 i
503.59799 253.276 m
(*+,)[ 9.632000 9.776000 0.000000 ] xS
/Cs2 SC
1 1 0.75 sc
CM
426.63199 228 m
582.63202 228 l
582.63202 170.5 l
426.63199 170.5 l
h
426.63199 228 m
f
[
1
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -245 479 cm
671.63202 251 m
827.63202 251 l
827.63202 308.5 l
671.63202 308.5 l
h
671.63202 251 m
S
/Cs3 SC
0 sc
0 i
698.37598 285.526 m
(-."'/0%&$'\(\))[ 10.368000 8.896000 8.592000 9.488000 9.184000 12.128000 4.448000 4.144000 8.896000 9.488000 8.592000 0.000000 ] xS
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
439.78842 316.24704 m
457.97858 337.98923 514.8252 398 588.13202 398 c
661.76233 398 723.52191 337.45844 743.13055 315.96146 c
S
0 i
CM
503.38382 169.0675 m
495.86646 165.00679 l
500.39011 161.06514 l
h
503.38382 169.0675 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -245 479 cm
748.38379 309.9325 m
740.86646 313.99323 l
745.39014 317.93484 l
h
748.38379 309.9325 m
S
CM
189.81409 169.0125 m
192.44263 160.88287 l
197.14 164.61578 l
h
189.81409 169.0125 m
f
1 0 0 -1 -245 479 cm
434.81409 309.98749 m
437.44263 318.11713 l
442.14001 314.38422 l
h
434.81409 309.98749 m
S
/Cs3 SC
0 sc
545.5 423.5 m
620.51599 423.5 l
S
623.87598 423.5 m
629.93201 423.5 l
S
545.5 422 m
(&$'\(\)%-0"1)[ 4.144000 8.896000 9.488000 8.592000 8.288000 4.448000 10.368000 12.128000 8.592000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
433.63199 251 m
433.63199 251 442.30096 215.82462 466.13199 212 c
482.47397 209.3773 500.67615 222.34277 510.50259 230.75078 c
S
0 i
CM
271.35956 242.79486 m
267.54959 250.44235 l
263.46054 246.05148 l
h
271.35956 242.79486 m
f
0 J
0 j
1 0 0 -1 -245 479 cm
516.35956 236.20514 m
512.54956 228.55765 l
508.46054 232.94852 l
h
516.35956 236.20514 m
S
1 J
1 j
0.60000002 i
267 279.75 m
345.73199 279.75 l
S
0 i
CM
108.732 199.25 m
100.732 202.25 l
100.732 196.25 l
h
108.732 199.25 m
f
0 J
0 j
1 0 0 -1 -245 479 cm
353.73199 279.75 m
345.73199 276.75 l
345.73199 282.75 l
h
353.73199 279.75 m
S
/Cs3 SC
0 sc
250 265.03589 m
(23&45%)[ 14.816000 10.960000 4.144000 9.184000 9.776000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
303.328 265.03589 m
(!)s
324 192 m
("#$%&'\(%\)*\)'+,-'./-'0123)[ 4.720000 9.488000 9.776000 9.184000 8.592000 4.448000 4.736000 9.184000 4.448000 9.776000 4.448000 4.448000 9.344000 10.960000 4.448000 4.448000 10.672000 13.920000 4.448000 4.448000 9.488000 10.384000 11.856000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
299.01199 249 m
309.74799 249 l
S
0 i
CM
69.748001 230 m
61.748001 233 l
64.748001 230 l
64.748001 230 l
61.748001 227 l
h
69.748001 230 m
f
0 J
0 j
1 0 0 -1 -245 479 cm
314.74799 249 m
306.74799 246 l
309.74799 249 l
309.74799 249 l
306.74799 252 l
h
314.74799 249 m
S
/Cs3 SC
0 sc
756 333.5 m
830.672 333.5 l
S
/F1.1[ 16 0 0 -16 0 0]sf
756 331.578 m
(3\(678\("9\(:)[ 10.960000 8.592000 6.224000 8.592000 5.040000 8.592000 8.592000 5.040000 8.592000 0.000000 ] xS
756 350.026 m
(6%3\(;<="8%#$9\(8>"=)[ 6.224000 4.448000 10.960000 8.592000 9.184000 8.896000 3.552000 8.592000 5.328000 4.448000 3.552000 8.896000 5.040000 8.592000 5.328000 8.000000 8.592000 0.000000 ] xS
756 368.474 m
(6%4.8\(?./=')[ 6.224000 4.448000 9.184000 8.896000 5.040000 8.592000 8.000000 8.896000 9.184000 3.552000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
433.63199 308.5 m
433.63199 468.10001 l
S
0 i
CM
188.632 2.9000001 m
191.632 10.9 l
185.632 10.9 l
h
188.632 2.9000001 m
f
0 J
0 j
1 0 0 -1 -245 479 cm
433.63199 476.10001 m
436.63199 468.10001 l
430.63199 468.10001 l
h
433.63199 476.10001 m
S
/Cs3 SC
0 sc
448 461.53589 m
(-@*A)[ 10.368000 11.552000 10.368000 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
242.5 221.5 m
303 221.5 l
303 201.5 l
242.5 201.5 l
h
242.5 221.5 m
f
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -245 479 cm
487.5 257.5 m
548 257.5 l
548 277.5 l
487.5 277.5 l
h
487.5 257.5 m
S
/Cs3 SC
0 sc
0 i
503.23001 273.276 m
(*5,)[ 10.368000 9.776000 0.000000 ] xS
/Cs2 SC
0.5 1 1 sc
CM
398.52802 328.00989 m
459.02802 328.00989 l
459.02802 308.00989 l
398.52802 308.00989 l
h
398.52802 328.00989 m
f
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -245 479 cm
643.52802 150.99011 m
704.02802 150.99011 l
704.02802 170.99011 l
643.52802 170.99011 l
h
643.52802 150.99011 m
S
/Cs3 SC
0 sc
0 i
659.62598 166.76611 m
(*+,)[ 9.632000 9.776000 0.000000 ] xS
714.52802 166.76611 m
(*<\)#=#"8B%+\(79/8%,#?9)[ 10.368000 8.896000 8.288000 3.552000 3.552000 3.552000 8.592000 5.328000 8.000000 4.448000 8.896000 8.592000 8.592000 5.040000 9.184000 5.328000 4.448000 8.896000 3.552000 8.000000 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
398.52802 302.75989 m
459.02802 302.75989 l
459.02802 282.75989 l
398.52802 282.75989 l
h
398.52802 302.75989 m
f
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -245 479 cm
643.52802 176.24011 m
704.02802 176.24011 l
704.02802 196.24011 l
643.52802 196.24011 l
h
643.52802 176.24011 m
S
/Cs3 SC
0 sc
0 i
659.62598 192.01611 m
(*+,)[ 9.632000 9.776000 0.000000 ] xS
714.52802 192.01611 m
(*<\)#=#"8B%5\)7=<?#/$%,#?9)[ 10.368000 8.896000 8.288000 3.552000 3.552000 3.552000 8.592000 5.328000 8.000000 4.448000 9.776000 8.288000 8.592000 3.552000 8.896000 8.000000 3.552000 9.184000 8.896000 4.448000 8.896000 3.552000 8.000000 0.000000 ] xS
/Cs2 SC
0.5 1 1 sc
CM
562.82202 241.5 m
623.32202 241.5 l
623.32202 221.5 l
562.82202 221.5 l
h
562.82202 241.5 m
f
[
1
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -245 479 cm
807.82202 237.5 m
868.32202 237.5 l
868.32202 257.5 l
807.82202 257.5 l
h
807.82202 237.5 m
S
/Cs3 SC
0 sc
0 i
823.91998 253.276 m
(*+,)[ 9.632000 9.776000 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
562.82202 221.5 m
623.32202 221.5 l
623.32202 201.5 l
562.82202 201.5 l
h
562.82202 221.5 m
f
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -245 479 cm
807.82202 257.5 m
868.32202 257.5 l
868.32202 277.5 l
807.82202 277.5 l
h
807.82202 257.5 m
S
/Cs3 SC
0 sc
0 i
823.552 273.276 m
(*5,)[ 10.368000 9.776000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
