%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 503.000000 249.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 11.6 (Build 20G165) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 503 249
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 503 249
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /S put
dup 34 /c put
dup 35 /a put
dup 36 /n put
dup 37 /space put
dup 38 /parenleft put
dup 39 /i put
dup 40 /d put
dup 41 /comma put
dup 42 /fi put
dup 43 /r put
dup 44 /s put
dup 45 /t put
dup 46 /m put
dup 47 /e put
dup 48 /l put
dup 49 /parenright put
dup 50 /F put
dup 51 /equal put
dup 52 /quoteleft put
dup 53 /H put
dup 54 /z put
dup 55 /quoteright put
dup 56 /P put
dup 57 /o put
dup 58 /j put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






0048009200DE010C012A0156019201FA028E0398040A04A80510053A05780592062C06740714074207E60838085C088608B2092C00010000001B0096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 27 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/equal 5 def
/F 6 def
/H 7 def
/P 8 def
/S 9 def
/a 10 def
/c 11 def
/d 12 def
/e 13 def
/i 14 def
/j 15 def
/l 16 def
/m 17 def
/n 18 def
/o 19 def
/r 20 def
/s 21 def
/t 22 def
/z 23 def
/quoteleft 24 def
/quoteright 25 def
/fi 26 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4203806 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E580E439FDF9E6E72033B329278B51D4092E79A4AF087BA4D61ABFD530F9FE2F536840A76DABBB8740AC54CDE32DCF23E52ED5C931A9A96B9161A6FAEB369212826D1376B28311C4C098EC33CA80B24112B59569E3B8E11AE646B3BDC4F43F4778BFDB49EEC26CFD55A99EE1C4D77A93DC4DFE6B2C6912C0A7A9A875260976733E529F41DA75A3E02556CD12B52A626DE8C971F226E40FD67A3753CEF4B7B30B83FE83023AC0119E940986F2EC8ECB7D8BC55A19B999D05033905BDE20474D79752FCAD8E0301F925BFC2DAAEB74DFF530770B7CACB33CF5E7B8A6F7ED4BDB168DD26535506150C37D630C196574A64B521802C3557AE28EB4FEDFCE4C0E89D0EF9C88F209123E03BCA6E8EED6CE9B8A07F8903598F6FDE681862065A3FD2E0231E5BD9B3751CCF18E9F197702DD3154B54A8F0FE5BE8985CDEDAAD490E113E540535C178C2FC26E17091D30EAAED3EBB8BF260E0E5FADDDF134BF99FFB3BC289301E8ACCA8A8B7091AC0F5605B6C168D3BF5865765F2E144C5CD0B30F0F905A457481314A22D91EE3A592E36023DBD38BA6E8F170CEDC73458BDAF76A7FC73BE5C94D90DB4A149A6FF0B1C973E079AF4DDDD9F720632DDE63C6A060BC09DBC8057A27EA1C94A0FBFB22CA6980799DC7EBFD876912BD8F5A00FBC273096FF96BB412915754187595C3B7231E046B7F8CD156B82CB22B6A34CF2FCAD37FAC2249010E32CA66527880E49B049CC37465EDE30BB169738CAEC5DED288E23F31162DEF746C
8A469A41E2DFE5D3CB9D0841375E228155870C03A4AEC26D98D122FC8B0EBD0BBC51AEE468F11EA884E22665F917B5BD6CB4839F927089358C325F7301C63FFDD08A8BA1EB43ACD4430F33B5334B64EFD8722AFE6805B2B61999C1E9BCF1D2EF07642E04E1019894E9812F965489EF213546CBA8BD05C362DB03E8DF41DEBCD96A91C4D3CF9D3EE18E0E7D21109C6B8F0183CED8687545A06245525318CEC64A72271595EA8FB3C8F4608CD12205CDFFDD665D75404A529DBFBF6802ACD23F4F88EA87513EAFD4D8DB38C6179426F731675CE9F1E43B8B73B782C15C42E88BE47E7807953C796C2B842750BB46EA366DA4AC8A85A0397F41D2AF22AB89E4433E79EF8A8690BBAC85A39A304755C596373C0C4ABAD39F0DCA7B7948124101428A3F0A7CCD0868FED68C6C3B61B29CC4380D2FF9870456EECE617FD2867D7105817D120ACA87497C4B5ECC67DC32194EC689453F23FF794A0417CF48AAF8889B3C2C0E4AA8AA3FC43C06B965181E2DE5242D2D87EC9259536E429825B7AD48DC0EE511A11DB035B1B0F0631104743220A628BEF19D31A5074A9396C7060792DEF97EC3208CB88DADF38C7B30BF2B93616BAF40AF2C6033CC3765316280D20C62AE72B8D867CA506DE078CC2F3524292742BFC3B774FD50E3B781376550DD2A3607E1EB7449F1FABCDE19F49214CE6509AE9F2E7BA91A73692A67F38130FA27531AF883C9E87381C9C8F855495A6DE9B578B4A703FBBBFA45E52267DC979F074115E6D964FABE511CB6359BCA6F4299E5326A9EFA62B1DE178D8C7B3B30B6E893F30C9CBCF33F45A9FE3DC0840E33E73473B9C3BD04D1EE5139251DAB98BEB9E3660836CA6CFAA77136C6DA34A43C17FEF90BA7EFB127FD7E4C9DCA4AD850625DBA57931E66B2552295339EEFA8E5AED55701B3D89319747404313199D41C1BA0A81F18630C7AADCE891D7EF6637D193EF7E83CF187D68C8A0C8EC7C88A8E52769CE61450954D1B091C874C24DC563572E625C4A4F4EA55DC2C93B88FF3B75B2D6C24980AFE4571C0170CEF8475336BF68C74491227872B6ED4E0682CA78105CC220CCD38F80BDB6C64634058C6B2ABBAE23A4B93AA98607E5A4BD7D12A3C4A0424D7D32A41A14B697703E7CD14CE601F2CE9F7AF8F63B6B23CE56F908A50E446DC5D90C283A28739D5EBAA2A7C0B7A278BD82033929043CC0AFFEBA047B711ACF6A677B205B0ACFF493F48248951CFEE766AB55B14DCC415C885A8E383915C1229FDF6A00C167D91A2752DD4EBE9B4C9FDA71092A86B0219A34F455AC35F4A906078247FCE1DEC928B6655A23C3925658C6FE5FFD15CB95EBB3771BF7ADFF4804C9820A6C86D5B5242A56C416918E7048B4ED0C67AEBF3EF49FF03FE99DEEEC0433EBF0F154F135F37E8E882B8E122B7282B3EDC900C065107F54CFB332C3779A1

D70D9C1AEA2FE32E6765DFC6EC2B2F2D9E739B0A35F9BB1D4BC7209E5AC755C6C8631FF5C687A457EB40B0EF7498AB9291580D3A18B477131B71C5175787D62CEF50EDE0280280E045CCB440D8A8AEC214D417744D5F09F0CEAD6144DFF71ABF7A4123A6734D4CA420451A538844CBBB60998B50E0F618A2063D425A4C044A8651030ADE3408DA42163AECCC3B08E189F02CDA803DEB9815BEDEF9A84866481A87A7A18FB7117E8044B9E9E22CBD12F3611C1D870B08925C8C90D9F19B1B3CF2522FACC7EB996B167984E7487EA4BA9183499594AC6BEFAAAD1CB62B82DAD978097C5245F77481813A121EFA34B8A9EAECE0EEB5E786A7B76215397F9D4B37635957E1CB6D646A93412E054221AABD41B15C42ED8A27ED05B3949662E66A73F49DBA6FADD93B2200ABD037B207DE2C63E226004D38B0FB9705BA8A5FEB78EC44BD076C13A8AA6DDF3FBBA145B32D4DE6888D6294E99D912FE7015B0F634276F1A87E8D01F65F74EC8C365BCACD993ACA0BBEA30DEF51C37C6B3F0EC843FF04CCB8B9A9FB5D7C9573575B688026B73F459F9675F3DC330133B69712830060FE32C07B77C4795F55EDBD98C41C1132440CB0B8B6A5911062F4209798C309E21864D2CC65528ABFC6823EC9C0B893BCDA824B44A0267C7A7277A35AC8B43A5C5436E89E03E266C17C0387ED67D61D3FE23BA178B00AE714680ED6B4378D935CE5C265D115893EB18C7C8CA466FA0FB6140A5B620DD6ED8CF9758CD964F10D43F0BA4C62F16380A18388CF2ACDA5B304ABE422191525FDBD9CD054E6B1DC7CC579E419BDFE2E46A6186A77DD89D978A1A33C05DA5E5DAFC1DEE0E1781F1DE222AA368402D73F545E0BE8D19C09D3C37E3DC26F459728FFDF2D4F067F48B1485D997E5F20BCF8C022CDEE878046202B4578529554B7510B5E58003B179B6B62321606AC5A1304E0E4E421EBD38A14405CAB9BF12880C3EF6CAA00D2625F5DB121DA6FC44920E2945788EA6AEEB97C9561825E8F11734E705999DD5E0AC80130CEFE88BF3D23E5195804D403CA8A6285B48E55C0419C4B10D2EC6D8364C5F2BD9BC44116A3ED70A5DFE5DE12675C049B178F4696011C6460C10D644108F735215767A8A41564DE45F2A588AEDF05B31FAC10507F5894D3C6B1002FB671D42E20E0DC1C1E886D56CDC70C2FA08D15D4C58C9AACF2C8B3AFD44CCE6054B646E315C4709AB91E16C70ECCD7420F0ABBBDAB5FE537BFEEDD13ED1C30226DD79A6CD6CA14F28467D2655D1E339AE2126D01E6A411F72C9464828293C078E9D37F81B11C53D853AAB649550F5E50945F8A95B299CAE9CDE26AC089D783BA98826C1B8398D21A5CAF0ADFE8AE20B78FD0977272BC4EAF50D9FB02AFD162A71D23CDFF5BEAD9FB2A7BEDF45D1BD1A690CFF9B2342940A284192D94C46C27E6F02C8F448B226075
00C8CFA98AE0C35474B44D6BE6456C251907FA9740C00BC6BD6C9B3B52D759A10A7107D47C60B2EE3CE624AEEAB43F76616E3ACF9D328068406DD33789071BCB3FC01CF934117C647271EEDDEB73B074CCB2CD0CD542D4BFFF27DBE357CCA75F668EC90DE3F75D71EF3EBE9CEA4C64C4F69B05325BA1C978D258119D344F1117833E49CDCAAECE3EDEAC60430D59401323DDDFBAB8D8B5EC1911D4CDED20CDAA6ADD0E2486169205F48F694E875E2573717283389E1CD9E385983B5C3EE8DB5A3277B8625590D02BB3D09655E1FEA3D99AE8D8092CA971990D8BEE0EA24984276027300F1454A7577634A28CDC9D39EB183F5DBD6C90765EEAAF7FCA68CBA31BB6CD0B75D545259A1264ABD1D25D8E71790091DD9DDC259246A1966E3A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Italic
%!FontType1-1.0: HelveticaNeue-Italic 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Italic def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /F put
dup 34 /e put
dup 35 /t put
dup 36 /c put
dup 37 /h put
dup 38 /space put
dup 39 /parenleft put
dup 40 /i put
dup 41 /d put
dup 42 /comma put
dup 43 /l put
dup 44 /a put
dup 45 /s put
dup 46 /n put
dup 47 /m put
dup 48 /parenright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -993 1 index div -481 2 index div 1511 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 17 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/F 5 def
/a 6 def
/c 7 def
/d 8 def
/e 9 def
/h 10 def
/i 11 def
/l 12 def
/m 13 def
/n 14 def
/s 15 def
/t 16 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-993 -481 1511 1077} readonly def
/UniqueID 4231841 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2829775B70D17B42EDA8CC4658DDF1D1ECA31288756CA6F91C8712AF5F303CB1D43FFFE152B0454AB86A9D9A1412CD80850803F326A2D63D66D0CE5C24B31327EBDE594A53E260C05589AA6882516A82FAA5F346C0A93941811640780760C9353156290ECA01144196F55FC83A47FA2ADB88B7D3C2A91F4E5F2DA52806784DFD452F89842A23BE7EDFFC144DA4C6DE127586DC7A8EB3BA91FD72891F6B9D6179D9BB9EF852C4BAED7C6E604C24F371CFDDFB5ACC43AA2FFC695D53E9B2FC358C28208ECD53DBAD20110D3AD90A3A34023268AD70F0228056C5494B1009C4E59C4BE5E1971F2C54D4635E66B49C4E20F319BAECF01582801CA1DA4F108ED169B6CC4B39AE633C506AA09EE24E542BA5FDF3534BB062BB53C7B68A26C97C37165470BD5DB19C61FE6AEED408D133729892E2D285D486748A308F6F69CE44515887871AD566B480D77398EF9B1F1ACB059638489A4EC50C253D670AE0B028041867506BAF79CCFB384036909B3E5D01CF86F124A9EAC540A70EE144F11E2C70D7EAF6993050012DA9C0769A225F99C050C933F2651752B33CD1E6662FAC32672BB53F3902C7DFE569F100EEF20521DA795DFC483EA6BCFBC09647DA900DD2BEEEF5600511D8A4BC0DA3804DF1641590CA4C585E18E9C9E61F3CEADC5B6DAAC24C39B5A2929A015A915B3FD4921CF6FBDDD8236B7033FC5365AB0A4D560F0F9C2531F3CD0519D42ECCCADA1668EC4BB27E170C3925287CBD213BEFCCBD1F739BF0CCDD252B786
BF62842A9061D658C29E0879F394485E4F836F8F0C4037D2078493ED44CBC93E04BDED6C5149CF81C6710F0EEB48C3D69B84443423A285F8356073F64945F4DB65C259BAA0B26173DD32745720A142B0CCFAF7883CD9343D0F7282C47F1ACC1AC1D5C14F820EC41E9660DD5992DE10B79C1EC1414FA22F211895BDE9481DC051E365DC750AC54632689D2B8ADC200E7ACF41CFB05A4B358264680CC656D0812EE14ACE3687F8C7492DE2635F5ACB8DCE929E792CE971BD665D326C933AAEE2DEAB842FA62A65275B754AAC4DB9844369F535FBD6C1547C2D803F444E028D81788AF8E7571AE53A7C15C21E1923F37139DE11CC8297D866C47DB8E083915A02A0C9D30CEFB46EAC4E7BB9C6B4BFBAA5B8F24ED490823D5546CEA7051FD54813482FB2581F03C55E38C986933E11764E98EE56B4881DC8E8EEA6A45CA2303E8072CC32E2E131BEE0BD1EB56DAA16A784D8D00053AAE4E00801FBD1AD2A98F0FDDA0C744BDE68B179F5DBE43E04D508AA0A7A4C590859A39A73706D28C2EFB0DF2E1E35E5EF9712B5A52FE26EBFD4A43F79145FEE4864DF4D2CA2010C79D6AEC025AFB5BBF9670ED217AB864C96989B1E29854372A4D82054A5FFC68E67952DDE37615BCB36452D0F7392FF72DABCE86C5601F713096A28DC59557B63D41B06BDFC627EBDE929AE11F92324F49B2E82D4933657DAF184901FB0B4274238AF76FF6FB38F087AD430DC971782ED2843E783F3BA60697AFAE8B05EFFC42531343286E9278F0F6CCC86D8882BBF0C71C1C2B69C083F3CD4AEEFAC62561037CABBAFD7827B595E6D49DA30C01F4F1060022E650741D416809B058F549E363C7E9475198ADE1C581885807419F0BDAEC1C626C9197AECD99A697B49E142992C3EC397E2C469BE71691AD27D3286C4D1D38C94E1D2E647D4071CB16839BA9821A6708F496B62CAF9430106193EDAA1B038FE37F2FF9F7374AD943D9DB6D1FA8E725868BD39F2B98036C98A1A8D918CC226A9C58E57B08A04D5CB120FD4FA59502E42EBE4FB93210F257BDC3B27780A7D38705239EA6CC97BA5719237E41CB0F24A29A3C70F8626D344E1376F57C687072FDDC29745FCBA86CEB14DF7720B95743F8F3A44AB9BF961335E301D8637A41D499B557B47FCD71C3F3E044F73C92D3077C467DCB37544A181AD6ED193CCD6FFB1CFDA4CB765D52D741B00D8FB5406F3E80E6730D62B31DE2A1C76326B36AEBB8881BE2B0BE07064840F4E2A6B010075B4DA07BBCCAA62D7C7A8BFCB95853B9FA4C86959E5DD3D42F05EE825E0A3D597D1D004446845C7CE15B50C38FF865AD6724656C9BAFF6ED289ACAAF56CD4E3B3429A1AE5AE01AF69DAB26E97A3521F6A401835DE022211719DF50D4F7A4FF9E9FB57E7ED4563D56E55216BC86DF8DFD08F49CB53C0C504EFBFCF55999BD175384355AC5270
05E0099858A8B54297D802B38C22A0E4C0499A1E9F7837FEB2C35FC1CE6A212C5FCD02890BD8ED1FA5D843B92C89D1F799A073773B7F1CA8D78C1F6F61E70063673300040BD48C18D5B90F8841B8BD04D2F1C3DC7BB76052A8C87013F41A6004407472E0DC5744CDB8F1CA5EF2CD39DAA13B377A953F0FF64EAA675995097F716E9ECF76ACF38061F8F2B89BF21CA6222918F598ABF08BF6647A571D38DED78C17F3F3D8098DD72CD692BB829A7FE2C65F91DFEBBFC1705713994D3E972A44EEDA84A2ABF0B212043866ADEB486743523C8167552360CFDA5908E534E33AAB63B3EAF097E9811B26F7BAA1A5C45A5CF9C38C5EE57A663D01B827B36E57C16518189BB52D1BE15F50467153337A5EE471BF7D5EE593DA4B6E11263E8C1A9DDCCCBAF0C3C2A2C355EBB172BB7B131FC085A546FF777135BC6B5F4AF3FD675B5A9B84A67A9B5F9E6D6A5A4146C1F041FE30647E0AD45B4BEB63F7ACC4CEA52F7B57B4284C547E292C8FCF888FB54541251E8125DE3A8119C05383FF6F5A964A4FAC32387C5BDFAFE88CAECC6F088FD6B44CC95E10089C9879AA13B1EF858EF25D1C8FB8708B79ED2E712725F1A00C18D36029377A828BEF1DD75861EFB1A49B87FC6601B9FF7BAA1FB2340F065983DE1B2CC060656E3513FC341C9E23F427B91D6E8FAFBE163A898678110B7B72AF06019AC1143EC08D2614F8B629D5B13992B049A35F3A1D42902AA747C8F7A31B09701EC4DD068D7EBD806403288C42A4CBCE5CB480F258251654A19631DB141B50482E460A660E2EF92996EDB73A44015B8873508E6B877C6AA7163AF41EBBA56E98F797BF2E735444C49904467A005CB2797EF84CCAD603D6349C14B504CC719AE651E1D4DC4D9BB44A531F6BBA485E4D588C8C04EC83E06123D6DB4FA56014DCD30A1183A70917F7C81A6BD2D1F50D0F50B6A0BBD09DA5011EC8DD5842D97139CDBFEE709C3C82593AB85C9F0DFA984F7D5646A074001E6BBA93528931376D444AF754FDC24D31778B930753307052B8DB8D0A5089D02C82F2EA7E0A715FBCE81F75E7F92196E5227B06C99674E3884D297BC01B8D7929B9E7BE735BAC690D0F03177C1E92B2DA8A96BFA717C744837FC499F98543E8F9B36373809722C01344AF4802F88F9075A41A384FEF546C6D710DFDCF0763AC368AE4459E7017BF1BF838BBDCAB4C452E4452540CB9E0931D9B0A4E93CDFDB1C0A7EBA0E73CC309F7D08CDFCBCB6CCDE1343AC41A3F9E683C96154E71E311F228097FB3F2C3BD6A80868DE47B4A5A8F00547F1376A09AA127D8656E8FC16FAAACAFC021FEFA282A68AA122CBD690CD13A8D723A81392C517E93A4A0010BD327814F5781184BCE9CD4339DDD033FEFA5BB90A75B6633B1308E2DACB9DDBACC43EE645334C67F63CEA00A0499D1CCE6FE51967E43F6BD0BAAECDAEB3F
AC49B9E2F08203CFE2FB0AB0A968CDBC199CF2936555ED07BF2E8D1B6151E6605AC880EA7AD50F27A6887F5925FAAEE62026DAC4C2F44E8DD6462C16C7F16E5A177A6059486422E2A6433AEFAB3E51ED225D90D7D6A9BEDABC7C2F7C052D6913920AA6DC9A229C5F3FD1E174C8785F8DC5C7AA586081DD3C92967B4B0F8E6E0E17B4D93B54E293F3C145DC3A82B3F61F8E3F8D045578B5B0C439751F3B9C6C0A1A0FD81191ACF75FFB75F99F2104BB74E1393159D7CB0CF366C155DDC55B5253ED78EA7E57D4F067501B0429D7416587F3290DC9E88D52467EB925CB64DA9F2E12915C1E445463E2B8958E80AC9117D02090848270C71937466C082D5E51B727DC396471835258468F093AA2FB84A68FB73CAA161CEAFDFAF00E16DAB0182B65CE17F315581B7A4F36A52697E670883CD07155982FD434C5C80C825D3A783EDA27307B28B886AFF16946AF9ED42A7C8C7A19
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Italic cguidfix
/F2.1/HelveticaNeue-Italic renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /P put
dup 34 /a put
dup 35 /s put
dup 36 /space put
dup 37 /one put
dup 38 /two put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/space 1 def
/one 2 def
/two 3 def
/P 4 def
/a 5 def
/s 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4381012 def
currentdict end
currentfile eexec

97036D7984DA698909D17DB66D0C4F6156739BC5072F0BAB8315AB8D370198254AEFE37952232C2845E1C7BED1712F1BDDA01754DCFB0409A689CDB5D2F737DB28575F0405976243237F4C33DCFBCCD06FB59AD6647590BC34CE91B54654812821D8E4A1D1118E885A3F630AFB11FBDB1A92CFDF8E679528195467B7808E38C07437A8E3EB4816C3E283983366E5A2ED26CA767BD2AD709D7EB2CEFDD647AC65B2D678926FEB039DC9FBEE0FD49616225D4185D0846199230E5499EE93152DE3707D9472793E28E3651AF93FB56DF3C5F1A1D56C1644589B758F02AAE1D3919323FB7061794F5B4E828437EC12A6988509B92B8157882CDC666F6DCD3F22DAF5E3787C9E6E3F2CFCD20385C711DFA1C13D532C0ABDA883F674E87F326F6D1951224486368C156D016AB7D364BA0701F3B62CCD8347C36A2423DFBA6A3619122CE475E68D452D9A50B84581FBC65D7BE025D980AB2670718AFE28A2864DE1D78ADACDA6B4F926B3F409464E62E50A45D963A98743A516E3803BD16F32B4BE0827CD5748052DD8B717BA30BC69E71ED06E1234BD48FAE9B6F0471141E76BE925D279A0496D5EBCC5DDFE9343128B70B8CFEC8D0B5437B634082CBBB5AFC44871E8191F495258404071D1C792C5D91E2B8E919B4951A614D8B0E0ECB83EFAAE68DBB5EA890612589983441172C664C828208E0CFFBB248B01AC0D046DD1E47B20F36AC4BAAEC4272EFBE692CCC6586B04CF94469F7D6918C1D35805E968963D32FD855B0C773910E49EB8E46EEE38F010B15D688AC41EBA2CA5AB316F34E786723F8620C2B5EB790B5E9EFCAEC7EA99EBBB6C97A6E9036F42F11EEFC50F5E6A2DC2DABB039C0078834159A3B951522B29CF3C3EA40AD4EE7D7AEBFD81CC08E714D90440F87BCA47A3338C6F32EB3A9F123C7FC102DCADF3052C5EB1C6F86B0C7F64DE159D3420C099A33AD3D92DB56AD26F7026A2576CFC361D69CFD1B2ABE8824289EBBC6FE79DB0D7F8D7C1508C1CAA6E6172E8F7650A913D28C1C19FBEF40A7230E680428F02DAE6B3DDBE272F725968BA9E56D37A3CE4C21BFB0469B96BB808191FFE45096FD5CF086466F6B4D0FFF706C23C4D51235EAAD5D4A370B50A89C9BAFF487F79DFAF476B227B78F609C2CEA049D3721E2484DF3B1941DADDE5C1C9B4EDCBDCB895F7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F3.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
q
0 0 503 249 rc
0.5 40.5 m
115 40.5 l
115 0.5 l
0.5 0.5 l
h
0.5 40.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 954 cm
/F1.1[ 12 0 0 -12 0 0]sf
173.07201 930.164 m
(!"#$%&'\(\)%*+,-$#./\)%)[ 7.776000 6.444000 6.444000 6.672000 3.336000 3.108000 2.664000 7.116000 3.336000 3.336000 6.216000 3.996000 6.000000 3.780000 6.672000 6.444000 10.236000 6.444000 3.336000 0.000000 ] xS
198.854 944.5 m
(0#,-$#./1)[ 2.664000 6.444000 6.000000 3.780000 6.672000 6.444000 10.236000 6.444000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0.5 96.5 m
115 96.5 l
115 56.5 l
0.5 56.5 l
h
0.5 96.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 954 cm
178.14799 874.164 m
(2'0-/+%&*+,-$#./%3%)[ 6.888000 2.664000 2.664000 3.780000 6.444000 3.996000 3.336000 3.108000 6.216000 3.996000 6.000000 3.780000 6.672000 6.444000 10.236000 6.444000 3.336000 7.200000 0.000000 ] xS
204.87199 888.5 m
(45#6/071)[ 3.336000 8.664000 6.444000 5.760000 6.444000 2.664000 3.336000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0.5 152.5 m
115 152.5 l
115 112.5 l
0.5 112.5 l
h
0.5 152.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 954 cm
196.196 825.33203 m
(8+9:/"-%&'\(1)[ 7.776000 3.780000 6.888000 2.664000 6.444000 6.444000 3.780000 3.336000 3.108000 2.664000 7.116000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.17647059 0.21568628 0.23529412 sc
224.75 913.5 m
224.75 904.40002 l
S
0 i
CM
57.75 54.599998 m
54.75 46.599998 l
57.75 49.599998 l
57.75 49.599998 l
60.75 46.599998 l
h
57.75 54.599998 m
f
0 J
0 j
1 0 0 -1 -167 954 cm
224.75 899.40002 m
221.75 907.40002 l
224.75 904.40002 l
224.75 904.40002 l
227.75 907.40002 l
h
224.75 899.40002 m
S
1 J
1 j
0.60000002 i
224.75 857.5 m
224.75 848.40002 l
S
0 i
CM
57.75 110.6 m
54.75 102.6 l
57.75 105.6 l
57.75 105.6 l
60.75 102.6 l
h
57.75 110.6 m
f
0 J
0 j
1 0 0 -1 -167 954 cm
224.75 843.40002 m
221.75 851.40002 l
224.75 848.40002 l
224.75 848.40002 l
227.75 851.40002 l
h
224.75 843.40002 m
S
0.64705902 0.84313703 0.82352901 sc
CM
189 40.5 m
303.5 40.5 l
303.5 0.5 l
189 0.5 l
h
189 40.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 954 cm
369.91199 937.33203 m
(!"#$%&*+,-$#./1)[ 7.776000 6.444000 6.444000 6.672000 3.336000 3.108000 6.216000 3.996000 6.000000 3.780000 6.672000 6.444000 10.236000 6.444000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
189 96.5 m
303.5 96.5 l
303.5 56.5 l
189 56.5 l
h
189 96.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 954 cm
366.64801 874.164 m
(2'0-/+%&*+,-$#./%3%)[ 6.888000 2.664000 2.664000 3.780000 6.444000 3.996000 3.336000 3.108000 6.216000 3.996000 6.000000 3.780000 6.672000 6.444000 10.236000 6.444000 3.336000 7.200000 0.000000 ] xS
393.37201 888.5 m
(45#6/071)[ 3.336000 8.664000 6.444000 5.760000 6.444000 2.664000 3.336000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
189 208.5 m
303.5 208.5 l
303.5 168.5 l
189 168.5 l
h
189 208.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 954 cm
384.69601 769.33203 m
(8+9:/"-%&'\(1)[ 7.776000 3.780000 6.888000 2.664000 6.444000 6.444000 3.780000 3.336000 3.108000 2.664000 7.116000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.17647099 0.21568599 0.235294 sc
413.25 913.5 m
413.25 904.40002 l
S
0 i
CM
246.25 54.599998 m
243.25 46.599998 l
246.25 49.599998 l
246.25 49.599998 l
249.25 46.599998 l
h
246.25 54.599998 m
f
0 J
0 j
1 0 0 -1 -167 954 cm
413.25 899.40002 m
410.25 907.40002 l
413.25 904.40002 l
413.25 904.40002 l
416.25 907.40002 l
h
413.25 899.40002 m
S
1 J
1 j
0.60000002 i
413.25 801.5 m
413.25 792.40002 l
S
0 i
CM
246.25 166.60001 m
243.25 158.60001 l
246.25 161.60001 l
246.25 161.60001 l
249.25 158.60001 l
h
246.25 166.60001 m
f
0 J
0 j
1 0 0 -1 -167 954 cm
413.25 787.40002 m
410.25 795.40002 l
413.25 792.40002 l
413.25 792.40002 l
416.25 795.40002 l
h
413.25 787.40002 m
S
0.86666667 0.52941179 0.60784316 sc
CM
189 152.5 m
303.5 152.5 l
303.5 112.5 l
189 112.5 l
h
189 152.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 954 cm
/F2.1[ 12 0 0 -12 0 0]sf
361.12799 825.33203 m
(!"#$%&'\(\)*&+,-#.,/"0)[ 6.888000 6.444000 3.780000 6.444000 6.672000 3.336000 3.108000 2.664000 7.116000 3.336000 3.336000 2.664000 6.228000 5.772000 3.780000 6.672000 6.228000 10.224000 6.444000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.17647099 0.21568599 0.235294 sc
413.25 857.5 m
413.25 848.40002 l
S
0 i
CM
246.25 110.6 m
243.25 102.6 l
246.25 105.6 l
246.25 105.6 l
249.25 102.6 l
h
246.25 110.6 m
f
0 J
0 j
1 0 0 -1 -167 954 cm
413.25 843.40002 m
410.25 851.40002 l
413.25 848.40002 l
413.25 848.40002 l
416.25 851.40002 l
h
413.25 843.40002 m
S
0.64705902 0.84313703 0.82352901 sc
CM
388.25 40.5 m
502.75 40.5 l
502.75 0.5 l
388.25 0.5 l
h
388.25 40.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 954 cm
/F1.1[ 12 0 0 -12 0 0]sf
569.16199 937.33203 m
(!"#$%&*+,-$#./1)[ 7.776000 6.444000 6.444000 6.672000 3.336000 3.108000 6.216000 3.996000 6.000000 3.780000 6.672000 6.444000 10.236000 6.444000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
388.25 96.5 m
502.75 96.5 l
502.75 56.5 l
388.25 56.5 l
h
388.25 96.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 954 cm
565.89801 874.164 m
(2'0-/+%&*+,-$#./%3%)[ 6.888000 2.664000 2.664000 3.780000 6.444000 3.996000 3.336000 3.108000 6.216000 3.996000 6.000000 3.780000 6.672000 6.444000 10.236000 6.444000 3.336000 7.200000 0.000000 ] xS
592.62201 888.5 m
(45#6/071)[ 3.336000 8.664000 6.444000 5.760000 6.444000 2.664000 3.336000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
388.25 208.5 m
502.75 208.5 l
502.75 168.5 l
388.25 168.5 l
h
388.25 208.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 954 cm
583.94598 769.33203 m
(8+9:/"-%&'\(1)[ 7.776000 3.780000 6.888000 2.664000 6.444000 6.444000 3.780000 3.336000 3.108000 2.664000 7.116000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.17647099 0.21568599 0.235294 sc
612.5 913.5 m
612.5 904.40002 l
S
0 i
CM
445.5 54.599998 m
442.5 46.599998 l
445.5 49.599998 l
445.5 49.599998 l
448.5 46.599998 l
h
445.5 54.599998 m
f
0 J
0 j
1 0 0 -1 -167 954 cm
612.5 899.40002 m
609.5 907.40002 l
612.5 904.40002 l
612.5 904.40002 l
615.5 907.40002 l
h
612.5 899.40002 m
S
1 J
1 j
0.60000002 i
612.5 801.5 m
612.5 792.40002 l
S
0 i
CM
445.5 166.60001 m
442.5 158.60001 l
445.5 161.60001 l
445.5 161.60001 l
448.5 158.60001 l
h
445.5 166.60001 m
f
0 J
0 j
1 0 0 -1 -167 954 cm
612.5 787.40002 m
609.5 795.40002 l
612.5 792.40002 l
612.5 792.40002 l
615.5 795.40002 l
h
612.5 787.40002 m
S
0.86666697 0.52941197 0.60784298 sc
CM
388.25 152.5 m
502.75 152.5 l
502.75 112.5 l
388.25 112.5 l
h
388.25 152.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 954 cm
/F2.1[ 12 0 0 -12 0 0]sf
587.71997 825.33203 m
(!"#$%&'\(\)0)[ 6.888000 6.444000 3.780000 6.444000 6.672000 3.336000 3.108000 2.664000 7.116000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.17647099 0.21568599 0.235294 sc
612.5 857.5 m
612.5 848.40002 l
S
0 i
CM
445.5 110.6 m
442.5 102.6 l
445.5 105.6 l
445.5 105.6 l
448.5 102.6 l
h
445.5 110.6 m
f
0 J
0 j
1 0 0 -1 -167 954 cm
612.5 843.40002 m
609.5 851.40002 l
612.5 848.40002 l
612.5 848.40002 l
615.5 851.40002 l
h
612.5 843.40002 m
S
0.27450982 0.3137255 0.35294119 sc
CM
132 80 m
132 100 l
152 100 l
152 110 l
172 90 l
152 70 l
152 80 l
h
132 80 m
f
0.27451 0.31372499 0.35294101 sc
320.5 80 m
320.5 100 l
340.5 100 l
340.5 110 l
360.5 90 l
340.5 70 l
340.5 80 l
h
320.5 80 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 954 cm
/F3.1[ 16 0 0 -16 0 0]sf
293.80801 726 m
(!"##$%)[ 10.672000 9.184000 8.592000 8.592000 4.448000 0.000000 ] xS
492.5 726 m
(!"##$&)[ 10.672000 9.184000 8.592000 8.592000 4.448000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
