%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 503.000000 248.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 11.6 (Build 20G165) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 503 248
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 503 248
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /S put
dup 34 /c put
dup 35 /a put
dup 36 /n put
dup 37 /space put
dup 38 /parenleft put
dup 39 /i put
dup 40 /d put
dup 41 /comma put
dup 42 /fi put
dup 43 /r put
dup 44 /s put
dup 45 /t put
dup 46 /m put
dup 47 /e put
dup 48 /l put
dup 49 /parenright put
dup 50 /F put
dup 51 /equal put
dup 52 /quoteleft put
dup 53 /H put
dup 54 /z put
dup 55 /quoteright put
dup 56 /asciicircum put
dup 57 /B put
dup 58 /g put
dup 59 /P put
dup 60 /o put
dup 61 /j put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<







00>] def
/CharStrings 30 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/equal 5 def
/B 6 def
/F 7 def
/H 8 def
/P 9 def
/S 10 def
/asciicircum 11 def
/a 12 def
/c 13 def
/d 14 def
/e 15 def
/g 16 def
/i 17 def
/j 18 def
/l 19 def
/m 20 def
/n 21 def
/o 22 def
/r 23 def
/s 24 def
/t 25 def
/z 26 def
/quoteleft 27 def
/quoteright 28 def
/fi 29 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4203806 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB280346C059E4FE58BBB9D67978A71F4CB492CD03C9651F629E4BE1AC303707CAD341A2F7703523FB4E5608F224CE9D0F98CE33F0734C791905E735B95D48AFD69102B7FA41080F4CCDB751ADFB38462E92159BB28DBF2BBE24F644ADF5411A78C2C63693433437D4A17ED1EB22815C807E3487EDE624FD32BC1F5B35D35368B8790B927E7161A58AD550B5EA6708CBF663A546FFBCD8A2C047075DE83F6A4AE32D66D226D56C190979A045E15C83C4A1399AADC3A35975D0E1B44F9B486834B607394DC705AECDB6B7B8654764072E620D1337DCA61FC1FB5086C2CDEE99382F6530C38BEC50D8B5FDA1B5DA0442A4316C7FA7148FADEA909600C36053D2986E642B4C8B280B5403DEFBA9E519EFD79E1BF0D47C39F26844B53696F025791BFAE05769D7B7A465460BB51AEB6F281452D7F6EF08C447272F977A4947F973AA461CE6DCCA5BD3EBFFBFFB19B2B118BC114E797813F79CC6BA471A1F7C09BAED8A5DD4F1370649045D1200ED3DDFC765BEE829350939B96E0D0751A1AA96017A565F5AF73E66C6EDB5DC9D6D30BB3336108D5FA21132827B417B9D5B7A5B36831F952EEE206C3BACA14A33717E42827723427860A4A9BA2A7725788D0F3DC6C3CE16F49B38E90AE8E5C7F2C49AE5E7B785D3540A5D65B7B718408DF96C1AF2A608F97AA8D3A3315C04D7A645810623A3209434B4C55BCEF6359CE6DFE2349C4793E404466E38630ABF5B6330EDE31240B7CC89BFE3E87623E1483E8174AE6415266C1FE29E0



829B9369EC1240264B0C36B13C4C5ECD758885F8C2143AE96B4FA9166BE1C816A3AE3091212DC2A4B23981420E1C94896F4F8892E9EADE2138B8DC01F3749306964DF76C016C2262A58C9119E86D9CF504824B7A58726D2116434A4E06DA44C9E0A1C401172F4C86E1585A39B435CEA40AD117A41567E7E581C8A5DC26A621052988C02EFBED25DF23BC3FD14AEC15E253CA410BA4F87B39ECE67F98AAF8111E635E55155F9207DB6BB23412F60B076C4439CB99591343E86A2B8DFE436A75581B696E75FB92D8DDBF8F8F7D7047208C6713D755EB905F2A79F065625DF1405EBA88BDDE37AD2116F51429E3EB91BB21281AB33FD5EF76F395C14D2922B148B580D77CA8023EFF75A6EA68047763E3B6CB34B2266CF9328C3AA134A7C2E732747CF8D5276C66DD6DD96CDCE158D9027DFB2A288983DDB3ACF7078D0E6ABB5F8F2F3E07E2F4EC6B9EB25B918192D8A975DC503BE389EB06C282FC629E201AF70FB0B7532126943A90FBBE3AE41010CE9D3802C44383D99D2B0562CCE126D263A925B0C3FCF8DF794721503B9E0FB159F25CCEB68FD44E033E3D306C0C5927FD2B57861FBB71BA4D17166F5841C9ABC653D354D5594884B1D14968CDA944A9D9B4C767D7D66E82584B0D20A225E8E07BEEECCC629F671B683C2276B9246F6EBD172B09BC151428FBAA3684FDF3835FFA7CA24A52261A6DC5533411026CBF0D7A3FDC79CCA9F0923264B3577E4E6F6E48ECB54D43EBA18EB4F0F5EB9093AA29AADB6615D89DEBB203AA40749FECD5F84967B7F969B8B3504F076056358DA3E3B0F737E585475742CF421C8A10A98D9AAFAD73BBDC191403208620AD18AAE1DD4A523FC56376532673789814ED30EAD9792230DC90825B29D2EFAAB8E1A5806C376A45F506DC9622E6F11755287C7183660E8C0EB5AEE2480199073B6D53067DB8F3A4C39F08A4FBF2A426A3F0D6203896015F2A25A93113646E2720FDEBA6E2754ADF745C0DA5DB7C2C35173F2F6F9A125F0939B26909F132A8B61310A3625DFAF46E4062EF7674AA12BF3D56B79571F6571CA85C563667ED761A1FD8851656666B6A52628A24F6BF99FB87F3EF2E854756C78A5DEF684D58772E9A8E7AC27589DD77DA241BDEAEDEC1683DE5454CF349790B879A6A4B6F2EC9C51625E33FE1795679E8ABB3AA4CB2A20108FB175CF11832ED57F020FF7062B068CA59E114B46B148BD4ED24D991E84AD62AFDA14415C53FFCE83CA7CF28B2477873BFBDC295FF86D3279EC30314F1F70E1D1FB222C79149AAC328B6345DACA0BDB9D3DEAD4D2EC669A7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Italic
%!FontType1-1.0: HelveticaNeue-Italic 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Italic def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /F put
dup 34 /i put
dup 35 /l put
dup 36 /t put
dup 37 /e put
dup 38 /r put
dup 39 /space put
dup 40 /parenleft put
dup 41 /fi put
dup 42 /s put
dup 43 /n put
dup 44 /a put
dup 45 /m put
dup 46 /equal put
dup 47 /quoteleft put
dup 48 /H put
dup 49 /z put
dup 50 /quoteright put
dup 51 /parenright put
dup 52 /B put
dup 53 /g put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -993 1 index div -481 2 index div 1511 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 22 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/equal 4 def
/B 5 def
/F 6 def
/H 7 def
/a 8 def
/e 9 def
/g 10 def
/i 11 def
/l 12 def
/m 13 def
/n 14 def
/r 15 def
/s 16 def
/t 17 def
/z 18 def
/quoteleft 19 def
/quoteright 20 def
/fi 21 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-993 -481 1511 1077} readonly def
/UniqueID 4231841 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E0B8C08955DB50295DA0B1284D8D5B935DAA6F05584E2B8991A37722BF39D2C3FD5D959E55E45D50BE9C5B712D18A795A1B38D7BADB5B6BDB575B387DEC2D09FCDC9A7FF559E11C29C714D17E932914E0B25FB5461DED827318D935259783B39BD1783FB445FB2A6F79F8A3A809BE5EEC9B0E81EEF91AED1A483C5B9D37DA6014D9F823512AACB8D9DD220B6D6D10B8848826D0747835014CFD61E338CF687B003B98B0ADFDE31A629B7955B56FC47CB0EC088070D76935D9337CF84D2FD92D680ED8CC22C59492AB6D4A999C6C308A0972653515BDD7C10C53068C18E2A24DC74B7BF4813BE7FCFB2A83A57BF6B6402866136468FEBA65F5653928B81FD38D4BFDF26A36EB2BE71070E8A75C9D57D9E32C724641D7EAC845D4124CAE0408D2F5548F726A670ABBBA3A760BC59A13CE91F717B714A1F7CD875919F960B6CA7C22515159AB60FD376BDEF88980889EC1F92CF78B1A578A27123231D893A2558D0DA7932CAF7A8CD9AD3B96ED6ABBA5CA271B10BB121F0A9472F752642F0CE4C08EB2BBC08E4624C68745D9FC8AEFBE382928AFB40675E879C06A444EF098B357063C296D1A6225F777D9ADE6248CFE000A0C35B9908DFD581384781F24769BD20F4D44A599BC164B3E8CA0BAF57DDC0469F87081DC65001DB92C09F0BB1F1221DB1FFC6F1A0CF2B32CFD9C1CA110527EE833B63C2E80C10654CBA9E83B202D94E3C8D38D271C2715BECAC54E5DD14DD80BDF0F004055C8056AD679EA091593F698C2C9C
CDD1EB55936C9CEC16E9D71AEE437666058EBB5832376EE90A5A24102F358CD0B9CF808826D8D3C88E3F14E0011F60983D3712EA5C7DF6B0ED49DDE7EC3719FCCCC3384BA0EFE98FB8347C39C73EC22CCA4AA3FDA2600022748A9FEB09CF39BD53E264B282A658E8ABC22F02AEDFE1315149CC099E82DFA7F12A43EAE3E786C86D05F113BDCB4F81A985A86832C650015E163B9E7979B8E67028E663F322341FC272FF3C771EB3D10115240F6399CC16AE0BFF75CBA5131C1ED15633CD8ACA106377BE69814442E88A73DB8C551386F6D2799D4F2912A443A59361DA59C8E410B49A5E1352275065F91B2E2BEBBC7D7A7BC45A9F1556981C0A17260C113114032F19AA08A19EAFA1BD898C9AE7CCD2C281657CD11AFD3AF13F782BB66FB35D911FE1067766386E1A2A1B6DD3C0CD88BD082A358E7A060D54DA2EC4EB75C74E7687BF927B4EE4E8406F632D6237D3D89C646D4183CF9C48FC2CB90B29A324BA45285442830468CCF7D401AD7D0041433A6C7A17B712B30B6F29172A477EED978BE56654913E489F7D021BAD1BF06EEA9F5619B3599D1B5E306660A3E0398ADC6FFFED8FB5A5427716378C4F0BDD4D3C6AB9199D99E9FFE58798DB7DC1201E56DE5824F1A05345B929EA1EB719D920032E3C27F1D29D24A7BCD589FEA1D83AFC9D7C8265BBB4A56626ED30AB7EBCFF97100BAAA54404C69D45C80C3B51E62D7EF73C4B0AAA409DA03C2C49C1BA8A5F240843444C66089D9DDD22AD07F5973DA278071CD9877E0547F1CADF52D4917198C7545F1F0B72E48EEF2F1BB26443719684EA7C234D1576C79A9753BE624CFB6AB34CE8A1CC9D2EBE2DBD055A644F82DB8ADEE307060BA0A9FDDD1941969DB37B6F3A7B90E847CFE9A5D4C5D3DAA83A318B85A95B90AF485986188514419EDD817A232AE8F871287C18A442DD718783F24A5800962C3EF5918AB0C9931AEADE5628BFA5C31F6A43F8ED3936E499F66D7039CD7465DB9027D31C3051B0C86CEFECC166DCED6A4599467738A92420FA80858A9AF36E78B5C0CE92917DEBEC5019862572D24BE5F6D785EB705AF84431612EA8197591BD4207912F643AEE66B7F2AB42688EA22D553EAE0F2551AA0495F9BCF3EC27649EF2D8C055963DC33D56CA7242523B41DE74766C0F48214AC3A54CEB947344C0180F80B32DE68E0847A37CBEE9F9B2C556C55FC6137987E5F3C11DF4008B68103265945A9B036BCFC00B79F8FD860401D3D72122808D643121784D62D24B1F6B037103B211760F3EEEBA3BC2E46FBE5FD52D0B18044AE88623FEAA1765191908AF7DE8FC2E94A1AABB0FDE3D4D476E005A8B1DBB2ED8383A6A961210350020C780306B056AB45AE611699D7074EB36F5DD8D106E06F552C45C824BF2C60E4D7C26962B218A9319BBB5D9C21B2905391FE3EC9EEF0D12811A62395A3CD2
BFC71ABE9A6EC15FF3B9918AC6E53BE4DDD606987599E7697BEABC6126353A5823A79DCED98F40335AEB50441772EEDC9B38A4F7BF0BD71569C2D12981D21FB99DF0BC4982C4E503A639163A7A94BB8F34A090DCB11204ABFC554EBE6C600F699E07A3E7631A6B4C2A6F07CFDE096CE68CCD668559FE8DC7795C122A8360DB9A88491B99CBF37F6EF758AC7C59068513D3D9E478EE0078610931CE5B78629BA83C48B9F57F6FCE95E764D077A78EB38429106F3CA21A770B44F93B21AF44AF8B0AB8D9A139C9C3A394E52ADBF15AA8A6DC36BAAAC00777A7A3CA3F2701CE777C0F1199D4CA044AA812F2F9B562D0F22B18AF1DC6EC89CC4C04861179AEBD37A3AF31AC0FB78F725F0DE69E47DC38B76F53010DF317D6B724E31273E1B8345392DBCC06058DFE6F91FDA6F7C7D29F88AE81FCAE03140C6462908CE6FF27CE232275C4FA14D62748108DF98D9A3245046227CF9310A44288A49CCA2B67EDB169D71AE6CA3CEA440B0ADAA098927EB079294A29306E01622C85EAC79CA7F4E128E4575A418FB1C5B011ADFAEBF7BC5C04D0D8756DBE06B5F26AD0186A9ED5365A057C93BB2D29F839162EE31B93FB6687BA5A8B7EB66E78F1797B5CD27C64735385BAA78A770830F4FF6A5DAA61F6C40221DA73F29939BD6B81FDA39CB1F3F04C2D098EDC808827FF07C82112BD2A97086AF78C126E6C64F422073091538D35A779BF26C0D4F6025837D2D9501B0F794A5B21870643BB8FEC95E813D38EE48D40D2C155003FEE10534D92FAB0043703C338EE20F2C8AEFAF79FAC77AD0C994A9399D0335342CBFFE1BD64EECE4A6049EF18CC5B158A65FAD13E56AC28FED0FA0663405E1AD59D2A22CF2859FC6D5284B09FC53AF836D69CFD10650B52BFF4DC1BCA5AC58A73D0157CFD0692CFFA0F42435DF06D076D6B1D6E52833B93363832AD6661F85B9C7FC5B74E13584978831DEE8552269F5159F0B1AE6B052A30C937BB81F67177E67EAA2D78A6B3F92728A84A2434E3A907CD6330CC2F805728F2659333413BB07F316EFE6039E685CD842A0FE6EB9B918FEFE9F0CA1D2A519C27B68F25653F6DBD6F13B022B89433F2561CD46038BCB61B6BD8D5D4866F32365173525DE25F0CC0993FCB858448A8A45A6C6F0079E7A3BF09FD0C3CB836C7771185056DA1F6F9BF89A22BABEDE95A5885CF077513DB4418FBC773F2D3260CCBDE19528D8B0EB2288A26B6D297070A5AFF2E1C2F4F81012F2B28DEA636C2DFF87C4DF4718A18D81A01E1D5A560F501B5D1B76A9E339D156099056B70EF8558E7E14FFFCCE3EAE2D9216F3D00A6A266D113A250F18E636D1A47ED62667847F04771CB3A17C89C6B066A864D2D95804CB5BDF9913FDC2D5CD00B65414C350B8966DAA928B5BFFF51133A31EE5B50ED278C6DCF065BCB6C992B9F57B8781E87990869F61AF5

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Italic cguidfix
/F2.1/HelveticaNeue-Italic renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /P put
dup 34 /a put
dup 35 /s put
dup 36 /space put
dup 37 /one put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 6 dict dup begin
/.notdef 0 def
/space 1 def
/one 2 def
/P 3 def
/a 4 def
/s 5 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4381012 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2852CB9BD3FB4254FD5F0903E5B67D5C2ED1223D2F1D96D0624F745D9E6F43F03B659367FD8D390E6A20EE3EBA100EA53918DD1B6C93C796E0FB8DCD9EC789502738128ED8FDE21A67817B8B464954F8A9CA078C85AEC75A2B8CA274FD5F4E5279972E1478494A52F63E78D92B6659E4A5C644222E00957B49A9EC257376C6CBB3B6F9BB74F7566A4495712AF9CA8C4325EC769D86BDAD787F06EE65A3126490372EFA362C4F831C15BE300DD94C77B6FC3DDBFC7B8040C8484D7B61E1E0EF145708CA029C6674C27FE5EE02C0174618D975FE0D243CABFB251779CB85E994740E442B3D391E0D42E596ACD27E3A8DFD5E93FA8BCA22AA5CB5A7F85140739CB6321F77CE6E4488071D085636086EA88B693B6A5385B5742E4FDC42BA5703E878F847536F01F0BE39B3D397BF7953810BA725D4DFE123B2BC5A8ED2D9600995FB3EF1262E39D2C5BBFEABE20E7A94ABE18548A3745A82BD5303A3F28B1F8C3A4EABBE9062AC1180A012CB1F1F1916E33BC3498125E846FE8E088CBAB055E70E7F7C3721B59D6C537B970E2943BABB381AB0DCCCD7EE1BCA8B66DF0EB1A186DA73ED094EBAE59DBBF9EDCD2515E7C5D3936B050557F59DF73BA94608150437FA5872D5E411057B219AD2AE3B78C336DC81A8DAD4AC7F4DC530C60153367F3C01D36696125BAAF9DBE2808A5E05C4A75CDE4E18D113C1210276459A61D290229CB4393C4006C3570D0A1FE9D5349AE177B288CAF872B9BB49CA86E2783FAC27EB982F980551B
D57DB344F9A516B9744ADA533786B9D3F5DD9D40F3B4C29F5BA0343CEA83244EE24283F75BCD171E9E1D12AD3169CBB2C0981CCF12725EC8C45F9693C37DBCE24F5808F22F6913BAABAB09A57ACD025A104D37E2FB6716601A76A20F3635940471D0F234ADAD5802EC9DAF45B1FCBC061CF5A8516AB1CB7E654DA3278DF1975E1052B0CAA113DB978FF894113699D2C3DF4DF2632ADDB1E81D7A905BDD31D5C8147264BD2DCCE25D65756B3E55F76C1B2C165B1B8FA083D3FAABB1E84445C92B697450B9D10E2D3956E24F0F13756CBB7C8052FD68DF2E35438163ACFAA69BEC62DA1F32D66D9F5D88B8A48A1E8B5265BDC63ADEDE5B53A91E09738411E6A712C7CCF079F077AEA00C0DFC6C0C4D456B7D4A2A55A603F7B6D3352B15482A9E3532C980C222CBBE813EB20D3B06123AC709A199A4C768330BF6E423E75C2E708D49818A9C36963BB4EB56946C53E803E36A7E2E304EC70153528AA22FB5E066654327FFFD485CF58EC2EF16561B9826E286B3618E657F9BE8E1073C655D86F925D705B8FB6F879D2318AA1B52C0729D25CE49F188F44B603D15860009FD1C0F4E6752DA9E0E00A47A49F4CFF7BF64D8BF63A436B8FD6066508CD61D54F2E49BFF3F827C436421977F4D20BD8E494EBF8E6D230288F9A0301B14B6993B51B63E95DD21252E06066538FE340593336857A70E28D041896288B82A27C5BEE27024F3C934C176F633CF963F59A5EC9E0328ED354FD1A30CC91F4E280C19FF70E7F0274A3895FE40665C9FF981CCEFE01D2CCC368C4AB6D73B01EECCE8E90F37771F15BC7F11B0DB407D4954EB8DA3D84DFA7C812FB29CD1723B393E74
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F3.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
q
0 0 503 248 rc
0.5 40.517944 m
195.71045 40.517944 l
195.71045 0.51794434 l
0.5 0.51794434 l
h
0.5 40.517944 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 1254 cm
/F1.1[ 12 0 0 -12 0 0]sf
185.86322 1237.3141 m
(!"#$%&'\(\)%*+,-$#./\)%0#,-$#./1)[ 7.776000 6.444000 6.444000 6.672000 3.336000 3.108000 2.664000 7.116000 3.336000 3.336000 6.216000 3.996000 6.000000 3.780000 6.672000 6.444000 10.236000 6.444000 3.336000 3.336000 2.664000 6.444000 6.000000 3.780000 6.672000 6.444000 10.236000 6.444000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0.5 96.517944 m
195.71045 96.517944 l
195.71045 56.517944 l
0.5 56.517944 l
h
0.5 96.517944 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 1254 cm
193.24323 1174.146 m
(2'0-/+%&*+,-$#./%3%45#6/07%8%)[ 6.888000 2.664000 2.664000 3.780000 6.444000 3.996000 3.336000 3.108000 6.216000 3.996000 6.000000 3.780000 6.672000 6.444000 10.236000 6.444000 3.336000 7.200000 3.336000 3.336000 8.664000 6.444000 5.760000 6.444000 2.664000 3.336000 3.336000 7.200000 0.000000 ] xS
207.04922 1188.4821 m
(0#,-$#./%3%49#::'$,71)[ 2.664000 6.444000 6.000000 3.780000 6.672000 6.444000 10.236000 6.444000 3.336000 7.200000 3.336000 3.336000 8.220000 6.444000 6.888000 6.888000 2.664000 6.672000 6.000000 3.336000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0.5 152.51794 m
195.71045 152.51794 l
195.71045 112.51794 l
0.5 112.51794 l
h
0.5 152.51794 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 1254 cm
236.55122 1125.3141 m
(;+<=/"-%&'\(1)[ 7.776000 3.780000 6.888000 2.664000 6.444000 6.444000 3.780000 3.336000 3.108000 2.664000 7.116000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.17647099 0.21568599 0.235294 sc
265.10522 1213.4821 m
265.10522 1204.3821 l
S
0 i
CM
98.105225 54.617943 m
95.105225 46.617943 l
98.105225 49.617943 l
98.105225 49.617943 l
101.10522 46.617943 l
h
98.105225 54.617943 m
f
0 J
0 j
1 0 0 -1 -167 1254 cm
265.10522 1199.3821 m
262.10522 1207.3821 l
265.10522 1204.3821 l
265.10522 1204.3821 l
268.10522 1207.3821 l
h
265.10522 1199.3821 m
S
1 J
1 j
0.60000002 i
265.10522 1157.4821 m
265.10522 1148.3821 l
S
0 i
CM
98.105225 110.61794 m
95.105225 102.61794 l
98.105225 105.61794 l
98.105225 105.61794 l
101.10522 102.61794 l
h
98.105225 110.61794 m
f
0 J
0 j
1 0 0 -1 -167 1254 cm
265.10522 1143.3821 m
262.10522 1151.3821 l
265.10522 1148.3821 l
265.10522 1148.3821 l
268.10522 1151.3821 l
h
265.10522 1143.3821 m
S
0.64705902 0.84313703 0.82352901 sc
CM
307.53955 40.517944 m
502.75 40.517944 l
502.75 0.51794434 l
307.53955 0.51794434 l
h
307.53955 40.517944 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 1254 cm
492.90277 1237.3141 m
(!"#$%&'\(\)%*+,-$#./\)%0#,-$#./1)[ 7.776000 6.444000 6.444000 6.672000 3.336000 3.108000 2.664000 7.116000 3.336000 3.336000 6.216000 3.996000 6.000000 3.780000 6.672000 6.444000 10.236000 6.444000 3.336000 3.336000 2.664000 6.444000 6.000000 3.780000 6.672000 6.444000 10.236000 6.444000 0.000000 ] xS
/Cs1 SC
0.86666667 0.52941179 0.60784316 sc
CM
307.53955 96.517944 m
502.75 96.517944 l
502.75 56.517944 l
307.53955 56.517944 l
h
307.53955 96.517944 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 1254 cm
/F2.1[ 12 0 0 -12 0 0]sf
504.54279 1181.3141 m
(!"#$%&'\(\)&*$+,-%'.'/0,1%#23)[ 6.888000 2.664000 2.664000 3.780000 6.444000 3.996000 3.336000 3.108000 6.228000 3.996000 5.772000 3.780000 6.672000 6.228000 10.224000 6.444000 3.336000 7.200000 3.336000 3.336000 8.664000 6.228000 5.328000 6.444000 2.664000 3.336000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
307.53955 208.51794 m
502.75 208.51794 l
502.75 168.51794 l
307.53955 168.51794 l
h
307.53955 208.51794 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 1254 cm
/F1.1[ 12 0 0 -12 0 0]sf
543.59076 1069.3141 m
(;+<=/"-%&'\(1)[ 7.776000 3.780000 6.888000 2.664000 6.444000 6.444000 3.780000 3.336000 3.108000 2.664000 7.116000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.17647099 0.21568599 0.235294 sc
572.14478 1213.4821 m
572.14478 1204.3821 l
S
0 i
CM
405.14478 54.617943 m
402.14478 46.617943 l
405.14478 49.617943 l
405.14478 49.617943 l
408.14478 46.617943 l
h
405.14478 54.617943 m
f
0 J
0 j
1 0 0 -1 -167 1254 cm
572.14478 1199.3821 m
569.14478 1207.3821 l
572.14478 1204.3821 l
572.14478 1204.3821 l
575.14478 1207.3821 l
h
572.14478 1199.3821 m
S
1 J
1 j
0.60000002 i
572.14478 1101.4821 m
572.14478 1092.3821 l
S
0 i
CM
405.14478 166.61795 m
402.14478 158.61795 l
405.14478 161.61795 l
405.14478 161.61795 l
408.14478 158.61795 l
h
405.14478 166.61795 m
f
0 J
0 j
1 0 0 -1 -167 1254 cm
572.14478 1087.3821 m
569.14478 1095.3821 l
572.14478 1092.3821 l
572.14478 1092.3821 l
575.14478 1095.3821 l
h
572.14478 1087.3821 m
S
0.86666697 0.52941197 0.60784298 sc
CM
307.53955 152.51794 m
502.75 152.51794 l
502.75 112.51794 l
307.53955 112.51794 l
h
307.53955 152.51794 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 1254 cm
/F2.1[ 12 0 0 -12 0 0]sf
498.20679 1125.3141 m
(!"#$%&'\(#,*$+,-%'.'/4,55"+*23)[ 6.888000 2.664000 2.664000 3.780000 6.444000 3.996000 3.336000 3.108000 2.664000 6.228000 5.772000 3.780000 6.672000 6.228000 10.224000 6.444000 3.336000 7.200000 3.336000 3.336000 8.220000 6.228000 6.888000 6.888000 2.664000 6.672000 5.772000 3.336000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.17647099 0.21568599 0.235294 sc
572.14478 1157.4821 m
572.14478 1148.3821 l
S
0 i
CM
405.14478 110.61794 m
402.14478 102.61794 l
405.14478 105.61794 l
405.14478 105.61794 l
408.14478 102.61794 l
h
405.14478 110.61794 m
f
0 J
0 j
1 0 0 -1 -167 1254 cm
572.14478 1143.3821 m
569.14478 1151.3821 l
572.14478 1148.3821 l
572.14478 1148.3821 l
575.14478 1151.3821 l
h
572.14478 1143.3821 m
S
0.27451 0.31372499 0.35294101 sc
CM
225.46614 85 m
225.46614 105 l
257.78384 105 l
257.78384 115 l
277.78384 95 l
257.78384 75 l
257.78384 85 l
h
225.46614 85 m
f
/Cs2 SC
0 sc
1 0 0 -1 -167 1254 cm
/F3.1[ 16 0 0 -16 0 0]sf
393.43301 1027 m
(!"##$%)[ 10.672000 9.184000 8.592000 8.592000 4.448000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.17647099 0.21568599 0.235294 sc
266.41318 1214.4821 m
266.41318 1205.3821 l
S
0 i
CM
99.41317 53.617943 m
96.41317 45.617943 l
99.41317 48.617943 l
99.41317 48.617943 l
102.41317 45.617943 l
h
99.41317 53.617943 m
f
0 J
0 j
1 0 0 -1 -167 1254 cm
266.41318 1200.3821 m
263.41318 1208.3821 l
266.41318 1205.3821 l
266.41318 1205.3821 l
269.41318 1208.3821 l
h
266.41318 1200.3821 m
S
ep
end
%%Trailer
%%EOF
