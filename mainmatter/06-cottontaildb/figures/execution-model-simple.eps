%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 557.000000 173.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 11.6 (Build 20G165) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 557 173
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 557 173
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /S put
dup 34 /C put
dup 35 /A put
dup 36 /N put
dup 37 /F put
dup 38 /I put
dup 39 /L put
dup 40 /T put
dup 41 /E put
dup 42 /R put
dup 43 /H put
dup 44 /O put
dup 45 /D put
dup 46 /P put
dup 47 /J put
dup 48 /e put
dup 49 /m put
dup 50 /i put
dup 51 /t put
dup 52 /parenleft put
dup 53 /parenright put
dup 54 /c put
dup 55 /o put
dup 56 /l put
dup 57 /x put
dup 58 /u put
dup 59 /n put
dup 60 /hyphen put
dup 61 /h put
dup 62 /r put
dup 63 /a put
dup 64 /d put
dup 65 /zero put
dup 66 /one put
dup 67 /ellipsis put
dup 68 /y put
dup 69 /colon put
dup 70 /space put
dup 71 /p put
dup 72 /fi put
dup 73 /s put
dup 74 /equal put
dup 75 /quoteleft put
dup 76 /z put
dup 77 /quoteright put
dup 78 /comma put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





1239B8003DD030312506232226350E0123222E0235343E02373E0335342E0223220607233E0333321E0215111416333237270E0515141E0233323E0235020A16272127235D36233F2E1B1E313F21233F301C152129143648035502243C4D2C2345382207140B0F8A1034393A2E1D111B24142A3C2612020D252A2A25102237272C3823120607070D19181C2212062939304229120A1F382DFEF61E1C05C70C0B0709142520151D12081723291200000000010024FFF501FA021100230079BA001C000B00032BB8001C10411B0006001C0016001C0026001C0036001C0046001C0056001C0066001C0076001C0086001C0096001C00A6001C00B6001C00C6001C000D5D410500D5001C00E5001C00025D00BA0017001000032BB8001710BA0006002100032BB8000610B80000DCB8001010B80014DC303101332E0323220E0215141E0233323637230E0123222E0235343E02333216019F5805263B4D2C3D5C3D1E1F3D5B3B63730E5708473F283A241110253E2E3640015F2E432C152B4B653A3A61462668603C4220354424274938223600000000020024FFF5020E02CA0013002C00BBB8002D2FBA0015001600032BB8001510B8002D10B80022D0B800222FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8001610B8000AD0B8000A2FB8001610B80018D0B800182FB8001610B8002AD0B8002A2FBA002B00220015111239B8001610B8002CD000B800152FBA000F002700032BB8000F10BA001D000500032BB8001D10303137343E0233321E0215140E0223222E0205112311232E0323220E0215141E023332363733157E10243C2B2C3E271211263C2B293D2713019055020E292E2E143B593B1D1E3B593C365A1502FE264838222136472624463722203645DA02CAFEF6171F13082B49623737624A2C262B46000000020024FFF502030211000A0026005BBA0014001F00032BB8001410BA0015000000032BB8001510B8001410B80001D0B8000010B8000CD0B8000C2F00BA000F002400032BB8000F10BA001A000600032BB8001A10BA0001001400032BB8000110B8002410B8000CDC303101213E0333321E0217230E0123222E023721362E0223220E02151E0333323601A7FED702162635212035271754540B45362A3E28120101830215375B4535594124021F3E5B3E587401341E352817172736AE33321C2F3D222F6858392848623B3B6448285800010040000001EC02CA001A0051BA001A000000032BB8001A10BA000E000B00032BB8000E10B8001A10B80002D0B8001A10B80018D0B800182F00B800002FB800012FB8000C2FBA0013000800032BB8001310BA001900010000111239303113




00>] def
/CharStrings 47 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/hyphen 5 def
/zero 6 def
/one 7 def
/colon 8 def
/equal 9 def
/A 10 def
/C 11 def
/D 12 def
/E 13 def
/F 14 def
/H 15 def
/I 16 def
/J 17 def
/L 18 def
/N 19 def
/O 20 def
/P 21 def
/R 22 def
/S 23 def
/T 24 def
/a 25 def
/c 26 def
/d 27 def
/e 28 def
/h 29 def
/i 30 def
/l 31 def
/m 32 def
/n 33 def
/o 34 def
/p 35 def
/r 36 def
/s 37 def
/t 38 def
/u 39 def
/x 40 def
/y 41 def
/z 42 def
/ellipsis 43 def
/quoteleft 44 def
/quoteright 45 def
/fi 46 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4203806 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2879EDE82483B68F331B5A817FFB1254A6CAC0699B15ACCCD8411678BAD79C1DBFA43A57C5F609054B9610F93341E4ECF4AA6AFBC0DCED63CB17B29A09CE7BDBB016731409FE49F2682244107F6EEA57D2D2058C6BC262BB109DD84A4D05821010D69E77448242FC01F0783D8DEC006C7F910A75A7218EEC94E4D6AECE65221186FC2B832C109F0239ADEE55548320C96FBCF5D08EB23DD32F88FE44C24150E48DFA682AB380E9771F2437E532632AE7E4799AC3F7CA55E9DD61F53F896B6B9CA127719AA22D3CC975330DB6A284EC34B4C0332A39D18292CE3F806A4EF581CF4B24845BD6CD95FACFEC9C621051EA780AA82A65B385C29E1185442BFD47F358578D7FD25118D84B433C68826EA8328AE15B0A626D5472E81CE4E40648920DB610638A77EC2D075F0744EE94C4D8618880FF318A1FE144A079A3AF976FCD9F25DF69D1767DCDC9F3D23A2885E8B82975E4A69498D37AE85EC720486AF61F484877A8ECE2B9082DCA3AFEFB1CCAD26618C76CB76615B1BF78E422D3EE90D4808CC65EFAAC803F99552591B0FD8CB282DAA8B7AA042ACEB0836575ECC2E3E9260AC0D3FA9624F76BDFFB4DDC7990DE2F634985EFF067C4D66D298CEDF52CBBABFA8CAB62EA704C91F215559B9BB8E46466E810172EF69C16FA0FCBDF0DCF40E4682607ACF85E9E0C6E11B1EE8D0938AFDF7B4EA271E49BE8666E68F60D5F8D3D642DCA290C8BD04A486446613C862B704866E0DAC0CF5E05EBD6190731EDCCD632E43FDE29C



BFFE37F0AF02FFCE95CDA630DEEC753ADB017CFE2130FC4EADE5F0701DF0C4301F6DD76148C7620174A050FA5D6A59DDCF703A7C97577C949A5E484314506BAA90EFB363D50A2C2ADDF3C820E04F24F2CBFDF26140D9D8A05634C3FD8EC0D1EECF6D1D0ED5EDA5E1FF3BC3803F7667941B2F25C2AA3C4C00CAF9A5BCD3C51CF39AD911EF6C7E417B6BD59666138A9E333EE0B87B27F1D59794587B4B3DDAE29A473AA068D8E6FD433558BD2060A797A1022315DC99C73B3488AFC5D952D8ED42E9D8F18D07B1BB2A70EC2C43B27B8C2E64CB767940D2C87E392D3D087B8700ABF2A4AA9BCBF5FE1408036324ACEF2EB8FE107F9708CEE59674E928203329B35A67601158E6520B78CCF4FD8F40BF3A8FA3F899C92D676128DE4CAD8DB9D0E10E69637C4ADA61656E75849AE29CD9326B3CC8148041B8A7B77D51EDD509A19BF1EF5417454FB3C828151DC07F56E80AEF8E5BE164F63823A32B88BFC5F9F9AEA284B9D49496F61421EFA1BA5BB47C235E7702864E7D5C9E1EC7FF3FEF2A61D8EB1F6B404F3A1F9E53DFAAEC1DDAC81BC984770A85E58B600DE90947B73EF9E49D12D0181566C68666AD7609C689F8E9094E75B53B1478E915F0490BB73E161012FB4521867CC1B016E17E8E32A509593F057F6C183DABACE17EA913F10FB4D87409C12E5CC6007258F8A70910C5CA480D5C2A140FE785CDCD10295B83C4AC2265889D41697FCFB8C0125645162C08C8FA9999440BA5FB1278DB8B59051EA48452193CFCECE50EAE3FF02EFB3D0C677AA7FF8F0664AB3866D2E40688A10F4935827CAD1E8C7F149CEBB282CDA1609F6C743EA7ED563B4A578CE583D254D8A5E593958A46A54F4E4659F82F9348809306467774FFBE61D80442286DCB5DA2CB25FA40312D9EDF71A3C0915FFA956FF70FA236229CC757188E1096968D075FC5F06916A672FF3FCB566FF0B4E9ACCA745938A72F16B7D40379DF79A787FB3C8F03708450F08720707DAD50F0275FD18BB1AB5D1743F2B3C0E2AE85A011AD92A8705A70C727B3D334347F11B432442B473B697E61263AAB4456A2322CD944FAE0E683046DAF72038848DC2DD34DB9DF2030F8D423EBA06BA05898323F7CB20F7E9D658E6C31C9D7203D3BE58A18909C04A9C07B16CE688CEE7A92A607C65F66C3B94EBB210E3976838BEDF1C1156F451E28C5412E067915E79B172C53237559F5DC375F6330764344A4E2FAF9792E4270EC67454A8811D81C9573B12A9945BED4A392BE3C75BFE695CA7E01989A235DCDDC31C45629896FAD6A4212D2A1595AF2D6879853D7844F177D68D5C75BA2147D8030665D659DD84420975DBF48D31296A71242B19241E501E57366976145B191BCAA358BAD018F685283EDD0A65F51E674DE302B5FE7458B498AF754D3FE6C6D71DB8612AB3AA171875676D729345678315B
30C1F7504A87BC691D7A5832DA9C9D71895A1EF1A05A2D8F1A58BC8E47460BAB52E2592402C5B2775B4D8E2F21240B10BCA6B2501B1E0853334A19D0A2D250FF2077CDE8B7BF5976ED7CDF158D6FBF66D18A2A7F2074F5E068F5B441E3C4D79501FEBAABCF6FC7E3D21132C89B60778C55E0F1A5F983FF15A528C32A9782BF8CBB45098BD009C31C862F99990674F7EBE79B181C7AE42A51FA03CBD32F5D2F8E46136D256C285B243BECCD2C13A5626B166692741A1C659A141CDA72C92EF91FF6BCE457F1F44808EE9B31785B0815FD8F9CB222659B35783DDFEC2F30121148B897EA83F799D9ED7AF1820FDC73E9042D29F54C8C8718FBC16807BEF2C597684C7A82FEF10E59478976F62C2087A60499D3846E34EB7A8A459AC83602B6FE4A497E828A21462C6491AFD856A2905B698C4E98C38C6B43DB5184E887DFB4969B93CEC3D4962242EAB8F10B0908FFE8D27DB620ED5B40CB7AD2DCF4CCBEBB4B5C2067E448FF4CA18FC2309E53793A1F579CA4DA2BF63DD96A1832D72F1E87728425BBCC7F63C48EF1B0ACD1D55F2E883481726D9C156E353268F96CD8E1ED48B0F9A407B41DE2075EC2B25B7E949BA23195F6B288A25F7DA6287620AD4181F4FA491008BD39979A0B88E6F04FB40221A7392FF2A210139596B494C0748C6A464128DDA7771474FAA58CC1376459E0AA76713756F27537EC73756D5ADE15018E011AB9A7A07E680FC33F268A7F47FE38477FCB130DBE266721602B75320998BB7C81A743BB18C50E296E53C0E0B00C2DE4565B192478D87912A0E9D6E42D1944C02AA52A57E6D32D3ADCCEDB9E88D066C46FAB05BD14EB0B84C697EC3E0E35A801433C7835917216CBDA436ECF2A51E5A8E6549459C11114B22D720828827C0B5D852676A2EB2F07654D465542C8B4AE8244CFA8948C3455D52371EF163D741692C36C01B16B1CDE12F9CAF61F0B470CBCEC555A25E353F5D01896AF2D1CFD490686D5F694CA1E9AA191592144F6766FA31501ECF5AF8B4AD495E4CB00D937E91F410F24640FEA6290CCAE24191478D0A5EABBA4DF823D744906A94C362F4CE6D72CE200FF2CF3998DADB16C8888FA5410A6780773460507EDAEEA81C974DC0064869819224ACF288E22F3FDCAE4C0FA762C1BB3E6F6BBB006EDF0CF5891D6EE874AB81678B5AA94E492BC9E313A43E126335325FAA6BC8DD3E11C90283499B645919CDAA159161739F0DA7B6D62F7B7401B77F624DDEB249CF286ECA84F343CFBE41718A029C38CF7C0C775C23211C0B838CEC9B8BC0A1408E743B23A15370F12D44989D5611229B2C8DFAF6DF940462F5E7958D98F6438C7709AA4089FAAC048F98B0092D987AA596B097C70B965EA0D064F1D87BA909A359EB5998976E0EBD6CD7F9B8386EAD2860634C97C2A2F250C8CCD471EB5FCCC66E2CC05475FE6F154
03BEB7BCD3DF20D8EAA156640152CD11F6D53640B82CB40C3BFFE8A6C519CC1D04AA180BCDA10BBC51A5F9843F62378C83348C84E3A8EE7AA21EEA06A2B613B465BAC72375074CA38AC7F8370D8DDC4E2D7A28868EFE4D20CF042E3D18228F85968F09F3594783F85D37B7F0C9DF2742919E328ADFBEDBD7027ED0D8E111EDCAD36578625EE08B4D6CBA7EF8DF24E9D1E6BC670392C1CBAA2D7A2916D0781E39EFB79920F0C2FF7808F7739FD558DBBD23C79A939FC63C6707C73EE0CE90037E6FAA07873FC1857E76D46497FE39378EABE227D10A4A15AB592C2895ACD4CEE88D8BDE9D57A0F11A1A9D74AB0414CFFA7F47D3086F82483F6A83CF395186C6CEEF5501834FA565FB41208AD0DAFAD0FDE147E3B80AF73319C0DE75E5D6803B4CDC21CA3D0F7BD62AE093AD4076AFF7E03172D3946FDEE86698DE448005E00BEB1C4146A50C2AD3E87D9EEEAB3D59B6D3F9FA1C77B30ED8FAF32D2BC6EF442719C4A15EAF69D71EC0632D1770643EECC4735623522666A3D4C7CD662BDDDFF9385FE88DA430247CE654595BC466989CE25EDBCEF4CF701F1E72354A7C608D5433EC127697E51925191AA05E45DACDBF8F2F58131FB027584AB918AA5E0A8AA8EB409477562FA5B41F368D6268C3BBBABE4475E22C80A8D445AC633205BBF89D296C0AA2EF557F1DB259E34C2DD3713EC9DCB2B4BD94FA2C3704312F0B3EE797FF0F5738E8FF544911D0A992050260C353297E0C83601728CCD54CFD5081E39605D6998714468B289E9D1265E9B43162932B5E1873B68320E4D5239A6418AB782A7C240FA67C40539EB14256A1EE545060649221776B0543FA18C7C2DDD10E0095ED3C4DE8EAD1A8EB8C905780F8CA71BF22A8670FF845015B9C288EE3BC1599F6385713F4B9ED8D9D90D25ACA6DE86E4F0EBAE03BCC419519AD4B18E0E769E8089F3811B5436B1D3ED718F2407E23210A32DB1C3600E9FCBB6754CE77496EF36D5EB15067850E9AD0B8F7317879C11C16D6181FCC9E8FBCD0A572F1B97612CD2A80351ED4B44FB0F093672E248BA1037723FE6D0667FFE031
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /T put
dup 34 /h put
dup 35 /r put
dup 36 /e put
dup 37 /a put
dup 38 /d put
dup 39 /colon put
dup 40 /space put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/space 1 def
/colon 2 def
/T 3 def
/a 4 def
/d 5 def
/e 6 def
/h 7 def
/r 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4381012 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28A34314447AEE989C9D5F058EB91AA64CFFCFD907A0DD23543824D922E57D7C4883211A2271066BA2524F670D3375003754D0B4BE3CF934D4554CCC35E25B52CC3BED941AF640648A919AC25DF78E99BE84C149600DC123752EF0534328B84EA580EE97855828D1E2B64B26FD83E212C25419AC9BDC3DAE9A73693EF0400D0906DF51B4A10C629FB53AF8A2ADB4FA3D62940566C6A5890E34E452BB016CC1A50A6BCC84AA2B529C59161DF90AEB16207595A7B248CD06A0F20A65D10B50DACB6DDBA2A8EA73673793F8D9DDA8B9B5B505A68812616BE406DEE302EB68EF4B5B36675086BACADC8CE36972DB88D59F6A1FC9893BED040B922AE102B743A2FF66EA2A6BD5AC8EB5FE97F1A16B4BADDFB4E6959F7F231D6F86520A960B9A837A77948FDEFC9F63CEDE9C640D8D22FE31C4C834DD54AACD2C526E55E01D8D07E591690993F0088EE7463C719EEA8B13712B9CB731AD0A44CA1BF759C7A08850B8BA1D0BD44288B834D781F6FF2E9C1316227C37E03D7D20DB81414D777B960945A700CF0FD21D26B8C096FF67D52C1026D85DBEFA9611B28AFEF6920E102128D5704D2C90E787D17243CA1301603C2CB31EC92F1796B52B43E6A795F83643296749FE1D6F5CB2D8725EAD8270ADE37AFD19B2C066470730A3A3FD9E776F3B66787431B5061D092E35AB184DC0E38D048775A67614F5476EF4C9DB3EFEED49B88D12C681E6F636CE91BEF2076F4873E61653104F416DE8531F91EB3DEC3846EEAB80DBDABED97

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
q
0 0 557 173 rc
5.2424998 109.664 m
66.7425 109.664 l
66.7425 69.664001 l
5.2424998 69.664001 l
h
5.2424998 109.664 m
f
/Cs2 SC
0 sc
1 0 0 -1 -340 1206 cm
/F1.1[ 12 0 0 -12 0 0]sf
359.55249 1120.168 m
(!"#$)[ 7.776000 8.664000 7.776000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
112.2425 109.664 m
173.74249 109.664 l
173.74249 69.664001 l
112.2425 69.664001 l
h
112.2425 109.664 m
f
/Cs2 SC
0 sc
1 0 0 -1 -340 1206 cm
463.99051 1120.168 m
(%&'\(\)*)[ 6.888000 3.108000 5.568000 6.888000 7.332000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
406.74249 1116.3359 m
445.3425 1116.3359 l
S
0 i
CM
110.3425 89.664001 m
102.3425 92.664001 l
105.3425 89.664001 l
105.3425 89.664001 l
102.3425 86.664001 l
h
110.3425 89.664001 m
f
0 J
0 j
1 0 0 -1 -340 1206 cm
450.3425 1116.3359 m
442.3425 1113.3359 l
445.3425 1116.3359 l
445.3425 1116.3359 l
442.3425 1119.3359 l
h
450.3425 1116.3359 m
S
1 J
1 j
0.60000002 i
513.74249 1116.3359 m
552.34253 1116.3359 l
S
0 i
CM
217.3425 89.664001 m
209.3425 92.664001 l
212.3425 89.664001 l
212.3425 89.664001 l
209.3425 86.664001 l
h
217.3425 89.664001 m
f
0 J
0 j
1 0 0 -1 -340 1206 cm
557.34253 1116.3359 m
549.34253 1113.3359 l
552.34253 1116.3359 l
552.34253 1116.3359 l
549.34253 1119.3359 l
h
557.34253 1116.3359 m
S
0.64705902 0.84313703 0.82352901 sc
CM
219.24249 109.664 m
280.74249 109.664 l
280.74249 69.664001 l
219.24249 69.664001 l
h
219.24249 109.664 m
f
/Cs2 SC
0 sc
1 0 0 -1 -340 1206 cm
570.77448 1120.168 m
(%\)\("+)[ 6.888000 7.332000 6.888000 8.664000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
326.24249 109.664 m
387.74249 109.664 l
387.74249 69.664001 l
326.24249 69.664001 l
h
326.24249 109.664 m
f
/Cs2 SC
0 sc
1 0 0 -1 -340 1206 cm
676.32251 1120.168 m
(,*-\)*)[ 9.120000 8.220000 8.448000 7.332000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
620.74249 1116.3359 m
659.34253 1116.3359 l
S
0 i
CM
324.3425 89.664001 m
316.3425 92.664001 l
319.3425 89.664001 l
319.3425 89.664001 l
316.3425 86.664001 l
h
324.3425 89.664001 m
f
0 J
0 j
1 0 0 -1 -340 1206 cm
664.34253 1116.3359 m
656.34253 1113.3359 l
659.34253 1116.3359 l
659.34253 1116.3359 l
656.34253 1119.3359 l
h
664.34253 1116.3359 m
S
0.64705902 0.84313703 0.82352901 sc
CM
433.24249 109.664 m
501.24249 109.664 l
501.24249 69.664001 l
433.24249 69.664001 l
h
433.24249 109.664 m
f
/Cs2 SC
0 sc
1 0 0 -1 -340 1206 cm
780.12848 1120.168 m
(.*,/\)"\()[ 7.776000 8.220000 9.120000 6.228000 7.332000 8.664000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
738.24249 1116.3359 m
766.34253 1116.3359 l
S
0 i
CM
431.3425 89.664001 m
423.3425 92.664001 l
426.3425 89.664001 l
426.3425 89.664001 l
423.3425 86.664001 l
h
431.3425 89.664001 m
f
0 J
0 j
1 0 0 -1 -340 1206 cm
771.34253 1116.3359 m
763.34253 1113.3359 l
766.34253 1116.3359 l
766.34253 1116.3359 l
763.34253 1119.3359 l
h
771.34253 1116.3359 m
S
728.24249 1116.3359 m
738.24249 1116.3359 l
738.24249 1112.3359 m
738.24249 1120.3359 l
S
1 J
1 j
0.60000002 i
841.24249 1116.3359 m
888.96649 1116.3359 l
S
0 i
CM
553.96649 89.664001 m
545.96649 92.664001 l
548.96649 89.664001 l
548.96649 89.664001 l
545.96649 86.664001 l
h
553.96649 89.664001 m
f
0 J
0 j
1 0 0 -1 -340 1206 cm
893.96649 1116.3359 m
885.96649 1113.3359 l
888.96649 1116.3359 l
888.96649 1116.3359 l
885.96649 1119.3359 l
h
893.96649 1116.3359 m
S
/Cs2 SC
0 sc
414.82251 1106.3359 m
(012345)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
521.82251 1106.3359 m
(012345)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
628.82251 1106.3359 m
(012345)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
735.82251 1106.3359 m
(012345)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
681.61749 1096.3359 m
681.61749 1096.3359 687.53088 1057.8359 696.24249 1057.8359 c
702.10498 1057.8359 707.37952 1075.2711 710.20258 1086.6755 c
S
0 J
0 j
[] 0 d
0 i
711.95203 1094.4819 m
710.20258 1086.6757 l
713.13 1086.0195 m
711.95203 1094.4819 l
707.27521 1087.3317 l
S
/Cs2 SC
0 sc
676.22052 1049.5 m
(678806345)[ 6.444000 6.888000 2.664000 2.664000 6.444000 6.444000 3.780000 3.108000 0.000000 ] xS
/Cs1 SC
0.82352942 0.05882353 0.21568628 sc
CM
331.69803 113.19953 m
333.65067 111.24691 333.65067 108.08109 331.69803 106.12847 c
329.74542 104.17584 326.57959 104.17584 324.62698 106.12847 c
322.67435 108.08109 322.67435 111.24691 324.62698 113.19953 c
326.57959 115.15216 329.74542 115.15216 331.69803 113.19953 c
f
0.80000001 0.80000001 0.80000001 sc
5.2424998 17.720001 m
555.86652 17.720001 l
555.86652 1.1580048 l
5.2424998 1.1580048 l
h
5.2424998 17.720001 m
f
/Cs2 SC
0 sc
1 0 0 -1 -340 1206 cm
/F2.1[ 14 0 0 -14 0 0]sf
529.65948 1201.8579 m
(!"#$%&'\()[ 8.554000 8.302000 5.194000 8.036000 8.036000 8.554000 3.892000 0.000000 ] xS
/F1.1[ 14 0 0 -14 0 0]sf
584.11951 1201.8579 m
(0906:327;<3=>0?@<AB)[ 7.518000 7.252000 7.518000 7.518000 7.784000 4.410000 3.108000 8.036000 7.784000 5.446000 4.410000 7.784000 4.410000 7.518000 7.518000 8.302000 5.446000 7.784000 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
350.24249 1173.616 m
(ACBAAAAAA)[ 5.560000 10.000000 5.560000 5.560000 5.560000 5.560000 5.560000 5.560000 0.000000 ] xS
/Cs3 SC
0 sc
345.70749 1157.5 m
364.73749 1157.5 l
S
368.28101 1157.5 m
371.9375 1157.5 l
S
/Cs2 SC
0 sc
345.70749 1155.3359 m
(0;323DE)[ 5.370000 5.560000 3.150000 2.220000 3.150000 5.000000 0.000000 ] xS
372.9375 1155.3359 m
(FG07G80)[ 2.780000 5.930000 5.370000 5.740000 5.930000 2.220000 0.000000 ] xS
441.19751 1155.3359 m
(H>I3;?10FJFK+?L08M)[ 5.180000 3.330000 5.000000 3.150000 5.560000 5.370000 8.530000 5.370000 2.780000 6.000000 2.780000 2.780000 7.220000 5.370000 4.800000 5.370000 2.220000 0.000000 ] xS
560.26251 1155.3359 m
(42@NF8?I3;?105)[ 2.590000 2.220000 5.930000 2.780000 2.780000 2.220000 5.370000 5.000000 3.150000 5.560000 5.370000 8.530000 5.370000 0.000000 ] xS
662.14752 1155.3359 m
(48?I3;?10NF#!"5)[ 2.590000 2.220000 5.370000 5.000000 3.150000 5.560000 5.370000 8.530000 5.370000 2.780000 2.780000 6.480000 6.480000 7.220000 0.000000 ] xS
753.98749 1155.3359 m
(42@NFH>I3;?10NF8?I3;?105)[ 2.590000 2.220000 5.930000 2.780000 2.780000 5.180000 3.330000 5.000000 3.150000 5.560000 5.370000 8.530000 5.370000 2.780000 2.780000 2.220000 5.370000 5.000000 3.150000 5.560000 5.370000 8.530000 5.370000 0.000000 ] xS
/F1.1[ 12 0 0 -12 0 0]sf
849.32251 1106.3359 m
(678806345)[ 6.444000 6.888000 2.664000 2.664000 6.444000 6.444000 3.780000 3.108000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
