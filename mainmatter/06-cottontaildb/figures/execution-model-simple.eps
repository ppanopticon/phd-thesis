%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 672.000000 173.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.2 (Build 21D49) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 672 173
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 672 173
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /S put
dup 34 /C put
dup 35 /A put
dup 36 /N put
dup 37 /F put
dup 38 /U put
dup 39 /T put
dup 40 /I put
dup 41 /O put
dup 42 /R put
dup 43 /D put
dup 44 /E put
dup 45 /e put
dup 46 /m put
dup 47 /i put
dup 48 /t put
dup 49 /parenleft put
dup 50 /parenright put
dup 51 /c put
dup 52 /o put
dup 53 /l put
dup 54 /x put
dup 55 /u put
dup 56 /n put
dup 57 /hyphen put
dup 58 /h put
dup 59 /r put
dup 60 /a put
dup 61 /d put
dup 62 /zero put
dup 63 /one put
dup 64 /ellipsis put
dup 65 /y put
dup 66 /colon put
dup 67 /space put
dup 68 /p put
dup 69 /g put
dup 70 /s put
dup 71 /L put
dup 72 /two put
dup 73 /less put
dup 74 /greater put
dup 75 /comma put
dup 76 /f put
dup 77 /P put
dup 78 /J put
dup 79 /M put
dup 80 /H put
dup 81 /k put
dup 82 /equal put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






2B4B653A3A61462668603C4220354424274938223600000000020024FFF5020E02CA0013002C00BBB8002D2FBA0015001600032BB8001510B8002D10B80022D0B800222FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8001610B8000AD0B8000A2FB8001610B80018D0B800182FB8001610B8002AD0B8002A2FBA002B00220015111239B8001610B8002CD000B800152FBA000F002700032BB8000F10BA001D000500032BB8001D10303137343E0233321E0215140E0223222E0205112311232E0323220E0215141E023332363733157E10243C2B2C3E271211263C2B293D2713019055020E292E2E143B593B1D1E3B593C365A1502FE264838222136472624463722203645DA02CAFEF6171F13082B49623737624A2C262B46000000020024FFF502030211000A0026005BBA0014001F00032BB8001410BA0015000000032BB8001510B8001410B80001D0B8000010B8000CD0B8000C2F00BA000F002400032BB8000F10BA001A000600032BB8001A10BA0001001400032BB8000110B8002410B8000CDC303101213E0333321E0217230E0123222E023721362E0223220E02151E0333323601A7FED702162635212035271754540B45362A3E28120101830215375B4535594124021F3E5B3E587401341E352817172736AE33321C2F3D222F6858392848623B3B644828580001000C0000012902D20017004FBA0003000000032BB8000310B80006D0B8000010B8000DDCB8000010B80014D000B800012FBA0011000A00032BB8001110BA0015000000032BB8001510B8000010B80003D0B8001510B80005D030311311331133352335343633321617352E012322061D01231563556464221F0B1A0B0C1F0C46495701BAFE4601BA4B48221803044A0404413F4D4B0000020024FF2F01FE02110028003C00BDBA002E000C00032BB8002E10BA0001000200032BB8000110B8000210B80038D0B800382FBA000400020038111239B8000210B80015D0411B0006002E0016002E0026002E0036002E0046002E0056002E0066002E0076002E0086002E0096002E00A6002E00B6002E00C6002E000D5D410500D5002E00E5002E00025DBA0021000C002E111239B800212FB80020DCB8000110B8003EDC00BA001B002600032BB8001B10BA0007003300032BB8000710BA0029001100032BB8002910303125112315232E0123220E0215141E02333236373315140E0223222E0227231E0333323627222E0235343E0233321E0215140E0201FE5001175231435C38181D3A563A3259160211263A2A152E271B015502283D4B247C74EE2A38220E11253A292838231011243B2C01D94A2B2B334F612E355F472A2D30


222E0235113335B65558580E1D2F21412714190E056702059B9B4BFEB7242C18094B030A120F01414B00000000010040FFF501EC020500180051BA000C000D00032BB8000C10BA0001000200032BB8000110B8000210B80016D0B800162FBA001700020001111239B8000210B80018D0B800182F00B800012FB8000C2FBA0008001300032BB8000810303121112311140E0223222635112311141E0233323637331501EC5513263927313855112A443339541B020205FEDC233B2C183830015EFEAC2A45321B2D305200000000010009000001FD0205000B002700B800072FB8000A2FB800012FB800042FBA000300010007111239BA0009000100071112393031130333371733033723072723CBC26790906DC8B266817C6D0110FEF0D6D60117EEB5B500010008FF3101EC020500160086B800142B00B800014558B800112F1BB9001100083E59B800014558B800152F1BB9001500083E59B800014558B800052F1BB9000500063E59BA000900050011111239B9000C0002F441110007000C0017000C0027000C0037000C0047000C0057000C0067000C0077000C00085D41050086000C0096000C00025DBA0014000500111112393031050E0323222627351E013332363F01033313331333010B0F1D232B1C0F1E0E0B1D0A1A230923CD609702915A452634210F04054E05071917570202FE5901A7000003006F00000378006F00030007000B0081BA000B000800032BB8000B10B80004DC410300BF000400015D4103002F000400015D41030070000400015DB80007DCB80000DC4103002F000000015D410300BF000000015D41030070000000015DB80003DCB8000DDC00BA0000000100032BB8000010B80004D0B8000110B80005D0B8000010B80008D0B8000110B80009D0303125153335211533352115333503096FFE446FFE446F6F6F6F6F6F6F6F000001000000010000C051B47A5F0F3CF5011103E800000000B643600000000000DC4364C8FC49FE1F07C304350000000900020000000000000001000003B8FF2B001C08B1FC49FE8007C300010000000000000000000000000000003301F40033011600000103002F0103FFF70116005301850032022C002A022C0057022C0018011600530258002E025800300258002E0288FFFA02D2002B02C0004E0263004E023E004E02D2004E0103005202070016022C004E0367005002D2004D02F800260288004E02AD004E02880025023E000202D2004A021900240219002402510024021900240128000C023E0024022C004000DE00450207004500DE004503550040022C0040023E002402510043014D003D01F4001F013B0009022C00400206000901F4000803E8006F000000480048009200DE010C011E01CA01F0027802A602C402E202FE032E039C040404360462049E04B804F00510055A
059A063A06A2073207C607EC0822092C099E0A3C0AA40AF00BA20BF40C1E0C500C6A0D040D4C0DEC0E840EB20F560FA80FF81024108E10E60001000000330096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 51 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/hyphen 5 def
/zero 6 def
/one 7 def
/two 8 def
/colon 9 def
/less 10 def
/equal 11 def
/greater 12 def
/A 13 def
/C 14 def
/D 15 def
/E 16 def
/F 17 def
/H 18 def
/I 19 def
/J 20 def
/L 21 def
/M 22 def
/N 23 def
/O 24 def
/P 25 def
/R 26 def
/S 27 def
/T 28 def
/U 29 def
/a 30 def
/c 31 def
/d 32 def
/e 33 def
/f 34 def
/g 35 def
/h 36 def
/i 37 def
/k 38 def
/l 39 def
/m 40 def
/n 41 def
/o 42 def
/p 43 def
/r 44 def
/s 45 def
/t 46 def
/u 47 def
/x 48 def
/y 49 def
/ellipsis 50 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB286EB5B1D198523973099FE12CF4E68C9A34A4C5AA614AB94BF09F4047A27666A8D8D1AB38433820C9CA6B4FDE8E74D5B1CC04415AC015F6E54C5BD444367EEB9E3F05A87743993373741C90A9CCC3404F4E39D4D510076D0F403BD0A8E07B02FCA1E7F1160B23261095EF4D93A1FB76A44A6F2D91388D9A57C4C321C897E1BF5F1E96DDFD4EB1133C9A57A7AD819D79441C9772D27FB70761AC30558354D493700275909BF6F94AEBFA1B6A290565594CFEDD61CE9FCD4BD265F09914FB965395F5BB45F7528902BCDD91F73484A7B52703F13E672BEC659DF24987FA1DFA1E23E47D44999ABD96D253942A5C728AD5BDBCB1F8711F9D92668C82BE9A635EAAC3C7B541EE92123C3E7C0814B71FF3C518F1A6B1383D2697DAA5F053337246C70093F17B8E1E714F13FF25798FD1722FEADE94FE3396A474BC84E9475BC2A470F8374DACE6AF390804BF88DFFA9053539BBE13A2BA04973FD24B5001C8EBE5B982399B5E42356BBF112597F53F1FEB205AC906C267E0298BEE8D08952C0BDB590C170E5E06557C2AC7CE292CF6AE038743C5FF0EDCE548188B80EA6EC7023E748F6895E4840BACDE1F52FDD71D9E921B2C362C785A5F13BFB5A51E718F4D79FC36D9DCF7F520BF49749FCECC9B2750F2CA506B172831AC9550C3A828BA55C1C1241727AB0D1EA8D48683F69486EF6824CC13514696E7F095BE7B1D4153F3EC62E1BD0F214A13749C49DD4263C592A3F62068113571B24A6197D8641308F0A521093FE32BD
3EA583D8CFF1668C9A61BDF8106ABA15C6E9373477D60B74B11DD33CE65FB64B0800D29A2B672D3CEFD92A9BC8BF53305C7D39B5CAFB17E8BE9C9D8A44ED2E1BF6BAF73CAEF9579E626D2470532FAF1301C7CBD255E0AC86E28B7A1BDCECB5F4F91D1618134F6628CF96EEB1FCE137F111DEF68E17FF8F53D53624589A17AB2F1EB4ACE590B812396C2371BB6392BA18025CD91221EC7761BE28938C409067BFC1ED60F47BED664CE1E375369B92DE9CE00D06A34CA8EC514FF8A7BE79061EC7FB06040956AF9781D02B5C43FA78396ACAC383A1B44CD37F1D6F174B9EC5A9A7252982108891EFD1A7BE8035C9738D6E147EF7E3C0B0777D65786B756909FC41CC6241BF74F009A471EE94FC250DB6D0FDE2789DEB3B73C4DD1B671E07ECEB2CC760CA96E5883285EEADFBBC59A1E1AF341C90FE7D3601DE1E988B63903E0A7C4881AE1875BD1E40F06D3ECCD2B1AFDC7450D724BF289691555E8C27F7E176654DA77A626233FF968AF3ECF97D951E75BF94F5F93C930568268B8977BD943C4BAF657D192264E07E3B159DEED03DF3BD86885E9888AD3F75507676847EB738FF253A840ED618DFF5724D382257DAE6DAC800EE3AE5692B45AE9B0A1FF7A4640105A61C936DD3D9216DBFC5E9EFF4F3BEF3C268570E5EE6A10A29E1D64AB62A1E3805CF4087F43C6001071A946BBC662C7740A809EB39253264C24BCEDA24A432E08F06C7E7DAE334706469057D268DC4FBCB91390FFC450802C0DBA547B509B12D3878D4A2ECA2AF4A0504A05EE5A79978FEAB8277C8B1D0B0D46E0A6DFC948DC254CCC525265C9005E384FF98AE7D10159D654C3F5AC3DBFB7F34E3203F9A8DBAB4B82CE1E9F639111BA4B2AAC0607E8AB45FA61A0740B76AB35A7C7D69F20A9330E05BA82A6334140640E1679D4CDC7EDF0335ABA1215D1B8F94DC3F5D9FC662F932B13CD10C354722D48F60D0CC7478A75EF9DBFF84E910164CCBF24D4F61B8038204EE51EDC4FAACDA7930FEB59C297482F5E9590937D17CA504E8E225C9763DECA59D36EF4323D9C5AFAA8DDD423668D17D62C51DA23BBDF745A6A6971C275613D50A0B26ABF312729FCB76E79653DC9ACE04412CF8E94DCCF8D2E5331C95BC0410D270388E354087D6961FA9BDF7DEE0F6203519D235A656ACCD1326F648DC20C8B8AFB6B70CBE58962846D95B721BCC8815BC38FE9984262D8C8965ED73D65E56156C44238DCB05CA9097C146C607EC7791E78FF4A800357A1E7EB33553156D753F34AD76114D4C8ACDA666D9728FF1957D009CF575CD027639F59CE77E07040A91E5128AEDB2C8AE516C2FBB512060E0CF2316E3EDC8F11005096FEF48E62FB75DDE88936CF12E70BB171646351E308123DE98456ABAED4FF3939C256FA82A963F8179D4BF35C56284DBA965E7971389A3A1CEA5C703732E45A71F45
59749049CC1156AFD8DD1234CFD865F222E460CBDBC1DAAAFFE7B36F412ABB46131A06A4D6B9780653B06AB739D7866462286E5F3230A3AC8F10BB07EF48B561D5D914B683C34A00BE4FF7FE2D1630D3F9EC9A7542C53C3536E6DB067F0188CD9224F7BB30E9C28CAB861DDBE7D1C031A86036F849329DF99315A39C2165399ABD4372EDD1DD305C02C27AD2C00406D18AF7DEEA769712A1B153635B7C26437CDE78A3745227EB9E8489962382EBF05CC3CD404399FBB733164CA1DEFB6C9DCF19AACAA31C1374CA322EE522CAFB0315D9CB1D0F3E14356019F8DC2C32D1631215774DC1C599B40D0E5330B3C2FFC8A3ADA1DA10A37C09B0D922A93F0A539DC2845CDB0BD252BF2CFB0456C6FAFA8B26C2B92856516F92F58CD415211637D4A659ED75DEAB7A2005C10570F253BA39F74D9767B1871DE04FF8BD2B196AEAB2EF6A1FB7378F6021C8776A30D5F285C751AB8FF5E28D52D5581B136C4F26DB316FB444A9AF000072EB588DD4A13C9F19B1324792CCB026DAF9EBF17AC7C88224FD75F6D65CE4F8B87B049C77747EA3A725410C3AE90EA93457422C335AA79CC8AEF88CA65FDE738CBC377BF5815089CA5DD6889862F400885693F9A27C7C09554391F767760749C6888523BBF24EC1622EBEF12004A9ED1F9C6526221CDE599ECEB56769CD5FB8F0621DA8009C038BF1E6BCEE97EE22ADDEDEA55D9D3C53B67ADA8ABDF353330BDD3EE1BF3987EC26478614E9203A3C6C86257FABC2A769F325DDBC76F6F498E1B663D4405C57306EDDE4E3FA9D04425344C35145E25F6E4ABE9381D805811182B4BFC4446795F8BD869E8D6FF15221F38EE4957C42FCE34440D547EFF463AD6ECB313B8BF767F3799CACCFA165D753E121CED0AB861F78C582324D735E28C8DAC53FC4AAA21B876BED296486D5168BF52ED1E3EFF800AA4422D1EB71B62EAB4AB822252180E7FDE0B1F0D853E10E345CB145FEA525126DA4296B0A30280501BF8060AEC5A68E1E735581947C6ABC0AA688DB68839E17AE7A90061E65375C27ECAB4D243740B0FC629152B4427F2EA7718183C42F172D27FE275B596C6D19B9A6D6EFA6AE74EB15FD5DFA389301224761E4B91C480023B1E471FA5AB1CD189137E56A562FCAF9F517642DC1C0ED57C62CE23352A52EDB94B699B3FB2C1D3CC7C5806A23357FD8F33D1187C80E0A4AAB0D3EA0D9E9B39AB98AAA79D165154D2729366F29A3F3C560A1BF1C109FF9C20473E53C1AD9B2B47DE1806D1C6260EBA70CDE7E64C3E5A3DA6955E6AC36C66F448515671DE7463438415B36E1724C87DE227E98311E3CF8D04F139FF9879599D974EE034F624B3767186073EE366F2F37A334FAEA5B8A90B1BA8A79C78222E5D8F7802C8AE414E42185EBDE473DEB4507AEE76EC6CDDBF418D4BEE2404FAE908C17179648D445759B966D5E
212C73C13226A360037E947A9B2443FA97B7F8940759E6B1FA8D63A4DA57E6F8EAB2C46DE070C0B06912D58A91C536995B0F65C4FC73FDF3C490D2B1E531454A78F2269873F0140E136230AA281DE8FBA9738DBFB2138C7CD0545D8E5E751662AE6E298A7DD4E8666DF6B796619687C9334EDEA3FD510B833FB49FBAEB0B404C3D6D0AA82BF6C7882F814B206FE26E25D86058E07ED3DDC1DBA745826200B26102CADEE6D557BE9681DCF3F6E8C62BD5D11D801B8A2C5FD2F4B28F42691016AD7DE0A2652A1E6FC13B0F78E19F5D66885C4163D81EF62458E3364ED15E6F9FA9C0200ED820DD4870CFC6153FC637C847BFEF16E434EEACCD92044651399A59FC17504F61447EB82910899CBECB0C2960BEB4D9EBDDEBC3C84CD784A6CE885E940AD9E9DDFCCF9EF38ED302A992136454E87E42784CEEEBBD9EC1E3920A8B85F5D58EF93FC2A61091E7E78262C4222CCE0999AF80D4E102091346491771113809608422B4F9E9609DDBFAA2ADDF813710979094F2EE1D9AD534C25FF0B9905F718700D3624BAC81042CE99104FAD558E881D0AD3550140F6BF97F19776CC981681C0B4EF43E585CB875EACC96B8F5A73D138225D35DFB9A9FA51470E91BF7956379022E9B111888E039EE83139737635AAF09FB105CFFD1D30C639A3D7F631DF835769E6521AF86BCC71C75ED4159F44A260C9E398066756E71970D395C57EB5678FBC30EFD9132B6DD34AF07B66B6AA9900110E59DA11A286E83FBBF3E4668673DFCB87FB437FA0C7509EA741C89B9B3E57504C09ADC166FB5F119CF1908213C3C6A8DE1652FC93417533813C1AB26F455730B8EF2A16853F3058BDA93D56C906E67D3091FC374533A6E48889A387A952856B3B0D67FA0820983D7476BDD404B7318526E05CB7D67C76056E520148AEA49338160E002757748B4D3895952833FA67DF2C55C6F598AD62A26E857CEBE8B050148819315F436679112E13DDC888F9B7290A2F74F276C6B7B35DD187ECF5022363E667A95E1FC5A05199C9C25349A65BD8902F8328C2ABAC357D2A7A3864950E93DFDD3D6B333BE318BBC9258C34599C6405F7CD0E53A708AF377EAF9A5E4756A45A01D013C0038F7A373FA36142B33A734B60D7A00FD5655660A5696EC1FF021C0273FD40945017FA1356BA69939FBEB35D1D6FC5758AE5451D3328B9DCBC9AD6C5BEF787853BC1A3E8236E4B4EB2DC5A3B2EA18C544AC5A57ADE74EF81BE5ABF565D1DC62DCACCFD53531AE5158440FB1B3A85B2F2E586562DB2A8ADC822AD543707C0F7DDDC6D75EB6AEB40C926E54F02E570DFADDCDB60857DCC6D8D84661E23AB98B7249FD24CE71D68F05E91792084941B562A582F7A9ED85C18C26CB7531E13866EE72479359CFD005B234B1B1B68482F3EBB9186A7DF0A20B9A21477166351F7D02331E9D861708C7E739
DA56FFC34537DE6E13E48AABEB547E81F7E34E0C8757D2FD67D9F550D904EA8EDA39667B693AE60C95C4DF04E34F53E42F4B8C89FE07B048CE2F354DA68629E530E04BD3E28C6FDF7A198E28101D6BCC0B88EB107E5AA5DF55C6FAB4CD98F9AB3F8E67E4575A1B4F951389C92EEC426F65B937968C6E78246EC132AAAF64A85CE7FDE65CEE200BBBC5A240062690FDA0D3FE93A644C32E103FEDAB81560BA5C632F7777097F75881A84117CE0528074927A20F041EDFA25F8CF4DC87E64227B1219D79307746DC5D2F558083D1D50D88E9E1A6D2AEADD42ABDF0A293333C26FA0D24239108B5C7595D9BE99759C71F376FCBE34C2D422A0952742E43198FA5003FEA29139240B68EC7FECF765928A713C61B355D0A011954589492951DA148F20452906FA94620C290E9AFEEAEEDF968F62A3FB61116E92CCD5AC8171D13C55F5F2216E82666B7C7FAFAB0D6682D57CFC83B21AC6FFD80F6DAAEB5AA708541AC900984B873823F598C65CADC6C167751B9ACDCB3BDAAB847A805D6B20DC121BFC7426BCF3D9DEFFAFE5E349E0A993A0F65EB7846E79D3E5DD3380E669D1A7901BA9B8F8B156A793FCE4E81CE10DC2A26A0893DFEF839B3ADE3CD9101CEED67B39085D09CC8192C23EB18BB507447DD68B93881F566B0718184529971D715159CC87E9D80EC3EB181FE0A608A8B197D9C1373A5F1E672693DA51E6C8CC382C53E713E3B0B25A18EF15B4FACC3D8C300FE8D1D34886F1210AD7C233E8DA1964D0BC14AF65B88DB58720D24EDC55780034E7A7A38FD58D93B8ACE06D48E2CF13B00DD9F4696D3597F1707DCBFE85006080EF3A72A23072B46661829318014CA0EFE07D2748C2F18234B2E718D353F864D1396EBCD2EDC199E821928A77E22C404079388A17F3921FF230F8FB9AAEDF460E4E5CEB483911942274E3C96B956B298189E946BC584235BFAD81E23CF2D1F15C01F678352BFF3BAB41D0479224194EEDD042A79B2566B0871D67B43BBE8CC81BF0CB9C9C3599B354EA9C33E4402850AA2C2A73B5D4FE1F164E2722CA0EE09507019FC318236A2AEE460FED43B59192EDD5DE76D09392BAB34DFCC80D115545F89C14DB19A794A1BE1591968FA87807E6512C400C2AC531D42DAE3177CA7E7716949D808D9587BA363811A00DD409B965CE85AB39FBF5C55706C4E12AE1EB3D40A78F2FA19F1DAD3454A29DE34A4A6584A5941E2DE17F04449199F0AFC88672D50F52554FAB897C93A8E3DBC55C96E5A7C84DCD86B597204B4A564BB0622E531527240C01F7F571BDC7150C599D121A30E9BB045424D6C73A16F83EF347ADE5D741D0A476C504E90F10067194CF071BD990B5520914FAD31532C38DCD06901D007C7AD4D3F0379155A2796DA277FF7FEDBD5F2D8FB1CDF2BA02B5FF977C0B00666D7F6A83D5758095B956D69590039B017
106DC3B49215B001F9777D89B591E7828A4F118AFB0105BBC2D48BFB53A3D40B164B27DB6F4DE40FE243035BE4099DCDC106C6BC7BEC365AC2479BBD5EBC18D8EAC00649F1DFC8F3B986E4FBC59E40475956DC13D3E1FB8867193045E36F629FB01AC870B307E74EDD2CC90162809DF61C842BF7F9F44F0C084E4DFD8598D840859BA9923C7803D08AE764154E06074B6108C92806D933B18DD56CA72E3C1A084A9F13B6D6885191CD5C792A1C8C3E87C9600CF049F7A0C37251142CE5D63D76F36363183590686336EB5E32AB6F9E2A678B7D4A6CF2F0F9ECCE184197BC26053AC3814068A6D188996E7CB94F1F66BBD6C859C52081683176A73EA0C5C6048D5F6997A0BEE59D3CAA12A85E9598E793BBA7674DD4CBF21B05213330EE5CE7882197662072C839FA19B61C56F0421D258CAC4DAD5D07AA70845D2E034CAC1201E30865DD40E2EEF4A1A643F79FE5BCDC55B8BD920F131816D448E56BE2D82C0462EEE2128619918C0E3F23B8AE85632BC98EA259030F7F7C0BFDA84B927B33FC5ACD4F402293426627F17AFF458A4D936AAC4699912FD58782ADF04EBDCDCE177AB901FDE6B755A0C47BEE1C622FAA2ECCCABE68A7AC9F5D1FAAC8DF2ECB1436CB0A06CB8F046CA856D6B8F97D2DC390CE3FDAD7E21D6F3B580DA488F622F079FA6EEEA6E58112E529F7B50DA26953A82CE77E03C35D41E7991FBFE7E4E7C1AD8E690924AF70FD3AAF767F671DC6A0462B81695F10F41B86FE3719294C60E89000A5680480C65799126E2BAC2D53FC22527453012880AAACE667281408F38A7683096C482B60FE886307590B1541E1736159C198992C0154222B7EEFB7C243F22D69D853342F41B3EAEB25FB3C2E76B7B20805FECA2C6EC0584AF769E2DE0DE3F6394E4DECD23AD5417E0B49D6D1C1C6994B011D80F907D90CD8BD9AD775FC11158B2BB20E6893903347D82AD7B9FD06754CD87A37B796B6EB6CF4E2BC104774DA7E64C37C511F7DA2348F7A096D4020469F826FEA9254D676B88296D9E1D5966791BE20FED52A14DA506CE393E5A49A0DB19491F527D934244038031C3AF42CE44DFC705D3004435C59E831CC65FBBE928C48EC7D87D2218BE344C0338783843883BB870538B11A659C724C7131A48A5D66FD94E9D4E9FB77C7855698B06FB59F0841FA473F2A1C2F17EF99576C6C182103CBBAABEC22166364B55BFB3DA991FF28105D457313B02EFA1073571A8E205244AE71F27F65111F21D0AE29D53BBA0BF4D8B3C72770F3C7931D5D36BE49D955EFDBC4282DC9A967853DB89509B9607311C5F50CCA5E66BE33020DB8B37BF53CBFDC084BC0CF078182A6D631B2393FEDF932D1C49BF00E8779F75EF87B10066A5E4DBC89D8BF115239CAD21B92A4BEB993AE5E8EE70DABCA261873FFDEDFB8FE3CC9FDB66BEA7F65223AA33C91EA06
21ABF8505D84480CE5B98BCF9F445C78009891224BD27C71389685D1C6770890E93CAF480E8587E710850DFE7616E8237CC5D7D0DDDCC5970FD3AF351B0B98CAB2CBA977AE5364A52E9C2D82535E4C16C708ECB13C33CA0A0269F23DA53416FC84732B798B8E62828F5393ECFF74BE662F47A5E1AE80285F9115F43F08372E7D726CB45ED091F787DC67A37303E698703918E4FB435A36674D0294D877A0BDC879CF4B528CA715ED0443678A4D90C2F4FFF24C3318C8E952E1C8AB6F6CE1AF83B913893CF844785B61A717F45F910A55DA2E5D3CF6D167911F3A5D9A87CAF0F7D6FE3B1AA3A689F5B370330F26F7AE7C86874AAB305BE7437F8D60713918B8E6E1195FC01E8DEC65D88A21BE436D6C4D586292AD8E25CC36EA0D1449D2AF54E617C36D6EF75A9A2658F0D4B2E09F872DBE182EBF2845653ACF2A79ABE90B452D0D51FF13319487FF65EF9938C9E3910FCD933663E96BFAA95BF464DD019A64C3FA361FFDE121227C127AE1342AA8A84ABE4AF9AA4FC9A0343BBE1465DB0DA98FD822C4974F9FEF0F55855B11D53AE9370B0F8AAA005AE71EF16DA6365B30F95BD69D38E66C446804BECE849027C8883CF303416C15416943AE75450F29C96CA0C3DDAA462319DFEBC403BB8D2C0B056670295630E55427C58FD795A5DC0E9DFA98FA169C4158B78001A8C4AF668662595786EB7F05E0FE701B83F632A9289AF4F3D823266F44037391E4CD613882AB362977D3099936965304324A0FC31FDB02C5737E27B0F9D2BC00CD108AAD678F761ADD04D4C3CB01C68A986E452BA67328F178385F1814687BFCAF4BF35929C17F7C4C750A7191C298C58982A173D052D84DBAE26EBC7A99FE36734C4F31467C59E23FAACB4ACA3074D2F9DE6123CA6AD36C55F12B1D5E5FBCB85828AC93775C67449237F4F131FB4836F3A06923403A3173ADD6144AAF117B822D0623E5144E7CFB715683D6762BD85190214D4596271332D6D1AA119602458DBFD7A694AB05817D2B1BDEA0C20492E378059E45706EDD9582804C67267C4C571DDD36F4FE63B20147542AFF28257596B24CF6511A9F09A57691FD0668460582BC596AC7FE8CA52A645FDCD6AEBBB3EFE49E442E57B032E745AD294752F3EEDE6D4C7E485507B6CC5EF4E9B0B2F802879AE31F5F38E1FFB17568146724C01C5D0FAF1343B31C9570507A50F9483394F1765FD06F1703A911A88A08BA74895730934D06307FD36109C5D632A37160E774D44477355FFC7E911516F47240901040FB6D334ABFAD8563B98112B7F032E7DE6439909FD48353602A1027DB47E850DA1DAB41946D3ADF187B113959098F5A0D3B4E04E247760DE599B68404FB6D0E88F3BE5CD8A3C6C9E225FF8D135177CC9F8DC6485E6E7A0F0DB3D0AA5BC0A9937D12521E2D417946288C43D2013AC219C3CFBA7DBD94D00C
FA114AAC80FA0C0254E827E262416F34ABE1645041B3AE74E6F087B1363C574744C1BCDFDBEE305E9DF138EDFDB53641FF7C9552CE8EB2C31853ADC27BECE4B0A0DEFF0D6F6A456F57F0E9319DB16656CB3A0E8C8AA3E759311C1F4ED1D49F0DDE52501B52F332B851ADB2C73A982999FB8E6C6A79BC1230E2C70BC06F96B8344DEE1494864D3D1F061D1764338C926E72394238937603DF50B97D560E681859F208CE9500798CB76B4903CBE30E5F11D057C6801DCE89BDD1A12AB5CB0F7A7E292F1E41D638F347496BB413B2A9CDEFE3A10916259EB9B4B11337B901550B2ABBF34FF36B27F79FBFECD67555A736D4E7DD4432D7AC19EC1D178343BC620B91C5BF83B6A69783B0943EF68608D1935514B13AF2ED2B8ACC903B970B374BAE7FFD4852F50A6FE417B22E5A82023C1A7A4B60B2101551757605EE061265AA33E745062B6C40FD33DFE061F78BFB6931A01359D93CC604FE4567EEFED0E4768D202DF3A6640B1B7D8EA488E48268F164DF5B29C3EBF340B558D3B17CFCC3EED915D2CB00EE60D2EF1AA599878C61B1F80808
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /T put
dup 34 /h put
dup 35 /r put
dup 36 /e put
dup 37 /a put
dup 38 /d put
dup 39 /colon put
dup 40 /space put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/space 1 def
/colon 2 def
/T 3 def
/a 4 def
/d 5 def
/e 6 def
/h 7 def
/r 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4124212 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28A34314447AEE989C9D5F058EB91AA64CFFCFD907A0DD23543824D922E57D7C4883211A2271066BA2524F670D3375003754D0B4BE3CF934D4554CCC35E25B52CC3BED941AF640648A919AC25DF78E99BE84C149600DC123752EF0534328B84EA580EE97855828D1E2B64B26FD83E212C25419AC9BDC3DAE9A73693EF0400D0906DF51B4A10C629FB53AF8A2ADB4FA3D62940566C6A5890E34E452BB016CC1A50A6BCC84AA2B529C59161DF90AEB16207595A7B248CD06A0F20A65D10B50DACB6DDBA2A8EA73673793F8D9DDA8B9B5B505A68812616BE406DEE302EB68EF4B5B36675086BACADC8CE36972DB88D59F6A1FC9893BED040B922AE102B743A2FF66EA2A6BD5AC8EB5FE97F1A16B4BADDFB4E6959F7F231D6F86520A960B9A837A77948FDEFC9F63CEDE9C640D8D22FE31C4C834DD54AACD2C526E55E01D8D07E591690993F0088EE7463C719EEA8B13712B9CB731AD0A44CA1BF759C7A08850B8BA1D0BD44288B834D781F6FF2E9C1316227C37E03D7D20DB81414D777B960945A700CF0FD21D26B8C096FF67D52C1026D85DBEFA9611B28AFEF6920E102128D5704D2C90E787D17243CA1301603C2CB31EC92F1796B52B43E6A795F83643296749FE1D6F5CB2D8725EAD8270ADE37AFD19B2C066470730A3A3FD9E776F3B66787431B5061D092E35AB184DC0E38D048775A67614F5476EF4C9DB3EFEED49B88D12C681E6F636CE91BEF2076F4873E61653104F416DE8531F91EB3DEC3846EEAB80DBDABED97
2D7BDC2A9722F53846E70F70FA67CB6EB8380183A4CFA4D367D219891CFF7DC0F3A19B15BF07DD3501E35DA0D39B7C5CE25A323AB8E1D30CA122C63A8C5774EF2E267830067029794C07A3478B2D0EB81A4E842DB1ED73B8FCCF673DF0EDBBA4353481DF4E18630DC998543BD69F2328EA9A1CC52A0F0D2BC28AB39B76453FD1D83E1AD4EE57A100DC4171C6CB4862C1FB7AE2655D6F18EA240DA36EA5510B3B886AACC95CE0BEA68E67CBE71969CF6FB5BE63400F63258084226A66C792D78BEE670B1439E7A02653026DAF42EEEFFAAA5EB3AC3A2EC3F1FFCD58623F24AE06A96344C84AD84CB6E4D3BCB0B604B945D92B4E611C4E89E67C8B10FBC6BCF6FB59A2CC158ADDC735F82052D78ABC252A9F2E2CC87C0609829A3A02D41EFD2C46D778735C32E06BBD912D469098158E607F8D04D7CC71A1EA67B984F35E99829F500D14DF9DA6B5B1A3A01AE0D2733B47EFF364731692BF8182CA36BB91D2490F1C7991144F1F24078E8A491D5401DDB4DF2CF46E73810F0B0AC6880E751DC2569BAC73B98D392927648F636CBF4A8E2E796CDAE922F09A26401BBAD3CF6F5EFC9E425C138734C5B1008E4482ADBE150E7E778A8FEEEF88B7014FB7A822FDC6333DFCD3AA19BDD4F556A01DF9A23A7E8AC1EBBFB62086F6E752D586C141255C12B22B17682DA9D8AED0E1E8E428CF1A1DB358C566180C21DF26A1809E050A0D319D2E8E310167E92DBBBC14B52B922754F151CB3E2FACDE29E8F8D6D069087B6C504EF38749BA72EAA5386AB3CD8DAB098E541B231AD34C831CE9E90E0044841975D702A52A1637D67DB7CE25928C318E7CCEEA692C1745D4F9451C7B87E1F23DA3EAF2678AE21938102A0AD19546E002649EE685EED1E0D24EB76D30294EE5280FC284E9A1DA90EE4DEACF735201F2195779A743F29CBB39C376B1304973C44274F5B9B8E523869F541A63C61EB83A532CEAE4E1FE5C48E38B14A551543CEFC5CCF89F8032B966CC20B01AF884D0B6978653EB601A6CA9BA0BE6EBDD5B191EB55C4FD67C4D69EF46F00E9E53992D6B1110B7B3551774FEC1F8569FA7783275935F668710E5320D1BC16EBEC27684FD4F53AD896A93008C63211CAC17BF1A348A54718E950FE081B8A0FDB961989268767612C6ABA7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
q
0 0 672 173 rc
9.2425003 109.664 m
70.7425 109.664 l
70.7425 69.664001 l
9.2425003 69.664001 l
h
9.2425003 109.664 m
f
/Cs2 SC
0 sc
1 0 0 -1 -336 1206 cm
/F1.1[ 12 0 0 -12 0 0]sf
359.55249 1120.168 m
(!"#$)[ 7.776000 8.664000 7.776000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
110 109.664 m
181.30251 109.664 l
181.30251 69.664001 l
110 69.664001 l
h
110 109.664 m
f
/Cs2 SC
0 sc
1 0 0 -1 -336 1206 cm
451.32126 1120.168 m
(%&$"'\(\)$)[ 6.888000 8.664000 8.664000 8.664000 6.888000 3.108000 9.120000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
406.74249 1116.3359 m
439.10001 1116.3359 l
S
0 i
CM
108.1 89.664001 m
100.1 92.664001 l
103.1 89.664001 l
103.1 89.664001 l
100.1 86.664001 l
h
108.1 89.664001 m
f
0 J
0 j
1 0 0 -1 -336 1206 cm
444.10001 1116.3359 m
436.10001 1113.3359 l
439.10001 1116.3359 l
439.10001 1116.3359 l
436.10001 1119.3359 l
h
444.10001 1116.3359 m
S
0.64705902 0.84313703 0.82352901 sc
CM
224.88576 109.664 m
286.38574 109.664 l
286.38574 69.664001 l
224.88576 69.664001 l
h
224.88576 109.664 m
f
/Cs2 SC
0 sc
1 0 0 -1 -336 1206 cm
570.96576 1120.168 m
(\)*+,*)[ 9.120000 8.220000 8.448000 7.332000 0.000000 ] xS
411.66 1106.3359 m
(-./012)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
522.30249 1106.3359 m
(-./012)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
627.38574 1106.3359 m
(-./012)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
576.26074 1096.3359 m
576.26074 1096.3359 582.17413 1057.8359 590.88574 1057.8359 c
596.74823 1057.8359 602.02277 1075.2711 604.84583 1086.6755 c
S
0 J
0 j
[] 0 d
0 i
606.59528 1094.4819 m
604.84583 1086.6757 l
607.77325 1086.0195 m
606.59528 1094.4819 l
601.91846 1087.3317 l
S
/Cs2 SC
0 sc
570.86377 1049.5 m
(3455-3012)[ 6.444000 6.888000 2.664000 2.664000 6.444000 6.444000 3.780000 3.108000 0.000000 ] xS
/Cs1 SC
0.82352942 0.05882353 0.21568628 sc
CM
230.34128 113.19953 m
232.29391 111.24691 232.29391 108.08109 230.34128 106.12847 c
228.38866 104.17584 225.22284 104.17584 223.27022 106.12847 c
221.3176 108.08109 221.3176 111.24691 223.27022 113.19953 c
225.22284 115.15216 228.38866 115.15216 230.34128 113.19953 c
f
0.80000001 0.80000001 0.80000001 sc
9.2425003 17.720001 m
671.74939 17.720001 l
671.74939 1.1580048 l
9.2425003 1.1580048 l
h
9.2425003 17.720001 m
f
/Cs2 SC
0 sc
1 0 0 -1 -336 1206 cm
/F2.1[ 14 0 0 -14 0 0]sf
585.60095 1201.8579 m
(!"#$%&'\()[ 8.554000 8.302000 5.194000 8.036000 8.036000 8.554000 3.892000 0.000000 ] xS
/F1.1[ 14 0 0 -14 0 0]sf
640.06097 1201.8579 m
(-6-370/4890:;-<=9>?)[ 7.518000 7.252000 7.518000 7.518000 7.784000 4.410000 3.108000 8.036000 7.784000 5.446000 4.410000 7.784000 4.410000 7.518000 7.518000 8.302000 5.446000 7.784000 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
350.24249 1173.616 m
(>@?>>>>>>)[ 5.560000 10.000000 5.560000 5.560000 5.560000 5.560000 5.560000 5.560000 0.000000 ] xS
/Cs3 SC
0 sc
341.37 1157.5 m
360.39999 1157.5 l
S
363.94351 1157.5 m
367.60001 1157.5 l
S
/Cs2 SC
0 sc
341.37 1155.3359 m
(-80/0AB)[ 5.370000 5.560000 3.150000 2.220000 3.150000 5.000000 0.000000 ] xS
368.60001 1155.3359 m
(CD</80/8EF)[ 2.780000 5.930000 5.370000 2.220000 5.560000 3.150000 2.220000 5.560000 5.740000 0.000000 ] xS
442.86624 1155.3359 m
(GHC1I@JKCL-<07;-2)[ 5.560000 5.560000 2.780000 2.590000 6.000000 10.000000 6.000000 2.780000 2.780000 2.960000 5.370000 5.370000 3.150000 5.560000 3.150000 5.370000 0.000000 ] xS
557.02502 1155.3359 m
(1=/F0<83-KC#!"2)[ 2.590000 5.930000 2.220000 5.000000 3.150000 5.370000 5.560000 5.370000 5.370000 2.780000 2.780000 6.480000 6.480000 7.220000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
552.20538 109.664 m
620.20538 109.664 l
620.20538 69.664001 l
552.20538 69.664001 l
h
552.20538 109.664 m
f
/Cs2 SC
0 sc
1 0 0 -1 -336 1206 cm
/F1.1[ 12 0 0 -12 0 0]sf
895.09137 1120.168 m
(M*\)N,"')[ 7.776000 8.220000 9.120000 6.228000 7.332000 8.664000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
956.20538 1116.3359 m
991.59998 1116.3359 l
S
0 i
CM
660.59998 89.664001 m
652.59998 92.664001 l
655.59998 89.664001 l
655.59998 89.664001 l
652.59998 86.664001 l
h
660.59998 89.664001 m
f
0 J
0 j
1 0 0 -1 -336 1206 cm
996.59998 1116.3359 m
988.59998 1113.3359 l
991.59998 1116.3359 l
991.59998 1116.3359 l
988.59998 1119.3359 l
h
996.59998 1116.3359 m
S
/Cs2 SC
0 sc
/F1.1[ 10 0 0 -10 0 0]sf
882.94037 1155.3359 m
(1/=KC0/05-KC=/F0<83-2)[ 2.590000 2.220000 5.930000 2.780000 2.780000 3.150000 2.220000 3.150000 2.220000 5.370000 2.780000 2.780000 5.930000 2.220000 5.000000 3.150000 5.370000 5.560000 5.370000 5.370000 0.000000 ] xS
/F1.1[ 12 0 0 -12 0 0]sf
961.20538 1106.3359 m
(3455-3012)[ 6.444000 6.888000 2.664000 2.664000 6.444000 6.444000 3.780000 3.108000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
329.96899 109.664 m
405.909 109.664 l
405.909 69.664001 l
329.96899 69.664001 l
h
329.96899 109.664 m
f
/Cs2 SC
0 sc
1 0 0 -1 -336 1206 cm
688.82501 1120.168 m
(G\(O\(')[ 6.672000 3.108000 10.452000 3.108000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
451.36539 109.664 m
512.86536 109.664 l
512.86536 69.664001 l
451.36539 69.664001 l
h
451.36539 109.664 m
f
/Cs2 SC
0 sc
1 0 0 -1 -336 1206 cm
798.8974 1120.168 m
(%,'"P)[ 6.888000 7.332000 6.888000 8.664000 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
796.63538 1155.3359 m
(1/=KC0/05-2)[ 2.590000 2.220000 5.930000 2.780000 2.780000 3.150000 2.220000 3.150000 2.220000 5.370000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
517.30249 1116.3359 m
553.98578 1116.3359 l
S
0 i
CM
222.98575 89.664001 m
214.98575 92.664001 l
217.98575 89.664001 l
217.98575 89.664001 l
214.98575 86.664001 l
h
222.98575 89.664001 m
f
0 J
0 j
1 0 0 -1 -336 1206 cm
558.98578 1116.3359 m
550.98578 1113.3359 l
553.98578 1116.3359 l
553.98578 1116.3359 l
550.98578 1119.3359 l
h
558.98578 1116.3359 m
S
1 J
1 j
0.60000002 i
632.88574 1116.3359 m
659.06897 1116.3359 l
S
0 i
CM
328.069 89.664001 m
320.069 92.664001 l
323.069 89.664001 l
323.069 89.664001 l
320.069 86.664001 l
h
328.069 89.664001 m
f
0 J
0 j
1 0 0 -1 -336 1206 cm
664.06897 1116.3359 m
656.06897 1113.3359 l
659.06897 1116.3359 l
659.06897 1116.3359 l
656.06897 1119.3359 l
h
664.06897 1116.3359 m
S
622.88574 1116.3359 m
632.88574 1116.3359 l
632.88574 1112.3359 m
632.88574 1120.3359 l
S
1 J
1 j
0.60000002 i
741.909 1116.3359 m
780.46539 1116.3359 l
S
0 i
CM
449.46536 89.664001 m
441.46536 92.664001 l
444.46536 89.664001 l
444.46536 89.664001 l
441.46536 86.664001 l
h
449.46536 89.664001 m
f
0 J
0 j
1 0 0 -1 -336 1206 cm
785.46539 1116.3359 m
777.46539 1113.3359 l
780.46539 1116.3359 l
780.46539 1116.3359 l
777.46539 1119.3359 l
h
785.46539 1116.3359 m
S
1 J
1 j
0.60000002 i
848.86536 1116.3359 m
881.30536 1116.3359 l
S
0 i
CM
550.30536 89.664001 m
542.30536 92.664001 l
545.30536 89.664001 l
545.30536 89.664001 l
542.30536 86.664001 l
h
550.30536 89.664001 m
f
0 J
0 j
1 0 0 -1 -336 1206 cm
886.30536 1116.3359 m
878.30536 1113.3359 l
881.30536 1116.3359 l
881.30536 1116.3359 l
878.30536 1119.3359 l
h
886.30536 1116.3359 m
S
/Cs2 SC
0 sc
/F1.1[ 12 0 0 -12 0 0]sf
746.909 1106.3359 m
(-./012)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
853.86536 1106.3359 m
(-./012)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
684.63397 1155.3359 m
(1QCRC?>>2)[ 2.590000 5.190000 2.780000 6.000000 2.780000 5.560000 5.560000 5.560000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
