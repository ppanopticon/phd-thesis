%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 813.000000 357.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.2 (Build 21D49) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 813 357
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 813 357
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /S put
dup 34 /C put
dup 35 /A put
dup 36 /N put
dup 37 /one put
dup 38 /F put
dup 39 /U put
dup 40 /T put
dup 41 /I put
dup 42 /O put
dup 43 /e put
dup 44 /m put
dup 45 /i put
dup 46 /t put
dup 47 /parenleft put
dup 48 /parenright put
dup 49 /zero put
dup 50 /ellipsis put
dup 51 /three put
dup 52 /n put
dup 53 /y put
dup 54 /colon put
dup 55 /space put
dup 56 /p put
dup 57 /a put
dup 58 /g put
dup 59 /s put
dup 60 /two put
dup 61 /four put
dup 62 /six put
dup 63 /seven put
dup 64 /x put
dup 65 /c put
dup 66 /u put
dup 67 /o put
dup 68 /hyphen put
dup 69 /h put
dup 70 /r put
dup 71 /d put
dup 72 /R put
dup 73 /D put
dup 74 /E put
dup 75 /P put
dup 76 /J put
dup 77 /l put
dup 78 /L put
dup 79 /less put
dup 80 /greater put
dup 81 /comma put
dup 82 /f put
dup 83 /H put
dup 84 /M put
dup 85 /k put
dup 86 /equal put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<











022C00400206000901F4000803E8006F000000480048009200DE010C011E01CA01F00278035E03A40464049004BE04DC04FA0516054605B4061C064E067A06B606D007080728077207B2085208BA094A09DE0A040A3A0B440BB60C540CBC0D080DBA0E0C0E360E680E820F1C0F641004109C10CA116E11C01210123C12A612FE0001000000370096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 55 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/hyphen 5 def
/zero 6 def
/one 7 def
/two 8 def
/three 9 def
/four 10 def
/six 11 def
/seven 12 def
/colon 13 def
/less 14 def
/equal 15 def
/greater 16 def
/A 17 def
/C 18 def
/D 19 def
/E 20 def
/F 21 def
/H 22 def
/I 23 def
/J 24 def
/L 25 def
/M 26 def
/N 27 def
/O 28 def
/P 29 def
/R 30 def
/S 31 def
/T 32 def
/U 33 def
/a 34 def
/c 35 def
/d 36 def
/e 37 def
/f 38 def
/g 39 def
/h 40 def
/i 41 def
/k 42 def
/l 43 def
/m 44 def
/n 45 def
/o 46 def
/p 47 def
/r 48 def
/s 49 def
/t 50 def
/u 51 def
/x 52 def
/y 53 def
/ellipsis 54 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB286EF95C3507E5340B32DC91F3CDBE8C69B365E4613B9EEA3116C51EFD302D0E6B316063EF0734714BA732D3C583D1AF0E71C026F97B4715FC13D7660A0300C9250322EC1048ACDF3953A5E799E056408ECF906D88E325F8C0FB22EA7F8E7448567AB3BBE45D3404E8B1B624CED0499860282F50FB9148801ABCBC1A7A74DE9AA3BE5ED899BD1D04E05DDA3E43E967E82CFE033D028764232707B410DA15343AB0B88B7B1E7941B14DBABD57B81A959CC2D52F3BBF3027ABD6D3B887EAB344E9E3FB8587711CF7CFB872D9883E264CD967AAE3DF12F4D6EF51795C453A7009985F2623630A11719B1962AD1E5D8DC1CBC105D43D325BB86991E1118DF556DEA3050F93580BAFCB7D013DA907F53F2CB182C95D7A329E2D8E52CDA520F962C3B8541095CF841013E5459B5EDDF0A10B46E1FDAE02D8218C10F99495BCCEF79D0FE83446E7BE9AE014C26D7CBDAF8BB448DC29456507DF7AD77075C810DC6C40A130D9171663C95EB1A56BCEC1C85C40685BCD88752E2CB3B58B4B3C5C3D34E3FC0CC47680F0C810FDBF81D2533817EEC78299F4CED249F08E026E1D3D968FE4F86510FACA7446ACBD5963050586CA9980A7D3046C3B2045AE1BEA2CE947EEAAB86E0F36B68C2636C9F5EE0511AEACCD8BE68BC4347061A206B48269737FB9251175BCAB4BF5F1ADA9D7473D1C20024B585F7E92E32511260D18926E12E3ED6DE7AC642203A7914255ABD45CD27BF3E10E69421C66491AE1077F142E3367F40A98820D6F420

75794FF6C8D480D28FCA913450592B8EEDA4D5373D72932CB2E12658C26DD877ADCDD8D3923402B70F22D17608005ED3FB7AAC7424E3E721400582D8FF94475B34C9FE050CA65F549797433AF84CDCC9934B3EF6D933131C4430D20D326673F0CF8884AFE1BAA100CD8884A0C30BB1548106C51704E953CEC6BC28EA966D73934286AB6A4D5153B07218296EC5A0AB1CA2EADD8BCBA9080BBD40ADC5A8BAB662BAF8BB36B25512EF5D1FADA2858258EB2C8665F0C9FAA96C52C02D91A301FC20851572C8EE10A29E273774ACA9998A9187C9044C33B16B433F998293C1F06E83F9489330C9B86E5686BAB1EF259778719DCF7B2ADCE5FD3FF0338CEB813CC9F8A491CB7B15EEC63223C8413A523FFB7AF7F7D223DC17C900C65819B9C675B88F405AE9E081CCDBC85935699CC0BC9E2594B9A205D477772DDB14337E878A272762012F73B8F71BD530FA1F6D63B40E9CE012D751B346DE2AC0E0AB660EB16272E0BF7240EFCC5C021F6E724F0F922F8B087BBB75715925965925D0DC5690F43E8DCBEFF137E47696E79AC006DBF27B5CA15D5D3AA47FE715678122F3F90F320A8EF1D9A322762132ABDABC7133DC0B6E90A401B75598C06E05F9D646B9BD4DF02ABD3ABD5F60E19B1497D68BD21139B4915DC7012DBABD66678B6EFC29EC20F278F9B2751F44143D186398904F0542A7CAC4AF21F97E0166EA06FFD667B811610687E3047C00EC11CE0D84D5A60B64EDAE2A150AFC5540B23F0918BEF44389F04CEE5D2E5EF0161148F52A8728C2F018136A098160BF9F33CAFDC8B40521904D62F5F32504F5B7765D00B5A042C6D2E743D4CF72CA72FB83D2D62740476DF36AD1F9C480B31649A12F1DC6C958020713F50D6B6FEBCC0C5B4D9F23F6CD9F5A39D0A36DFFB609C0A0541DA62F29AF4F324616A6B92B19DFBFE9546E8E7137E0D79285060378C27E0068FD7020D99246262A284704708B51D3AE9235A6EB2319A82140A59794B7E166DB3578DAA6B17767840242F945CC94C3FEB499D0236147D232E06BA7598D801EBD5D1B5B93BBC3806F2B4ABD1C5396807EF72451EDBFB3F51572F90073E8A62D7EC090EFEA0DF56349DE4CED12FE0B53070A154F06456E134C743ED7A79369918ADD97E446C9310801AC1D00453E57905073B4731137252830A56EA5E97120623044A741364FBE93624F50692BDCFCCBE1CB0BFE866C4117A7A1371BF6FC1562A80BEAFD05FCC9108E24C405E59D7A56F340C278B9481029D37EED018256AA82C52D3EAF0A27B0649E01670DA6D01C5FE2A76468F6612E448A7B4412A0F2535DBE69230A93341C0D4A21BDAE8AA7022AF68BBF0ACAD68E71C8F133D755C681EBA40CBADF6F34E9DBEB4FDBDE4D768436E76C1F9B402A1CB5F51CD66D31DB4806E27291B7D3557DCA4C92AAF56745BCEC82E830F4E58A5659
2F1550B1DF6FA7A25A75511E9C8A9C6946ABB28FFDCCAC5BE1BACEBDEEF81907FCCED33D04676ACBEBA90D8ACF22E5B894D752D2D26237A9857A0B4204E7189C2380BB39E9FA8360F170A9A138B8407F167491CFEDFD4E8F6B5E3FB12E26834A76666D8146342EFCFC2129ED1F6BC5D79CA42B65015D18CA2122D68DF973F42AC5480738703C9739B8304C422F602C7E7EED991FD1C6378EB22FDEBE5680928B91335ACDF03C148D70ABDA4699AF52FA5EB5E83B11449BD3F3E79B111B448B3A7718D4F17E089993AEAA11F4AC838CCDDABB26DE0E699DF99407C3D07A0179EDD535545C9E38306BFBA0241A8D31162C19DE6E7AD8E300F33BE558343E5891D09362C53626417AC145753918B859E2D54A6FE4A8AB1BC67704963AE869F06CDF9E7EA36318C0669ABEDEC374EC2A0C6EE9AE4C8929192552634166D6474CFDF0E655B8935D7FC2433C712F3FD155884CA503EAEF7421077761253ACC932CC840C990EF82AF0770427C7AC5FCB57A9CB9D77075DC3147C05FA3BB79461B0ACAD68983D7A9C4973E6BE2C0884619BE05A71D78D6DF7D5731C47CA08112C3701C3966A6AFDE3F0FD109C310690F509D6B4BD025B1A5FAF674CCDE85CC1BD5F38CBA050D91B978E1CC87D1F200206401CDA180674FAF1AD1837018178CCAB52D1DE7EED56A2A0B905E47E4C07FB8E2D32FD98743A5E6E19E6EC66BC775C84B9C2DCF566EFADD9D341C62BBDB75FDE37BB8C775A5375348791A7EFE667B0F45FCFBDAE7645A1A1CB04BA89E1C62FDBCF95AED114CC1D5A94F17AE07A789FADE31D2F897757EAF2F6A9118D82B1BCD6BDD565A28C557F7A53461A08BFA7A486203934CB6AA519919EA0D6A4DBF8B47F1A013A2099847198225FE15FF0B5FEAA2CB5D66F91A6F615C56B0E21EF236641E20DF714371C13219A730AA8911D516280170A2A03FE5ED07D13E58AB888F6A630F2C9DF01745A0D8106A4EC87751F3E3FA11E57DF1430CCB40F4127CDEE9DEBC00BED4A1D0D594E3BE9F8A7C837EEC9AEBFFC858870E110F8F6A63DFA26DD92402ABA330CCECD84045B81017EE0C1059B60D7A4188C5CBDC0E3AB3C073CAFCDAB24D85601B633778ED5C405993EA23574D64C82E140C951343385318E9032CF70AAF32CF2313AC49C0B38440A88C27847CB297FAA3BA2D7F8F80EEB52B06F522EAE76C013EF31050B9C3E094DBB36DB54C10DEBA7299366CED4727570AC0C8C1DADA6809846D9A2BFE11A76DAD790456DF88C0EB61895CF4D7DD23EFD1842FEFDCD763F0BF1581709A4983903D671EDED7A1BE405BE0A1D2ABA51106A4F8FB421F09A3289068333038DF5A0A839BECE54EAFCB81E551E92FBE7D2F8B753319CF9F2B10B259A637AC3A657EB38A95483AB71BAF217437ED7F82A52E368134028FFA78813F106442CDA517F6549EB747C538371C

EC1CA8111D711A01C5808F61DD109AD8C0EAC2E40187765BC2B8FDE190BC909243AD1858D74FEC927FF5494C0FF1696BD063E02898A2CE9FC03467DDE18A8A23D80D37890CF0BB105EDE6E08FBF9ECAE95C14CF303B12F909DF3E9DBCAE97A5B0B5324573E907EC70703F305350373B96A999CFFE1DBAD11A362604A9B06F071E570BF2AABB9CC1747EBB0C938DC9A0977A2863889AB123B753F3ED723F83E1F6DF9893792021492ADB57682F5AF875CC7A65562E40B07B44E0732BE924F84294A01C222B43882A83D1388943341ADC6FEA124FB538C602FB38315A55ECF56C3BF7657F4D3A145AC275CE1AC0BEA0865BA9BC2AF5B2230C9E6940DC92B2F7D0118C3A8A571AB1A25989E7B0DD4D133D5EB61035B8C35EB1E75821A4D84EFA268E388F5ED2C6D80ACC7F0FD817E5CFEF4696D8C42ED22413E777FBF8CD02FF4BD1391A795D7D95D154987D5730138E00EF16224EEB9EFFDF6B7101B65817831266B8FE4D9BC190E8CC0A6040B75ACD20865B17532978FE76CBC3B9F1CF870CFC31C691424E195828DBE80C2F634A5E5DDEE12F970BE6F137223A2FAEE3213891B4E7DFA4D638C032C5433382C3BE599B414374B115E8558A8A6D0C431CAA5316F8FBE0BFC772A8A831E21096626463D11B42F39FC38C8AD3D901654B6243A9673A01F634DB97D7A99F42524D1F3CE47755203D802B3725A1545542915310CB52864186701EC2C3B21BB3D1DEFCBD27546DA53054D6DE027E096C0D12CB993CF963775E440449644C04C7C168F75BC67E9D603F513F24BCF0A6D960E08F0D5A78EEC599F23B600655BA5E09ECE878CF5B68F1DD2A5516E755A3318E6287DD40769F0121FC6FE8D330A3D9A35ACE7C734590CA0F7700F56A769FB09F83EF5A0A01D998027DCE19F899D7C812448527FCB895865ECE4DDE172FF2141A3BA8E2A22847B542F34A957220023E2D190D678D4AB2339C41013C0F65ED51BD6B06DB8E7840971A8F0CB36C2DA7565C53AE684137498DF77C33B4B4200517F97A4FE0ED55680D6C6C32780BC92C27A374FAE8087E6C373F550537F126EB7049DF8098DCFDD269A1B7D1DD568D8ACEF18597D7EA619F59BE49A59F267330D26825FDF8F5E5378F5FFE7A85CCA8306FEE7DE0FAB985C047EA4340EC4BA546B35E034EB00E45AF32B2C9A003E0E6B69A3F5BE78971E674D1CDE47179E1DF286960DE8847CF48351F8B73157DD4C52A88CF52A91AB87D9B67F41A01E78732BE187FEC5E3E3B1B30D028FCFC92A8D7EF5503D36A2096FE465D2B741F1BCFB86CDE3348117AC01987E1EC9F4305ADCAAF834C892A88427FAF1659ACE8CC4ED6AC3987305E245E7FC42422EE502064E4CEB1FB3E70B0ABBAE58E6B5F8D28ED63A6032ADCAED7FC1BAE51A1D9CFFFEAB03BD1363D1976F52F575EDC521786B161345082A8CAE756365
74B4720AF3F2E30EDC49395342019FF34F5938B07B1A3526A363A78108E84D981EB1322C837246E1AF4B69FA732DF3E03D50A7C3A0C9CADF27261E55CA0DC3407B1F5794FADDC0656822C9A7E34482738BCBE0D0E649962E5D83255F179860604BE648D7774708BF6655C2C14976964B3F863334E37F7E48B587EC1B4150AE4C7160FC7A08F17F07C2F4E0BBB8612D352F1CFE0AEA2FBD7F03AAA3EAD042211FD9D1BE0DA60D3AC1EDF741307E4D423F8DCFD27149A7A936BBD7CF686D66F82E6C81AD4136DA45BBC235C891129EAE676E01974F54C35BA42D8C5E77682FE28ABC88EA7A3A825B152DD9C379A4210707E1E00C6A9E2B46880794DCBAFBFAF11BAD7B2F8990F65518630D5C7AB874F485F8A213038B6558498E17047D93FA27A43CB52804982C674A8C41D262B2D1D4E149BDA99FB6E61F8CF91AC0B39CCECDE09B1B3B9830382908950F50668767572EF423F1A17F93FB907689ABE20CD908635B959867CBFA36ABDDD54708D3B91D390804A0C526E3EA194340914DA1DECAF7D94FAD4F6F2148B0660E6833BE441DAC1B31184FD91273A9B6A245CE74CE71D270C2D1FAEDBFC569CBB4E51DF17E47007579CF3581B4D2C95053E85447656251C7B4852BA47E3527589D587446C9D5C356171220EA64A908165348412B6B939FA9D89A4D527D24B7FB1CCE9B3513BF48BB6CAFBB04B6F8F42865196295A4438910F55878E62CDB354D7A22EAFF1D5E9BAD7343B31A55D57C7760BA9287698CF6AF22D4F829055846C21A1731B90C78D9C3725112FE2FC70486F918AD1F74A71BB3EBE7C1E2B4C9D85D79E10366B8E0C1F913A22B8381FB967D396EF3003FB28F1A894BC834AD5AA65D29D6EA9208FBBE3B6CBDB96FD8D6AEA85C31518181642072F636FAFB5007E5DEFF5F05BDE46A33D265DFEDC3D09AA87D494AA49FF725CAED65042D78D8AB0B6943F78B5E3DE4747DB47F213D74EA87DE086811CD0E64D3942CB8557E2789539FD1E0418E1653035C138EAE2275B5D493B7B91FA2A0709552253F016881C524487AFCEDAE465F2099EBBD59A0D9CCAB4AAF142CA9D0F556C22F12DFFCA4C5BAE86263146C467DC00D4CF6A8D5594945C6CA93B1FCAC48E912502CAFAA6297C4BC010995156DD2E4825A37B5B127C6B02C3483600CD0E3879A1AFC936885CA2F3B6A5822738B7EF1BA9181C3817F3A4AA90D449BFEB6C468376A8804AEB3AD25C0ECABE27D4E362D9511BE977CCE822304051217D707A5ED3F83FB1AFBFECBA5D9D5BA52710BE509F1A1C9B4C32FF24AEA6A487D3069C1A681471940C96ABD4A84ED557C155A3287DECB1AC87D48C87A2679E7DF9B55F97B1393DD46D080EF3009C70F69A3041674734956B563291AC9C8B2A0576AB6329BCB39E72A8AECC3C2BD5DD5584BA93DCF9819E2F382487CF78A82B4A3E21CB5A0
D682CCDCC46957A68FB6D9F7C29EDA888900D5971C6F47C592D6D432B9D52A0940D8E77A36E0347FC075E327FB12054E2EE427E0772FF61243EAE9291ED39CD43AC655B58A504E3FFC9FF91D044178DF9930BFD0008FC654FA2F2AF860CAA4099DBE08B81ED683B70F86B4C5F374C87A986A22B11B285CB0C1C73592CC3EBD42DCEC8546CC00BFF88D1CCF8396F0AC20DF9EE950CF768E46B6F83DDD5D8AC20B1146322583154FDEFC93706EB7DB34BB186FB7B132BA597B7888067D80D9A0323CAC694FDE29B825A96FA3E5A4C1EB0C4A7AEFCC6038DB2F53424CA3FFA0CFD7B606ADC5A3CC27FCE6458C9515F617058DF0F0620E35C2C4D2AF1D31DBD2C59C122F8631C591BFDB8F9BC69D85319A41BF2734C385D6B4F1417BCAECB8AF180671DE7F23A0316A106451B04819F8C5447FC70E9E3E63F619FC146CF052318EC0080A4BF291A46B5903532DED2B67FC928DC916AFBEED582D295005807E63EF7CA6D39D912B13381C2DDD3D3CD7F5804AA51C5762367E7E44B755B16DA7B8510D32D71313FD8157DED1580822F7227BCBB661358B2360E2EB2FD8569F0057C0C7F35531CB478F931B29389E54FAC9CD5FD25BF7D3A7D826B6FDF9169194CECF6729AD361636121549ECF4533A9E60EB40FD3E749ABA3AEE7FBEE6F8222DB20BADDC831F6BDD443388E1E83F19C89B57A69EC490B2039BDF80F7905B8FC8274CF89B78FCAF6BE238E9656B478D1105A2EDC86A2C459233E0E784E7C51F83A6B471CE3BC171FD3B5440C5B3E0DC290C76F71AA512CB957DBD3D3DAC17C8D3F3046B57B78E8750BCD16BD8B3DC89378C7AF71E65290A802D4EDDCD68B29C92D69F8B3A5727AF2D7EBA19BF25E47EB520B55B3A4BA416373869A517F322FC16FFB2E6D45DEF03E7D922DB5B47327F47F5E1B483A96FCAED3CF8D3FDAB2930F97A31A0FD3CE367BCE5120A854A09C86BDCC4D85FEB5A08F7CB4F1C85F3D64127398D2C46BFAFFADF9EBF1EE8AFC649938E42ACD0200A30231C780157E6F0C2A3B583F640E4BB64EB9CE97A2A1A0DB7E2585F8F959128EDD491E1A764C1E21224A928E19400633B3BF6EFF7C9998297A9D569A5174272DF53215C2A197E41878D716749F9052703EE9074E467D2939FD83C967D28E3D9BCC08F5F032A72C47DEA6F6D06E671B5DE16DBAB62392454B4AA4604D3038430E98D755F320173AA197B620857736C8DC77641DB34BBDCA3E8F5C6A995DF2BF0DD616964344B0B7D9B52F943C993EE45975EC661965DC026ABA4354C5FBAB4F578F55C100116467FEB5DEC56FFE2000D3DC7D064542FCAB87FA81FD31A61D69B9AFFD151E40947638988A3765138822B7CBDC7F5A00E91EC2C7831445F94DD74411E08273B4ED051DCAE85949AF37F89C8A0D9E442F168B0687C1CBF3337B4ADF341437ECEA7F12D3F3F9814B6
984EF7030967D13E159F3837F47ED514899D12665A87C09B10A4D2BB40036D2329394F0156868B9F697F42EFEA09C6CCB5FA67D0490BEDBD9AE8FECF98A576F8DCF83A3AC335E6DB0DDC73D9AB52AAB957FF8F1A7B4222E4549560301C7A370B0632FABE00B0D64FD78C4598BB558608E10C05E558235AF47894B3A8FABB5053E92A32A14EFE4C0F9D38C01E07EAFA0E17F3C43112E0D05D80ED6C4F362B124837384522F65CCA00C4B9D9445603F4D0E27E6B7FCD8397919E973F4F522663624DCCF3CF3D902405C7055D545187655F5C6EC506E45C435F34238532
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /T put
dup 34 /h put
dup 35 /r put
dup 36 /e put
dup 37 /a put
dup 38 /d put
dup 39 /colon put
dup 40 /space put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/space 1 def
/colon 2 def
/T 3 def
/a 4 def
/d 5 def
/e 6 def
/h 7 def
/r 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4124212 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28A34314447AEE989C9D5F058EB91AA64CFFCFD907A0DD23543824D922E57D7C4883211A2271066BA2524F670D3375003754D0B4BE3CF934D4554CCC35E25B52CC3BED941AF640648A919AC25DF78E99BE84C149600DC123752EF0534328B84EA580EE97855828D1E2B64B26FD83E212C25419AC9BDC3DAE9A73693EF0400D0906DF51B4A10C629FB53AF8A2ADB4FA3D62940566C6A5890E34E452BB016CC1A50A6BCC84AA2B529C59161DF90AEB16207595A7B248CD06A0F20A65D10B50DACB6DDBA2A8EA73673793F8D9DDA8B9B5B505A68812616BE406DEE302EB68EF4B5B36675086BACADC8CE36972DB88D59F6A1FC9893BED040B922AE102B743A2FF66EA2A6BD5AC8EB5FE97F1A16B4BADDFB4E6959F7F231D6F86520A960B9A837A77948FDEFC9F63CEDE9C640D8D22FE31C4C834DD54AACD2C526E55E01D8D07E591690993F0088EE7463C719EEA8B13712B9CB731AD0A44CA1BF759C7A08850B8BA1D0BD44288B834D781F6FF2E9C1316227C37E03D7D20DB81414D777B960945A700CF0FD21D26B8C096FF67D52C1026D85DBEFA9611B28AFEF6920E102128D5704D2C90E787D17243CA1301603C2CB31EC92F1796B52B43E6A795F83643296749FE1D6F5CB2D8725EAD8270ADE37AFD19B2C066470730A3A3FD9E776F3B66787431B5061D092E35AB184DC0E38D048775A67614F5476EF4C9DB3EFEED49B88D12C681E6F636CE91BEF2076F4873E61653104F416DE8531F91EB3DEC3846EEAB80DBDABED97

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
q
0 0 813 357 rc
10.9275 345.69574 m
72.427498 345.69574 l
72.427498 305.69574 l
10.9275 305.69574 l
h
10.9275 345.69574 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
/F1.1[ 12 0 0 -12 0 0]sf
355.90149 1410.1362 m
(!"#$%)[ 7.776000 8.664000 7.776000 8.664000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
117.75813 345.69574 m
193.69812 345.69574 l
193.69812 305.69574 l
117.75813 305.69574 l
h
117.75813 345.69574 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
459.39813 1410.1362 m
(&'$"\(\)*$)[ 6.888000 8.664000 8.664000 8.664000 6.888000 3.108000 9.120000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
406.42749 1406.3042 m
444.85812 1406.3042 l
S
0 i
CM
115.85812 325.69574 m
107.85812 328.69574 l
110.85812 325.69574 l
110.85812 325.69574 l
107.85812 322.69574 l
h
115.85812 325.69574 m
f
0 J
0 j
1 0 0 -1 -334 1732 cm
449.85812 1406.3042 m
441.85812 1403.3042 l
444.85812 1406.3042 l
444.85812 1406.3042 l
441.85812 1409.3042 l
h
449.85812 1406.3042 m
S
/Cs2 SC
0 sc
411.42749 1391.572 m
(+,-./0)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
352.70749 1463.5842 m
(12333333)[ 5.560000 10.000000 5.560000 5.560000 5.560000 5.560000 5.560000 0.000000 ] xS
/Cs3 SC
0 sc
340.61249 1447.5 m
359.64249 1447.5 l
S
363.16211 1447.5 m
366.8425 1447.5 l
S
/Cs2 SC
0 sc
340.61249 1445.3042 m
(+4.-.56)[ 5.370000 5.560000 3.150000 2.220000 3.150000 5.000000 0.000000 ] xS
367.8425 1445.3042 m
(789-4.-4:;)[ 2.780000 5.930000 5.370000 2.220000 5.560000 3.150000 2.220000 5.560000 5.740000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
12 255.78 m
73.5 255.78 l
73.5 215.78 l
12 215.78 l
h
12 255.78 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
/F1.1[ 12 0 0 -12 0 0]sf
356.974 1500.052 m
(!"#$<)[ 7.776000 8.664000 7.776000 8.664000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
14.78 161.362 m
76.279999 161.362 l
76.279999 121.362 l
14.78 121.362 l
h
14.78 161.362 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
359.754 1594.47 m
(!"#$3)[ 7.776000 8.664000 7.776000 8.664000 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
339.88 1553.778 m
(33333=2>>>>>>)[ 5.560000 5.560000 5.560000 5.560000 5.560000 5.560000 10.000000 5.560000 5.560000 5.560000 5.560000 5.560000 0.000000 ] xS
/Cs3 SC
0 sc
342.10251 1537.5 m
361.13251 1537.5 l
S
364.798 1537.5 m
368.33249 1537.5 l
S
/Cs2 SC
0 sc
342.10251 1535.498 m
(+4.-.56)[ 5.370000 5.560000 3.150000 2.220000 3.150000 5.000000 0.000000 ] xS
369.33249 1535.498 m
(7)s
372.11249 1535.498 m
(89-4.-4:;)[ 5.930000 5.370000 2.220000 5.560000 3.150000 2.220000 5.560000 5.740000 0.000000 ] xS
339.88 1646.9377 m
(>>>>>?2%111111)[ 5.560000 5.560000 5.560000 5.560000 5.560000 5.560000 10.000000 5.560000 5.560000 5.560000 5.560000 5.560000 5.560000 0.000000 ] xS
/Cs3 SC
0 sc
344.14999 1630.5 m
363.17999 1630.5 l
S
366.96579 1630.5 m
370.38 1630.5 l
S
/Cs2 SC
0 sc
344.14999 1628.6577 m
(+4.-.56)[ 5.370000 5.560000 3.150000 2.220000 3.150000 5.000000 0.000000 ] xS
371.38 1628.6577 m
(7)s
374.16 1628.6577 m
(89-4.-4:;)[ 5.930000 5.370000 2.220000 5.560000 3.150000 2.220000 5.560000 5.740000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
117.75813 255.78 m
193.69812 255.78 l
193.69812 215.78 l
117.75813 215.78 l
h
117.75813 255.78 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
/F1.1[ 12 0 0 -12 0 0]sf
459.39813 1500.052 m
(&'$"\(\)*$)[ 6.888000 8.664000 8.664000 8.664000 6.888000 3.108000 9.120000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
117.75813 161.78925 m
195.30313 161.78925 l
195.30313 121.78925 l
117.75813 121.78925 l
h
117.75813 161.78925 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
460.20062 1594.0427 m
(&'$"\(\)*$)[ 6.888000 8.664000 8.664000 8.664000 6.888000 3.108000 9.120000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
407.5 1496.22 m
444.85812 1496.22 l
S
0 i
CM
115.85812 235.78 m
107.85812 238.78 l
110.85812 235.78 l
110.85812 235.78 l
107.85812 232.78 l
h
115.85812 235.78 m
f
0 J
0 j
1 0 0 -1 -334 1732 cm
449.85812 1496.22 m
441.85812 1493.22 l
444.85812 1496.22 l
444.85812 1496.22 l
441.85812 1499.22 l
h
449.85812 1496.22 m
S
1 J
1 j
0.60000002 i
410.28 1590.6379 m
444.85849 1590.2819 l
S
0 i
CM
115.85822 141.76968 m
107.82775 144.68712 l
110.85849 141.71817 l
110.85849 141.71817 l
107.88955 138.68744 l
h
115.85822 141.76968 m
f
0 J
0 j
1 0 0 -1 -334 1732 cm
449.85822 1590.2303 m
441.82776 1587.3129 l
444.85849 1590.2819 l
444.85849 1590.2819 l
441.88956 1593.3126 l
h
449.85822 1590.2303 m
S
0.64705902 0.84313703 0.82352901 sc
CM
232 255.78 m
307.94 255.78 l
307.94 215.78 l
232 215.78 l
h
232 255.78 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
584.85999 1500.052 m
('$\)*$)[ 8.664000 8.664000 3.108000 9.120000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
5 42.554493 m
237.825 42.554493 l
237.825 25.992496 l
5 25.992496 l
h
5 42.554493 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
/F2.1[ 14 0 0 -14 0 0]sf
364.51749 1703.0234 m
(!"#$%&'\()[ 8.554000 8.302000 5.194000 8.036000 8.036000 8.554000 3.892000 0.000000 ] xS
/F1.1[ 14 0 0 -14 0 0]sf
418.97751 1703.0234 m
(+@+AB.-C4D.EF+9GD1<)[ 7.518000 7.252000 7.518000 7.518000 7.784000 4.410000 3.108000 8.036000 7.784000 5.446000 4.410000 7.784000 4.410000 7.518000 7.518000 8.302000 5.446000 7.784000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
3.9275 17.31049 m
237.825 17.31049 l
237.825 0.74849319 l
3.9275 0.74849319 l
h
3.9275 17.31049 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
/F2.1[ 14 0 0 -14 0 0]sf
363.98126 1728.2675 m
(!"#$%&'\()[ 8.554000 8.302000 5.194000 8.036000 8.036000 8.554000 3.892000 0.000000 ] xS
/F1.1[ 14 0 0 -14 0 0]sf
418.44125 1728.2675 m
(+@+AB.-C4D.EF+9GD13)[ 7.518000 7.252000 7.518000 7.518000 7.784000 4.410000 3.108000 8.036000 7.784000 5.446000 4.410000 7.784000 4.410000 7.518000 7.518000 8.302000 5.446000 7.784000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
350.48001 255.78 m
426.42001 255.78 l
426.42001 215.78 l
350.48001 215.78 l
h
350.48001 255.78 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
/F1.1[ 12 0 0 -12 0 0]sf
701.78003 1500.052 m
(*HIJH)[ 9.120000 8.220000 8.448000 7.332000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
692.54938 255.78 m
760.54938 255.78 l
760.54938 215.78 l
692.54938 215.78 l
h
692.54938 255.78 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
1033.4354 1500.052 m
(KH*LJ"\()[ 7.776000 8.220000 9.120000 6.228000 7.332000 8.664000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
247 67.798492 m
801.02899 67.798492 l
801.02899 51.2365 l
247 51.2365 l
h
247 67.798492 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
/F2.1[ 14 0 0 -14 0 0]sf
767.11951 1677.7794 m
(!"#$%&'\()[ 8.554000 8.302000 5.194000 8.036000 8.036000 8.554000 3.892000 0.000000 ] xS
/F1.1[ 14 0 0 -14 0 0]sf
821.57947 1677.7794 m
(+@+AB.-C4D.EF+9GD1%)[ 7.518000 7.252000 7.518000 7.518000 7.784000 4.410000 3.108000 8.036000 7.784000 5.446000 4.410000 7.784000 4.410000 7.518000 7.518000 8.302000 5.446000 7.784000 0.000000 ] xS
/F1.1[ 12 0 0 -12 0 0]sf
532.69812 1391.572 m
(+,-./0)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
413.17999 1484.3149 m
(+,-./0)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
532.69812 1484.17 m
(+,-./0)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
413.17999 1577.058 m
(+,-./0)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
534.3031 1577.058 m
(+,-./0)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
770.91998 1496.22 m
791.60315 1496.22 l
S
0 i
CM
462.60312 235.78 m
454.60312 238.78 l
457.60312 235.78 l
457.60312 235.78 l
454.60312 232.78 l
h
462.60312 235.78 m
f
0 J
0 j
1 0 0 -1 -334 1732 cm
796.60315 1496.22 m
788.60315 1493.22 l
791.60315 1496.22 l
791.60315 1496.22 l
788.60315 1499.22 l
h
796.60315 1496.22 m
S
760.91998 1496.22 m
770.91998 1496.22 l
770.91998 1492.22 m
770.91998 1500.22 l
S
/Cs2 SC
0 sc
645.55157 1484.17 m
(+,-./0)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
765.41998 1484.17 m
(+,-./0)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
/Cs1 SC
0.82352901 0.0588235 0.21568599 sc
CM
355.45554 259.36554 m
357.40817 257.4129 357.40817 254.24709 355.45554 252.29448 c
353.5029 250.34184 350.3371 250.34184 348.38446 252.29448 c
346.43185 254.24709 346.43185 257.4129 348.38446 259.36554 c
350.3371 261.31818 353.5029 261.31818 355.45554 259.36554 c
f
1 J
1 j
0.60000002 i
0.49998799 0.5 0.5 sc
1 0 0 -1 -334 1732 cm
1094.5493 1496.22 m
1125.0281 1496.22 l
S
0 i
CM
796.02814 235.78 m
788.02814 238.78 l
791.02814 235.78 l
791.02814 235.78 l
788.02814 232.78 l
h
796.02814 235.78 m
f
0 J
0 j
1 0 0 -1 -334 1732 cm
1130.0281 1496.22 m
1122.0281 1493.22 l
1125.0281 1496.22 l
1125.0281 1496.22 l
1122.0281 1499.22 l
h
1130.0281 1496.22 m
S
/Cs2 SC
0 sc
1099.5493 1484.17 m
(ACMM+A./0)[ 6.444000 6.888000 2.664000 2.664000 6.444000 6.444000 3.780000 3.108000 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
454.86688 1445.3042 m
(N<7/O2PQ7R+9.BF+0)[ 5.560000 5.560000 2.780000 2.590000 6.000000 10.000000 6.000000 2.780000 2.780000 2.960000 5.370000 5.370000 3.150000 5.560000 3.150000 5.370000 0.000000 ] xS
453.72311 1536.5758 m
(N<7/O2PQ7R+9.BF+0)[ 5.560000 5.560000 2.780000 2.590000 6.000000 10.000000 6.000000 2.780000 2.780000 2.960000 5.370000 5.370000 3.150000 5.560000 3.150000 5.370000 0.000000 ] xS
453.72311 1628.6577 m
(N<7/O2PQ7R+9.BF+0)[ 5.560000 5.560000 2.780000 2.590000 6.000000 10.000000 6.000000 2.780000 2.780000 2.960000 5.370000 5.370000 3.150000 5.560000 3.150000 5.370000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
527.69812 1406.3042 m
584.98499 1406.3042 l
584.98499 1469.3199 l
S
0 i
CM
250.985 257.67999 m
253.985 265.67999 l
250.985 262.67999 l
250.985 262.67999 l
247.985 265.67999 l
h
250.985 257.67999 m
f
0 J
0 j
1 0 0 -1 -334 1732 cm
584.98499 1474.3199 m
587.98499 1466.3199 l
584.98499 1469.3199 l
584.98499 1469.3199 l
581.98499 1466.3199 l
h
584.98499 1474.3199 m
S
1 J
1 j
0.60000002 i
527.69812 1496.22 m
559.09998 1496.22 l
S
0 i
CM
230.10001 235.78 m
222.10001 238.78 l
225.10001 235.78 l
225.10001 235.78 l
222.10001 232.78 l
h
230.10001 235.78 m
f
0 J
0 j
1 0 0 -1 -334 1732 cm
564.09998 1496.22 m
556.09998 1493.22 l
559.09998 1496.22 l
559.09998 1496.22 l
556.09998 1499.22 l
h
564.09998 1496.22 m
S
1 J
1 j
0.60000002 i
529.3031 1590.2107 m
584.98499 1590.2107 l
584.98499 1523.12 l
S
0 i
CM
250.985 213.88 m
247.985 205.88 l
250.985 208.88 l
250.985 208.88 l
253.985 205.88 l
h
250.985 213.88 m
f
0 J
0 j
1 0 0 -1 -334 1732 cm
584.98499 1518.12 m
581.98499 1526.12 l
584.98499 1523.12 l
584.98499 1523.12 l
587.98499 1526.12 l
h
584.98499 1518.12 m
S
/Cs2 SC
0 sc
687.91998 1536.5758 m
(/G-;.94A+Q7#!"0)[ 2.590000 5.930000 2.220000 5.000000 3.150000 5.370000 5.560000 5.370000 5.370000 2.780000 2.780000 6.480000 6.480000 7.220000 0.000000 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
703.46503 1476.22 m
703.46503 1476.22 710.77789 1428 721.53497 1428 c
729.19733 1428 736.04065 1452.4658 739.34406 1466.5431 c
S
0 J
0 j
[] 0 d
0 i
741.03369 1474.3629 m
739.34406 1466.5433 l
742.27643 1465.9097 m
741.03369 1474.3629 l
736.41174 1467.1769 l
S
/Cs2 SC
0 sc
/F1.1[ 12 0 0 -12 0 0]sf
705.35999 1417.49 m
(ACMM+A./0)[ 6.444000 6.888000 2.664000 2.664000 6.444000 6.444000 3.780000 3.108000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
5 67.798492 m
237.825 67.798492 l
237.825 51.2365 l
5 51.2365 l
h
5 67.798492 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
/F2.1[ 14 0 0 -14 0 0]sf
364.51749 1677.7794 m
(!"#$%&'\()[ 8.554000 8.302000 5.194000 8.036000 8.036000 8.554000 3.892000 0.000000 ] xS
/F1.1[ 14 0 0 -14 0 0]sf
418.97751 1677.7794 m
(+@+AB.-C4D.EF+9GD1%)[ 7.518000 7.252000 7.518000 7.518000 7.784000 4.410000 3.108000 8.036000 7.784000 5.446000 4.410000 7.784000 4.410000 7.518000 7.518000 8.302000 5.446000 7.784000 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
1021.2844 1535.498 m
(/-GQ7.-.M+Q7G-;.94A+0)[ 2.590000 2.220000 5.930000 2.780000 2.780000 3.150000 2.220000 3.150000 2.220000 5.370000 2.780000 2.780000 5.930000 2.220000 5.000000 3.150000 5.370000 5.560000 5.370000 5.370000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
578.52625 255.78 m
654.46625 255.78 l
654.46625 215.78 l
578.52625 215.78 l
h
578.52625 255.78 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
/F1.1[ 12 0 0 -12 0 0]sf
931.27826 1500.052 m
(&J\("S)[ 6.888000 7.332000 6.888000 8.664000 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
932.99628 1536.5758 m
(/-GQ7.-.M+0)[ 2.590000 2.220000 5.930000 2.780000 2.780000 3.150000 2.220000 3.150000 2.220000 5.370000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
641.94 1496.22 m
677.58002 1496.22 l
S
0 i
CM
348.57999 235.78 m
340.57999 238.78 l
343.57999 235.78 l
343.57999 235.78 l
340.57999 232.78 l
h
348.57999 235.78 m
f
0 J
0 j
1 0 0 -1 -334 1732 cm
682.58002 1496.22 m
674.58002 1493.22 l
677.58002 1496.22 l
677.58002 1496.22 l
674.58002 1499.22 l
h
682.58002 1496.22 m
S
0.64705902 0.84313703 0.82352901 sc
CM
464.50311 255.78 m
540.44312 255.78 l
540.44312 215.78 l
464.50311 215.78 l
h
464.50311 255.78 m
f
/Cs2 SC
0 sc
1 0 0 -1 -334 1732 cm
/F1.1[ 12 0 0 -12 0 0]sf
821.35913 1500.052 m
(N\)T\)\()[ 6.672000 3.108000 10.452000 3.108000 0.000000 ] xS
/F1.1[ 10 0 0 -10 0 0]sf
817.16815 1536.5758 m
(/U7V7%110)[ 2.590000 5.190000 2.780000 6.000000 2.780000 5.560000 5.560000 5.560000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
874.44312 1496.22 m
905.62622 1496.22 l
S
0 i
CM
576.62622 235.78 m
568.62622 238.78 l
571.62622 235.78 l
571.62622 235.78 l
568.62622 232.78 l
h
576.62622 235.78 m
f
0 J
0 j
1 0 0 -1 -334 1732 cm
910.62622 1496.22 m
902.62622 1493.22 l
905.62622 1496.22 l
905.62622 1496.22 l
902.62622 1499.22 l
h
910.62622 1496.22 m
S
1 J
1 j
0.60000002 i
988.46625 1496.22 m
1019.6494 1496.22 l
S
0 i
CM
690.64935 235.78 m
682.64935 238.78 l
685.64935 235.78 l
685.64935 235.78 l
682.64935 232.78 l
h
690.64935 235.78 m
f
0 J
0 j
1 0 0 -1 -334 1732 cm
1024.6494 1496.22 m
1016.6494 1493.22 l
1019.6494 1496.22 l
1019.6494 1496.22 l
1016.6494 1499.22 l
h
1024.6494 1496.22 m
S
/Cs2 SC
0 sc
/F1.1[ 12 0 0 -12 0 0]sf
879.44312 1484.17 m
(+,-./0)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
993.46625 1484.17 m
(+,-./0)[ 6.444000 10.236000 2.664000 3.780000 3.108000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
