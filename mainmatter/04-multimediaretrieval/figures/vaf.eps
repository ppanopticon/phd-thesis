%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 590.000000 299.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.4 (Build 21F79) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 590 299
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 590 299
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /x put
dup 34 /y put
dup 35 /one put
dup 36 /three put
dup 37 /V put
dup 38 /e put
dup 39 /c put
dup 40 /t put
dup 41 /o put
dup 42 /r put
dup 43 /C put
dup 44 /l put
dup 45 /hyphen put
dup 46 /A put
dup 47 /s put
dup 48 /i put
dup 49 /g put
dup 50 /n put
dup 51 /m put
dup 52 /S put
dup 53 /a put
dup 54 /u put
dup 55 /parenleft put
dup 56 /space put
dup 57 /I put
dup 58 /D put
dup 59 /parenright put
dup 60 /two put
dup 61 /ellipsis put
dup 62 /L put
dup 63 /fi put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000386670676D00000000000000D400000428676C796600000000000004FC000014EC6865616400000000000019E800000036686865610000000000001A2000000024686D74780000000000001A44000000806C6F63610000000000001AC4000000426D6178700000000000001B0800000020707265700000000000001B28000000FB14006D0085008D009C00000010004BFF0E0005020E00CA02110000140074006B0084008E007F009D00000011FF4A000D0205000E02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821


FFF0027102DB003D00A1BA0000000100032BBA0020001F00032BB8002010BA0034001F0020111239B800342F410500DA003400EA003400025D411B0009003400190034002900340039003400490034005900340069003400790034008900340099003400A9003400B9003400C90034000D5DB8000BDCBA002A00010000111239B8002A2FB80015DCB8000B10B8003FDC00BA0039000600032BB8003910BA0025001A00032BB800251030313723061E0233323E0235342E02272E0335343E0233321E021733342E0223220E0215141E02171E0315140E0223222E02B0980132556F3B496F4B263346471443532F10141F26131D31261702982F50673830604C2F253C4C28274C3C251C2A30151F3A2B1AED42603E1D223D54313C4D2E15041116161A15171E14080A182A203E5738191A36513731452E1D0A0B1218241D1B2314070F1F320001FFF90000027E02CA0007001900B800012FB800052FB800002FBA000400000001111239303121132303230323130191EDA2A1029FA1E702CAFE0A01F6FD3600020020FFF302180213002B0040002BB800142B303141030030000800015D41030037002300015D41030037004000015D0041030036003B00015D133E0333321E021511141617232E01270E0123222E0235343E0627342E0223220607170E03070E0315141E0233323E023530032C44552B2750422A080A90040501225C302540301B1F313F403E301C010F1921132A3004BA091B1F2211101F170E0E1820112A2E16050166324228110B20392FFEF32340100C190D231C12263A282C3922110A060C1716171B0F05242A690809060403030A111A14131A0F061C27280C000000010026FFF30224021300220071BA001C000B00032BB8001C10411B0006001C0016001C0026001C0036001C0046001C0056001C0066001C0076001C0086001C0096001C00A6001C00B6001C00C6001C000D5D410500D5001C00E5001C00025D00BA0017001000032BB8001710BA0006002100032BB8000610B80000DC303101332E0323220E0215141E0233323637230E0123222E0235343E02333201968B032A43552E3F6244232644613A67840E89073733212E1B0C0C1D2E225B014F324931182A4B673C3A6146276C6730391E2F3A1C1D3B311F00000002001DFFF30224021300080022003FBA0009001400032BB8000910B80001D000BA0020001900032BB8002010BA000F000600032BB8000F10BA0001000900032BB8000110B8001910B8001DDC303101233E033332160721362E0223220E0215141E0233323637230E012322260192E7010B1B2D223433DD0175041C3F62423B6146262544623D587C1E7D073E2B3C40013A0F26221738903C6E56332A49643A3C644827505D182B3E00000000020026FF3D022702130013003A00D1B8003B2FBA001400

0ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E02B40C1D302424311D0C0C1D312424301D0C8E2646623D3D6346262646633D3D62462601021F3C2E1D1D2E3C1F1F3B2F1C1C2F3B1F3E6447262647643E3E65472727476500000001003600000183021300150031BA0015000000032BB8001510B80002D0B800022F00B800012FBA000E000800032BB8000E10BA00140008000E111239303113113335343E0233321617352623220E02072335368E0E2136270D1C0A110E1B322C220A020205FDFBE9233C2D1A03028405101D29186000000001001DFFF301FC02130039006DBA0000000100032BBA001E001D00032BB8001E10B8001D10B8000BDCBA002800010000111239B800282FB80015DCB8001D10B80030D0B800302FB8001E10B8003BDC00BA0035000600032BB8003510BA0023001A00032BB8002310B8000610B80000DCB8002310B8001DDC303137231E0333323E0235342E02272E0335343E0233321617332E0323220E0215141E02171E0115140E0223222E02A487022B43562D2C5542291C2E3B1F1E3A2D1C10171C0C2638038704293E4F2A2A5040271C2E3B1F4C55121B210F15271E13A834452A12112A45332431211407070C0F181310130A031D29303F26100F254032222F1F130710202013190F070A1521000000010006FFFB015202A000190053BA0001000200032BB8000110B8000210B80006D0B8000110B80016D000B800012FBA0013000C00032BB8001310BA0004000500032BB8000410B80000D0B8000C10B8000FD0B8000F2FB8000510B80017D030311335231523153311141E0233323637350E0123222635113335EA8E56561A2D3B21152C120A160C24186802059B9B5FFECF27301A0902036E0202182401005F00010036FFF3021B02050016004DBA000A000B00032BB8000A10BA0001000200032BB8000110B8000210B80015D0B800152FB8000110B80018DC00B800012FB8000A2FBA0006001100032BB8000610BA001500110006111239303121112311140623222635112311141E02333236373315021B8E343A33288E112A49392D561B030205FEF14F453F400124FEC2304F371E282D4800010000000002190205000B002700B800072FB8000A2FB800012FB800042FBA000300010007111239BA0009000100071112393031130333371733033723072723BABA9F6C6CA2BFAA9D5A5BA20110FEF0A3A30113F287870001FFFBFF4B020D02050015001D00B800102FB800132FB800012FB800052FBA0004001300011112

002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 32 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/hyphen 4 def
/one 5 def
/two 6 def
/three 7 def
/A 8 def
/C 9 def
/D 10 def
/I 11 def
/L 12 def
/S 13 def
/V 14 def
/a 15 def
/c 16 def
/e 17 def
/g 18 def
/i 19 def
/l 20 def
/m 21 def
/n 22 def
/o 23 def
/r 24 def
/s 25 def
/t 26 def
/u 27 def
/x 28 def
/y 29 def
/ellipsis 30 def
/fi 31 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4124212 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28036C9F7C25418575A9E4FF5238FB0A96C8EB4A71AB1BFC326B832B3CAE7389AB353E1CB875A8358A1E4C47618469BE18081B93D0D80472B48EAD59C076BFA5060B9ADAA1406C0DEE5DE13454B1E58A21532AC620D85AA5F586854AB1034CA6C059617D5EECE605280F8A1C0A8910EC7F9C7726648D8D35B0939AA3B6C35E213132C819FD2F0EB415BE77BC4811CEF9BA665816DEA7C6FD4DF039179F5B7F5B9A1CB780C29069F0484ACE5EC44EB50F4767FE970DB5BBCCD0DFA5131EFB5544A533AB336B6D9964AB0DAB3B933F835E50DC5E01A6FC01E8B4DE3D6AF5FEB012543999D71AD6557FBC5673DB5EED1FB152219FAB6B033A3CE448D82486982112FF40E2F2E1E3880CD41BC7CDADDE1EEE3598DBEA1B27012F483031EB8A2E014014257367CAA454D47E8170B39528ED8B16CA683E4549199E79AF080F29EBB22B852D3E4956CE0D7CAA491691DBA3D7852BFF42BC7BB4EE1F342D1DD354AA433CA5A8C2D9A146F4317892433DBEBAAE5E620A5D2821650A4E15B3970CFC3B4AE5CA6A74BF2E430857035B2512054F3392886C9FFA35124A348CB020620077946B2C69BB2CCE1F8CB0228237220253CCFE7E25727C7CDE9DB57E4C9A1927803DA39E0225F0C75322D09781C6D9EFB76A05CB3A731D277790CAD4A73CDD7564A27996BD898395533F3FD91333869F6CB4FF4EEE3F27AFFE1C21512D73A34AC959788DF8E1A2A0CC9F90B5FCCC478B4014894DE38DC81868905375BFA70E7529120D9EABA26F5
CBCE48E208797F1B3A28FC057739F97F06A3DEACAC92551133C64697F354CAF9048D97AECCF077980D3085A25D8D6FA5153B96B5C0D453C5610746706F0D2176688438EC681EDFD62FB1DC53854B002B9CAD2A172A01EF5C11D6D4450F98AC33EBE9F014E68CA88BFE1F4B4D976F98B342F52FA82FD86EFFF9E4A08593C8DAF60724D559F2BD5F414FA85AA83D182EA276D8E1D14222FC4CCCFA067245F276F7C074A9A40B92B15C7B99D72571DDF22F5F8321DF6250DF74F085B42D10B4BC5A97BD605FB657AE7A131FEC9A5F93E206880A1C48AA289AC6D5B153DC5FCA038654A45D5DA677381315A6A19D308ED17CFDA696308054C4BE49993128D12040E9A0E8FE933A5EABD20876DF6F444803CED97F499013BE47BE992C220D9EA725E698D59AB8CFCBD3C89E6AA9A039E142F1F2B6ACD1C23E6DCF7E2B2714FDD5116E198ACE33121762819546E42E338EDC1D5302E80AF7690A17802F117AF0394B6C8A7744F5BFB4748E814E2619D88DD820F36FC5E21E0DBF836A8DEE5FBC4C2377939DBB89F929D87E9D261DE4CF5195B2B828D15F15A0DBBF6694C16E5E648A86E7C1FDEDD2FFD47EFA1582CC040D372B33E4171FE3C87D6BD42C96C3D527F95883A4D16D761A862B2462DF7DD9B94E93F08F1460558A2ADA92F81876143E1CF96E563E2D5964875426CA2FF284E560CCB51A3DD2D570B439660C971C26FFDC6179369576633B03142E1BF16CA5D2C6DB39C4D3513B8D63142189092A81F458D6D3106C273D5849B7AE836A31B069467BF32E6ED503302334D115D1ABEE18836A7F1CEF7E34B484D79DBA43924421C8C3D0AF222D2D0525614E2DD5ABE97034D55ED4D7D46E8D17C4FA446EBA08BA326AF84A6F3FB12FF10B09BF5E6152DD1D406EFAFAA0DA53057575D20617FFCC9671EA33219A13B8EA98B8DA7B564864289C5FF78679BF456DDE6B423439F5F3491C1C315F9AF12B9567C76F0FBE096D4641C625161AF51B165CA2E3FEA6AC48B030228F1EE2E029F843CE7AC9865109D6B74197D5E12FEEB4E6FE7EC44D1CF00707EC538995F2478D004427D8F0AD95C2003623F2990D82A108F0149D70A604BE818F14F743E12C7B6372D8E12324E292571CBFC9D0620C301F439AA88734E5F96DD1444BC8273DDB74E6CFC72BD0BB4189FC3A7B62CDA1ABAE2E05ACAF7799179960768D8E5AF7C8FAA9CA9750208AEFB3E4763FD938121053E2A1069708883A094E6E413A1076B6C0214DF7A4F02F372D8DA29B08D7F1BD45FB14AA4876695D2839569B8A8F48FDCCB2FE24FDC32BF16D1CE46F08197561FC728E2307A5A3C09484C23D2B9DE55CB8D0535FFC29210FE98D39D6411569DB5CCB4CD3F594E3219A902B58F2E83D954EC957627B1C6C9752E75DFCC9099FB9E301CE203D66FE37E0B206C423FE1752D4A614C42D064FC744




0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F1.1/HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /one put
dup 34 /two put
dup 35 /three put
dup 36 /four put
dup 37 /period put
dup 38 /zero put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/period 1 def
/zero 2 def
/one 3 def
/two 4 def
/three 5 def
/four 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec

03F24DD4621B006EEC405A9AD99EC973CBB17C07DA075F08ED90B864A57D0D6FE0424D243285412C55B6E74FFB088FF2CD6CDC67C9F00166F190F787424D399683EB26EA2D763666E25530CF1B097EC1C4105083DF5098BABA660957888D4DF3DC4985DCE9A138EB87708B8386BC79A623EE10999C78CD266E220EB39941EDA39CE049895CEC264D7BAD0555A2BFE4B8D8298EFAD17AB4185F69D0FDAD37460536E66D20575EC575526AF328EAF8D3DE29C9841D688D69AB759CDDDC48E5B52F910DF44FABA61E25CA2D111D1036F6B8D87BC2E164A52AF994905B2E57CDB3001563E1FDAE173E75589604140185CCCE23848B3938EBD7FC53345638A208F5A43BFFDEC9C02E36C45719505F6575F1F5D775B758AF2AC676AF0CF3276B47D6AC1A99E1D1D8BA4C1CA6F8694A15024F84935C0AB2454ADE9CBB5322103E937C22BA3340C097E67CDC3B2312574390042ADC048D5057F2200C58A35E1C441BAED473494329FF0A3FD143CE116FB5810A9DCA0EA09C6424F9B8C863D9BE65ACD580209468C02AEDEF3893AED52F28A593492DAD7131174BDEC7800765E699201A3F0DE447E129CB51F3B8BAA66902DA3409DBB905B44DA2547074C217CF376AAAE5B1A25807A55D9F5253D16386A111BB52B36E3D7BA4E4B6FBE5716B2F15867E76E86ECCA4BD9CBC8C259B3F09ECE990C2152D535A2F31B38AAB7A7A0E05164C98D1549AA8CE161808CF2C1C2EC20E13DD2DAA1CD7166234A381E25355DE3F85E62DE745E4A9C2C6850C40A10DCA9C3A57D0A72D1AD66647197BA46EC93D068D10AEA5188F24A262D8463C2485B1E4099AF06BCA46CE12930AFB9FDE9F7FC9BEBCE45764214E568BBC6ECA28B621F645A118D3B2FA25E697B5D96CBF5243E447C5A6B66398589DF234BCEDF6EE2471923AB62A0F3579DAD01220FAFB4221A070A1BD4B0C86B6C397B53DEB5B123F0F707BD89C8D1E60AAE966643459EE7D27F634E364623AA72E6B4B84C3B3EF2479D9F272548DDD23EB6E5D35BF303CD55E9384FE8314FAF19824
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.8509804 0.8509804 0.8509804 sc
q
0 0 590 299 rc
138.35149 74.206215 m
139.09091 73.464874 139.09091 72.262924 138.35149 71.521584 c
137.61208 70.780235 136.41322 70.780235 135.67381 71.521584 c
134.93439 72.262924 134.93439 73.464874 135.67381 74.206215 c
136.41322 74.947556 137.61208 74.947556 138.35149 74.206215 c
f
0.78823531 0.78823531 0.78823531 sc
253.78647 79.141846 m
254.52589 78.400505 254.52589 77.198555 253.78647 76.457214 c
253.04706 75.715866 251.84821 75.715866 251.1088 76.457214 c
250.36937 77.198555 250.36937 78.400505 251.1088 79.141846 c
251.84821 79.883186 253.04706 79.883186 253.78647 79.141846 c
f
232.26352 33.392284 m
233.00294 32.650944 233.00294 31.448994 232.26352 30.707653 c
231.52409 29.966311 230.32526 29.966311 229.58583 30.707653 c
228.84641 31.448994 228.84641 32.650944 229.58583 33.392284 c
230.32526 34.133629 231.52409 34.133629 232.26352 33.392284 c
f
0.64705902 0.84313703 0.82352901 sc
158.25662 100.19758 m
158.99605 99.456238 158.99605 98.254288 158.25662 97.512947 c
157.5172 96.771599 156.31836 96.771599 155.57895 97.512947 c
154.83951 98.254288 154.83951 99.456238 155.57895 100.19758 c
156.31836 100.93892 157.5172 100.93892 158.25662 100.19758 c
f
0.78823531 0.78823531 0.78823531 sc
192.31372 81.799492 m
193.05315 81.058151 193.05315 79.856201 192.31372 79.114861 c
191.5743 78.37352 190.37546 78.37352 189.63603 79.114861 c
188.89661 79.856201 188.89661 81.058151 189.63603 81.799492 c
190.37546 82.54084 191.5743 82.54084 192.31372 81.799492 c
f
/Cs2 SC
0 sc
1 0 0 -1 -959 1335 cm
/F1.1[ 16 0 0 -16 0 0]sf
1249.0718 1324.7108 m
(!)s
1080.9269 1153.5353 m
(")s
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1086.7261 1318.7694 m
1086.7261 1170.4758 l
S
0 i
CM
127.72608 172.52414 m
124.72608 164.52414 l
130.72609 164.52414 l
h
127.72608 172.52414 m
f
0 J
0 j
1 0 0 -1 -959 1335 cm
1086.7261 1162.4758 m
1083.7261 1170.4758 l
1089.7261 1170.4758 l
h
1086.7261 1162.4758 m
S
1 J
1 j
0.60000002 i
1086.7261 1318.7694 m
1234.6104 1318.7694 l
S
0 i
CM
283.61035 16.230618 m
275.61035 19.230618 l
275.61035 13.230618 l
h
283.61035 16.230618 m
f
0 J
0 j
1 0 0 -1 -959 1335 cm
1242.6104 1318.7694 m
1234.6104 1315.7694 l
1234.6104 1321.7694 l
h
1242.6104 1318.7694 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.49998799 0.5 0.5 sc
1145.3684 1174.8783 m
1145.3684 1317.6023 l
S
1205.1781 1174.8783 m
1205.1781 1317.6023 l
S
1087.2875 1279.9636 m
1224.7889 1279.9636 l
S
1088.4497 1244.8888 m
1225.9512 1244.8888 l
S
1086.9845 1209.814 m
1224.4858 1209.814 l
S
1087.8435 1174.1172 m
1225.345 1174.1172 l
S
0.27450982 0.3137255 0.35294119 sc
0 i
/F2.1[ 14 0 0 -14 0 0]sf
1112.0258 1332.2627 m
(!)s
1169.9348 1332.0779 m
(")s
1218.1019 1332.0779 m
(#)s
1074.9335 1304.5004 m
(!)s
1075.8419 1266.9401 m
(")s
1074.9335 1232.4275 m
(#)s
1074.9335 1197.9148 m
($)s
0.82353002 0.058820002 0.21569 sc
/F2.1[ 16 0 0 -16 0 0]sf
1120.9209 1236.77 m
(!#)[ 8.896000 0.000000 ] xS
0.64705902 0.84313703 0.82352901 sc
CM
7.8804145 120.44695 m
47.380413 120.44695 l
47.380413 78.14695 l
7.8804145 78.14695 l
h
7.8804145 120.44695 m
f
/Cs2 SC
0 sc
1 0 0 -1 -959 1335 cm
/F2.1[ 12 0 0 -12 0 0]sf
978.29041 1232.3671 m
(!%&)[ 6.672000 3.336000 0.000000 ] xS
978.29041 1246.703 m
(&%!)[ 6.672000 3.336000 0.000000 ] xS
[] 0 d
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
1006.3804 1235.703 m
1101.7159 1235.9401 l
S
0 i
CM
150.7159 99.040062 m
142.72337 102.05994 l
142.70847 96.059959 l
h
150.7159 99.040062 m
f
0 J
0 j
1 0 0 -1 -959 1335 cm
1109.7159 1235.96 m
1101.7234 1232.9401 l
1101.7085 1238.9401 l
h
1109.7159 1235.96 m
S
1 J
1 j
0.60000002 i
1244.8804 1235.203 m
1314.1964 1235.203 l
S
0 i
CM
363.19641 99.796951 m
355.19641 102.79695 l
355.19641 96.796951 l
h
363.19641 99.796951 m
f
0 J
0 j
1 0 0 -1 -959 1335 cm
1322.1964 1235.203 m
1314.1964 1232.203 l
1314.1964 1238.203 l
h
1322.1964 1235.203 m
S
0.86666697 0.52941197 0.60784298 sc
CM
416.10883 111.84808 m
422.92557 104.91628 422.92557 93.67762 416.10883 86.745819 c
409.29211 79.81398 398.24002 79.81398 391.42331 86.745819 c
384.60654 93.67762 384.60654 104.91628 391.42331 111.84808 c
398.24002 118.77992 409.29211 118.77992 416.10883 111.84808 c
f
/Cs2 SC
0 sc
1 0 0 -1 -959 1335 cm
/F1.1[ 14 0 0 -14 0 0]sf
1354.9821 1241 m
(#$)[ 7.784000 0.000000 ] xS
964.5 1118.1315 m
(%&'\(\)*)[ 8.050000 8.036000 8.036000 4.928000 8.554000 0.000000 ] xS
1113.3871 1118.1315 m
(+&,,-.//0123&2\()[ 10.374000 8.036000 3.612000 3.612000 5.698000 9.590000 7.518000 7.518000 3.612000 8.554000 8.302000 12.684000 8.036000 8.302000 0.000000 ] xS
1330.1356 1109.4285 m
(40125\(6*&)[ 9.086000 3.612000 8.554000 8.302000 8.036000 4.928000 8.302000 5.194000 0.000000 ] xS
1336.0016 1126.8345 m
(7+&,,89:;)[ 4.144000 10.374000 8.036000 3.612000 3.612000 3.892000 4.130000 10.374000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
1401.4357 1235.203 m
1470.7517 1235.203 l
S
0 i
CM
519.75171 99.796951 m
511.75171 102.79695 l
511.75171 96.796951 l
h
519.75171 99.796951 m
f
0 J
0 j
1 0 0 -1 -959 1335 cm
1478.7517 1235.203 m
1470.7517 1232.203 l
1470.7517 1238.203 l
h
1478.7517 1235.203 m
S
0.86666697 0.52941197 0.60784298 sc
CM
572.66412 194.56052 m
579.4809 187.62871 579.4809 176.39005 572.66412 169.45825 c
565.84741 162.52641 554.79529 162.52641 547.97858 169.45825 c
541.1618 176.39005 541.1618 187.62871 547.97858 194.56052 c
554.79529 201.49236 565.84741 201.49236 572.66412 194.56052 c
f
/Cs2 SC
0 sc
1 0 0 -1 -959 1335 cm
1511.5374 1158.2876 m
(#$)[ 7.784000 0.000000 ] xS
/Cs1 SC
0.78823531 0.78823531 0.78823531 sc
CM
572.66412 151.94257 m
579.4809 145.01076 579.4809 133.77209 572.66412 126.8403 c
565.84741 119.90846 554.79529 119.90846 547.97858 126.8403 c
541.1618 133.77209 541.1618 145.01076 547.97858 151.94257 c
554.79529 158.8744 565.84741 158.8744 572.66412 151.94257 c
f
/Cs2 SC
0 sc
1 0 0 -1 -959 1335 cm
1511.5374 1200.9055 m
(#<)[ 7.784000 0.000000 ] xS
/Cs1 SC
0.78823531 0.78823531 0.78823531 sc
CM
572.66412 109.32461 m
579.4809 102.39281 579.4809 91.154144 572.66412 84.222343 c
565.84741 77.290504 554.79529 77.290504 547.97858 84.222343 c
541.1618 91.154144 541.1618 102.39281 547.97858 109.32461 c
554.79529 116.25645 565.84741 116.25645 572.66412 109.32461 c
f
/Cs2 SC
0 sc
1 0 0 -1 -959 1335 cm
1512.3213 1243.5234 m
(=)s
/Cs1 SC
0.78823531 0.78823531 0.78823531 sc
CM
572.66412 59.565224 m
579.4809 52.633423 579.4809 41.39476 572.66412 34.462959 c
565.84741 27.531124 554.79529 27.531124 547.97858 34.462959 c
541.1618 41.39476 541.1618 52.633423 547.97858 59.565224 c
554.79529 66.497063 565.84741 66.497063 572.66412 59.565224 c
f
/Cs2 SC
0 sc
1 0 0 -1 -959 1335 cm
1511.5374 1293.2828 m
(#<)[ 7.784000 0.000000 ] xS
1506.5359 1109.4285 m
(>0/\()[ 8.302000 3.612000 7.518000 0.000000 ] xS
1493.642 1126.8345 m
(7%.8?,&;)[ 4.144000 8.176000 9.590000 3.892000 8.554000 3.612000 8.036000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
