%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 775.000000 285.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.4 (Build 21F79) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 775 285
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 775 285
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /M put
dup 34 /e put
dup 35 /d put
dup 36 /i put
dup 37 /a put
dup 38 /space put
dup 39 /O put
dup 40 /b put
dup 41 /j put
dup 42 /c put
dup 43 /t put
dup 44 /s put
dup 45 /r put
dup 46 /y put
dup 47 /F put
dup 48 /u put
dup 49 /D put
dup 50 /p put
dup 51 /o put
dup 52 /n put
dup 53 /A put
dup 54 /S put
dup 55 /E put
dup 56 /I put
dup 57 /T put
dup 58 /P put
dup 59 /h put
dup 60 /L put
dup 61 /l put
dup 62 /one put
dup 63 /N put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






20001F00032BB8002010BA0031001F0020111239B800312F410500DA003100EA003100025D411B0009003100190031002900310039003100490031005900310069003100790031008900310099003100A9003100B9003100C90031000D5DB8000BDCB8000010B8002ADCB80015DCB8000B10B8003CDC00BA0036000600032BB8003610BA0025001A00032BB8002510B8000610B80000DCB8002510B8001FDC303137231E0333323E0235342E02272E0335343E0233321E0217332E0323220E0215141E0415140E0223222E02745502243C4E2B274F3F271D2F3D201E3C301F142027131529221602550322394A2C22453723324B584B3218252C141A312718A3304329120F263E2F2532211407070D131D1614190F06091421192F3F250F1123382732381F11152221181F10060A1727000100090000011D02A00017005BBA0001000200032BB8000110B8000210B80006D0B8000310B80007D0B8000210B80017DCB8000DD0B8000110B80014D000B800012FBA000F000C00032BB8000F10BA0004000500032BB8000410B80000D0B8000510B80015D030311335231523153311141E023B013523222E0235113335B65558580E1D2F21412714190E056702059B9B4BFEB7242C18094B030A120F01414B00000000010040FFF501EC020500180051BA000C000D00032BB8000C10BA0001000200032BB8000110B8000210B80016D0B800162FBA001700020001111239B8000210B80018D0B800182F00B800012FB8000C2FBA0008001300032BB8000810303121112311140E0223222635112311141E0233323637331501EC5513263927313855112A443339541B020205FEDC233B2C183830015EFEAC2A45321B2D305200000000010008FF3101EC020500160086B800142B00B800014558B800112F1BB9001100083E59B800014558B800152F1BB9001500083E59B800014558B800052F1BB9000500063E59BA000900050011111239B9000C0002F441110007000C0017000C0027000C0037000C0047000C0057000C0067000C0077000C00085D41050086000C0096000C00025DBA0014000500111112393031050E0323222627351E013332363F01033313331333010B0F1D232B1C0F1E0E0B1D0A1A230923CD609702915A452634210F04054E05071917570202FE5901A7000001000000010000C051B47A5F0F3CF5011103E800000000B643600000000000DC4364C8FC49FE1F07C304350000000900020000000000000001000003B8FF2B001C08B1FC49FE8007C300010000000000000000000000000000002001F4003301160000022C00570288FFFA02C0004E0263004E023E004E01030052022C004E0367005002D2004D02F800260288004E02880025023E00020219002402510043021900240251002402190024022C004000DE004500DEFFF3
00DE0045022C0040023E002402510043014D003D01F4001F013B0009022C004001F40008000000480048006E009E010601380164017E019E01E8022802C8033003C403EA04F4058C05FE069C07040756078007BE07D8082008C0095809860A2A0A7C0ACC0B3600000001000000200096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 32 dict dup begin
/.notdef 0 def
/space 1 def
/one 2 def
/A 3 def
/D 4 def
/E 5 def
/F 6 def
/I 7 def
/L 8 def
/M 9 def
/N 10 def
/O 11 def
/P 12 def
/S 13 def
/T 14 def
/a 15 def
/b 16 def
/c 17 def
/d 18 def
/e 19 def
/h 20 def
/i 21 def
/j 22 def
/l 23 def
/n 24 def
/o 25 def
/p 26 def
/r 27 def
/s 28 def
/t 29 def
/u 30 def
/y 31 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28036C9F7C25418575A9E4FF5238FB0A96C8EB4A71AB1BFC326B832B3CAE7389AB353E1CB8778BB6E199C572CB0E887D6D181024E8CEE3C62B756F5C59C95F356D9FA6EEFECCAF27C069F3C0560BE109D25D24FF2094B2C743A76E2AF23DE2B4AD6415127B1DED63460273B86FA28B57AC0E9BE2A508426604D9A6C12225E1E2F57610D4B0428A084431A2B9EFCA9B6B01FF46048C4DD7F1673D36C11A35936F142A742DB13ADB1B1835A22CABF752F54C0252FA6DCE2D5AEA0649B5D12497A18C778132DAED6655354936969C69722ACFC6628905DD52B6ADA91BF2A4917F2B52724F54F7150C8CD782108B570E9C78BA17FDA62AFA789EAE72CE3225F18C91A7BB4398C9BBB4D2BE882E782C88492CE199272E8F6930B5D6905867D2A92CBACBD4E67C4954EE262114A0311AB2927F904BAA42926A1D2C764DAC22516C2A8ECEB102043628F7356D8AAE0C510800D20740952AEABF9521214D3D42734BFBB3FEAF4710F55280FE8443F2CAD8423EC44F5CD616CDEB0E23B459274FD3B24EA1FD4A79616349024ADE23E3A72D4BEE6523DCED27DAF6DD782327CE7A2BB663DFEAA98022BCB2E9F9A85E4948CE86973FD8E11E9A7BB4FA43ECB2CDB989E83B55BCBA3B26EC0E36A070DBE95965190CD89C4D237DF462FFE25B8914412A1F843CE461EA683CE48EF1D55A900495ED4928B9763940DA81A8B365DC44F7F55AB6A1B40B757ABDD59AD01E2EBB56514BD8131C376995415965A3AB5E39F535BED93FF6C290011


22AE70722F4BC457603277E36E186C5883779A4C83ADB922DBCF475AD3D478E9BCB9BA3CB7F45C99E878A11C7D23C4F188F8A5B9417EF6FD8AA326A34F00246A52CE5C2FFDFBD4DD6B522DFABB6CA45A2D87CAA5D493A691D6C9D9AD554A4B07C91B39B680148F32298E2892C2FD208896FAD2D174BB4E7883609541E3F813B6646D819D123D1D737F022998A60B3D3E2CB869E997BB98C4EF911305F23424DCD5EF566E79278BD58C4C1DD0DA4915149C34D463F2AE36E10DCCC8474FF5AEBEC54BE2BD3276EB49AAA999801873A8D00BBF1444A35DA2C3C77639506FF33C679B4051553BE46349959BAE6E6C2E440A483D3A2CCA0B6BDA3447F83F9F2DE22AF54411BAFC4089FA29370D1723562B60CDE76CCA2889C5912571FFDA31DCD6994F6619A0EDD2762F9EE6E77B529229E2EB0BD5C3406057876FEC44F58C7A9223933F351338D12F43672BD768D9709D6BCAC5630AD07C74C183A81D40683F9897746C77FD714281083AEC890448057FC39F50B302DA741334643F31E1F5AD41CE96A6CCCB198BB58DA8BFE3945A830DA5802480DF8440CEBB2D65F144B0727B0E32362292EA902F6BEF20565124CC21DB711B5C43730B1B0E4DA70CBAB34EC7953C292CB38F7C22F0DEE042D7498193BB13AD6A0CFECEBFBC90EE7F137D20DAADE9915697CFEF5160480698FB61E4F948DE23A08EB9AEA6114418CABE1B7619C00A7BE06C2CCC6C575EF95B54C3801F2A7743DC16A45F7D3421F8DE0CD50F821F8807C18CDF645306CA5C870FCF065CCE1CE872F9D34A00565B3A52686943903A3786795967ED8339FB84F7EC63F5B820B37EB50870AD819904CCC78B5F26F5F984237A6AB4FE058FDFCD83BFF5B931FCE384E277F46741634D13312C2FFD47666C0AB1F955B259956EBDD5490979CCF0025530C51E43740E67F75FDBEE984E482308354D99A33A814791D7D8DE1BCFAD202B57F9D3FAB564A89CAC5787710E47EBC3F29B945F82E7353488AB3E8CB805519D61D827C87A6A755C12AFF2F0F14253CCEE5A9BF4915BC45B522FCA67184B3F7DA5B706B894DE64DE8ECA3EC7FD4E33710F16BF42F5DFAF57579CFF1C7FEF1A08DE13A08990BFD48671621573E0CF86DE851C91DC4EDDCB44D699D2557BA9C4C999812F88D0EA17234E55227970036B1596D96E23D49B25686DCFD8A5003243772D23848194F7D2402E4E8924E72F1D20BF5F7DE1899BE17CDED726AB505074AFB870E58C21667BEE59297721027066D8CA12056F831BA192845E1610AED5A610EB59E6ACC5314D6CF592C9C290ECBB5A9F2059B2852BD2C5AA5D69D1252473AC28232EAE32B31BC49162A19467BB4E14A46F07EC19A0A07A3021C13397D6B5EAD848367F96E52879478885AFA9264C3371C11C3FC3E9DCAF594C044698F5E2D2721F9BC73F4C5BF5B014B5AFDCA9

0B8C00522DC3DD74D9FDF7F20BDB911C1DE497AC1C9D0363DF3CAFFB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /one put
dup 34 /N put
dup 35 /M put
dup 36 /e put
dup 37 /t put
dup 38 /I put
dup 39 /D put
dup 40 /O put
dup 41 /b put
dup 42 /j put
dup 43 /s put
dup 44 /A put
dup 45 /ellipsis put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 14 dict dup begin
/.notdef 0 def
/one 1 def
/A 2 def
/D 3 def
/I 4 def
/M 5 def
/N 6 def
/O 7 def
/b 8 def
/e 9 def
/j 10 def
/s 11 def
/t 12 def
/ellipsis 13 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4124212 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28294CAE92D762FD8B82A1602382F6A305C4103202DCDC49BBF7EC6788C6D476616358B30B24870870A365FE91B2807305A212FD43AB124BF1D8A6A45399D779D8F699E08A3088D22F03697F45AD6CB366E4C9E981047255C7CE251C0B95373FD3D245635C007E9DC0B76EEAFD08107859C4252116CB5C3D3D4E87B40B03EB87E1B21A824DD42F15C8ACC6894747BC5DAE6621140632AB18FCFBF91CFCDB5B3247195E42E4EC847C25BCC1A7FBC6AE118E0CADADC80707FF9621F8D618B625EDA389DEC3CAA8E8ECE9D775D406B22655C93296AD64C3310D45ADF1E9752CD22E775FC290862D595162844AE90F6A1D88A72F5AF3E0DE2F491C31D3C617C529B42C8594396389E02C9863C940A78FBF29A27D5AD3F405640CBB6BE6FDE09199D4592AB5E5FA5E66160C20E99B6982CF0E95FE4673CC42365D678C4E94DA5206C5AB9B8C83D30BC46E9C848F09B0B0BE8F0C936EC3BD07175FC7F17B92D4F1F76DBB7338C51DD118C874DCCE577B85C66B28AE1D34DD1A01E8FCAC182D850F4F78DB85E206041DA22A063ABB0913B03E4D9195B1199532F9397BD2905AB166F1CCACB48DA6679D50DD85A9EA5A0F6C7321F3A2B7FC1FBBD69CA6FAF58019B1B5F4CCFD5BA600678E023AB10079B99B036B53CBDC9EFC76FC7043D71D90834BB6559273176C5CD02FEAF7AC8E43AAF5531B9B500D03E04574A34747C8A4DAE116A4E0A9E25362540688DC70FC90018CC1612CF77E90D614D84E728026480255594BC31ACC5A0

C81D96E7826A71857832E1536712D7D2F6EBE1CCD15C5CD560B2F27E9C99D466BD6BC16CEC27B689E459F35A5DEF7E55E389D254982C522C0467DF20189E75A0B5B0B1DE8955AED64C5F49DF4998F81B3F1D02BADB8C897EA3A74BEC9DB3E9F627F78370E97C523A33474991755FA44D998EC82CA02292D7848A3C174AC32A42DD03BC3FE93E964EA429636A9AF1866DF45C96106B05953377C41014DDF422869546645E6A5EEC9DA5D58E28A38766EAE817208580DE8CD6ECA6DF9CBC3F088C8D63FD8793360A586EFF13357E38965DEA292B0212F176DEAD4420DF35B23A690C0FD697E2207BAC63D5E2A6D0B9AEF3502646D5E58480687FA870109B70CE64CB638536E9B688822010BD67DADAB26C53A56CB01C5F4FF084E754251A62B6031B5FA1C40C166C30400FC41FE60B4360B01909524CE4413730A28FFB3842A441CBB6283DBF5E2CB1A47681221EA83755F411A4A23D244F15A4AA725AF71D602BFF9DD69E7B8F7ADBEBFCAA06A63223BE01A66DA19468F7278AD880C487967584CD46929BF605C3AB35AFAB04F2BDC179E7F4F3035B6AEE5653EC5ABB8341E0B4ADC0268FBDA22B790E176CEA6AF9CDAAC8D338
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
q
0 0 775 285 rc
19.625 193.32596 m
178.875 193.32596 l
178.875 159.82596 l
19.625 159.82596 l
h
19.625 193.32596 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
/F1.1[ 14 0 0 -14 0 0]sf
598.23602 1207.228 m
(!"#$%&'\(\)"*+)[ 12.194000 7.518000 8.302000 3.108000 7.518000 3.892000 10.640000 8.302000 3.108000 7.518000 7.518000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
389.5 197.5 m
548.75 197.5 l
548.75 164 l
389.5 164 l
h
389.5 197.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
980.43103 1203.054 m
(!"+%#%+%)[ 12.194000 7.518000 4.410000 7.518000 8.302000 7.518000 4.410000 0.000000 ] xS
/Cs1 SC
0.86666697 0.52941197 0.60784298 sc
CM
279.92551 200.82596 m
337.92551 176.57596 l
279.92551 152.32596 l
221.92551 176.57596 l
h
279.92551 200.82596 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
/F1.1[ 12 0 0 -12 0 0]sf
787.18951 1205.771 m
(#",*-$\("#&\(.)[ 7.116000 6.444000 6.000000 6.444000 3.996000 2.664000 7.116000 6.444000 7.116000 3.336000 7.116000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
391.79849 104 m
490.25 104 l
490.25 70.5 l
391.79849 70.5 l
h
391.79849 104 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
/F1.1[ 14 0 0 -14 0 0]sf
958.42725 1296.554 m
(/"%+0-")[ 8.036000 7.518000 7.518000 4.410000 7.784000 4.410000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
240.5625 104 m
338.0625 104 l
338.0625 70.5 l
240.5625 70.5 l
h
240.5625 104 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
794.6615 1296.554 m
(1",*-$2+$34)[ 9.856000 7.518000 7.000000 7.518000 4.662000 3.108000 8.302000 4.410000 3.108000 8.036000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
982.02423 1275 m
982.02423 1254.0164 l
1010.125 1254.0164 l
1010.125 1224.9 l
S
0 J
0 j
0 i
1010.125 1216.9 m
1007.125 1224.9 l
1013.125 1224.9 l
h
1010.125 1216.9 m
S
1 J
1 j
0.60000002 i
854.6875 1275 m
854.6875 1245 l
957.04169 1245 l
957.04169 1224.9 l
S
0 J
0 j
0 i
957.04169 1216.9 m
954.04169 1224.9 l
960.04169 1224.9 l
h
957.04169 1216.9 m
S
1 J
1 j
0.60000002 i
719.875 1202.4241 m
762.92548 1202.4241 l
S
930.5 1198.25 m
874.0824 1200.3992 l
S
0 i
0.64705902 0.84313703 0.82352901 sc
CM
593 104 m
690.5 104 l
690.5 70.5 l
593 70.5 l
h
593 104 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
1148.7791 1296.554 m
(5443+%+$34)[ 9.072000 7.784000 7.784000 8.036000 4.410000 7.518000 4.410000 3.108000 8.036000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
1182.75 1275 m
1182.75 1245 l
1063.2084 1245 l
1063.2084 1224.9 l
S
0 J
0 j
0 i
1063.2084 1216.9 m
1060.2084 1224.9 l
1066.2084 1224.9 l
h
1063.2084 1216.9 m
S
/Cs2 SC
0 sc
/F2.1[ 12 0 0 -12 0 0]sf
724.875 1195.1741 m
(!)s
910.30402 1195.1741 m
(")s
/Cs1 SC
0.86666697 0.52941197 0.60784298 sc
CM
540.69543 262.55603 m
551.43488 257.77213 551.43488 250.01585 540.69543 245.23193 c
529.95599 240.448 512.54401 240.448 501.8046 245.23193 c
491.06512 250.01585 491.06512 257.77213 501.8046 262.55603 c
512.54401 267.34 529.95599 267.34 540.69543 262.55603 c
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
/F1.1[ 12 0 0 -12 0 0]sf
1049.3621 1128.938 m
(6+%-+)[ 7.776000 3.780000 6.444000 3.996000 0.000000 ] xS
/Cs1 SC
0.86666697 0.52941197 0.60784298 sc
CM
603.44543 248.02599 m
614.18488 243.24207 614.18488 235.48581 603.44543 230.70189 c
592.70599 225.91794 575.29401 225.91794 564.55457 230.70189 c
553.81512 235.48581 553.81512 243.24207 564.55457 248.02599 c
575.29401 252.80994 592.70599 252.80994 603.44543 248.02599 c
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
1114.4399 1143.468 m
(74#)[ 7.332000 6.672000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
1109.8889 1149.8738 m
1063.2084 1181.5 l
S
1056.8022 1137.1146 m
1036.6666 1181.5 l
S
0 i
0.86666697 0.52941197 0.60784298 sc
CM
395.84708 247.02599 m
408.05099 242.24207 408.05099 234.48581 395.84708 229.70189 c
383.64319 224.91794 363.85681 224.91794 351.65292 229.70189 c
339.44901 234.48581 339.44901 242.24207 351.65292 247.02599 c
363.85681 251.80994 383.64319 251.80994 395.84708 247.02599 c
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
/F2.1[ 12 0 0 -12 0 0]sf
897.53601 1144.962 m
(#$%&')[ 10.884000 6.888000 4.224000 3.540000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
957.04169 1181.5 m
926.50104 1151.9904 l
S
0 i
0.86666697 0.52941197 0.60784298 sc
CM
468.8204 262.55603 m
479.55988 257.77213 479.55988 250.01585 468.8204 245.23193 c
458.08099 240.448 440.66901 240.448 429.9296 245.23193 c
419.19012 250.01585 419.19012 257.77213 429.9296 262.55603 c
440.66901 267.34 458.08099 267.34 468.8204 262.55603 c
f
0 J
0 j
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
975.14697 1130.5 m
990.22699 1130.5 l
S
994.13702 1130.5 m
1004.603 1130.5 l
S
/F1.1[ 12 0 0 -12 0 0]sf
975.14697 1128.938 m
('\(\)81)[ 9.120000 7.116000 2.664000 3.108000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
1010.125 1181.5 m
994.61414 1137.2104 l
S
0 i
0.86666697 0.52941197 0.60784298 sc
CM
45.471756 247.17244 m
55.8741 242.58377 55.8741 235.1441 45.471756 230.55544 c
35.069466 225.96677 18.204035 225.96677 7.8017445 230.55544 c
-2.6005993 235.1441 -2.6005993 242.58377 7.8017445 247.17244 c
18.204035 251.76111 35.069466 251.76111 45.471756 247.17244 c
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
/F2.1[ 12 0 0 -12 0 0]sf
551.41876 1144.462 m
(\(\)*&')[ 9.336000 7.332000 3.336000 3.540000 0.000000 ] xS
/Cs1 SC
0.86666697 0.52941197 0.60784298 sc
CM
121.34706 280.43103 m
133.55099 275.64713 133.55099 267.89087 121.34706 263.10693 c
109.14319 258.323 89.356812 258.323 77.152939 263.10693 c
64.948997 267.89087 64.948997 275.64713 77.152939 280.43103 c
89.356812 285.215 109.14319 285.215 121.34706 280.43103 c
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
/F1.1[ 12 0 0 -12 0 0]sf
627.69202 1111.063 m
(9.2")[ 5.556000 6.000000 7.116000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
575.70453 1151.3367 m
600.4375 1185.6741 l
S
640.25 1119.481 m
640.25 1185.6741 l
S
0 i
0.86666697 0.52941197 0.60784298 sc
CM
182.94542 247.02599 m
193.68488 242.24207 193.68488 234.48581 182.94542 229.70189 c
172.20601 224.91794 154.79399 224.91794 144.05458 229.70189 c
133.31512 234.48581 133.31512 242.24207 144.05458 247.02599 c
154.79399 251.80994 172.20601 251.80994 182.94542 247.02599 c
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
692.164 1144.468 m
(:%+;)[ 7.776000 6.444000 3.780000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
698.03827 1152.5449 m
680.0625 1185.6741 l
S
0 i
0.86666697 0.52941197 0.60784298 sc
CM
560.17548 95.558495 m
573.94153 90.969841 573.94153 83.530159 560.17548 78.941505 c
546.40955 74.352821 524.09045 74.352821 510.32452 78.941505 c
496.55847 83.530159 496.55847 90.969841 510.32452 95.558495 c
524.09045 100.14718 546.40955 100.14718 560.17548 95.558495 c
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
1056.024 1295.582 m
(/"%+0-")[ 6.888000 6.444000 6.444000 3.780000 6.672000 3.780000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
1031.25 1291.75 m
1041 1291.75 l
S
0 i
0.86666697 0.52941197 0.60784298 sc
CM
764.17548 95.558495 m
777.94153 90.969841 777.94153 83.530159 764.17548 78.941505 c
750.40955 74.352821 728.09045 74.352821 714.32452 78.941505 c
700.55847 83.530159 700.55847 90.969841 714.32452 95.558495 c
728.09045 100.14718 750.40955 100.14718 764.17548 95.558495 c
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
1265.58 1295.582 m
(<%\("=)[ 6.672000 6.444000 7.116000 6.444000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
1231.5 1291.75 m
1245 1291.75 l
S
0 i
0.86666697 0.52941197 0.60784298 sc
CM
213.4791 95.558495 m
231.34566 90.969841 231.34566 83.530159 213.4791 78.941505 c
195.61263 74.352821 166.64537 74.352821 148.7789 78.941505 c
130.91234 83.530159 130.91234 90.969841 148.7789 95.558495 c
166.64537 100.14718 195.61263 100.14718 213.4791 95.558495 c
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
691.57098 1295.582 m
(1",*-$2+$34)[ 8.448000 6.444000 6.000000 6.444000 3.996000 2.664000 7.116000 3.780000 2.664000 6.888000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
781.5625 1291.75 m
767.87903 1291.75 l
S
0 i
1 1 1 sc
CM
352.75 145.5 m
380.95401 145.5 l
380.95401 120.15192 l
352.75 120.15192 l
h
352.75 145.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
/F2.1[ 12 0 0 -12 0 0]sf
898.75 1250.5 m
(&+,)[ 3.540000 6.444000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
455.02301 146.67404 m
483.22699 146.67404 l
483.22699 121.32596 l
455.02301 121.32596 l
h
455.02301 146.67404 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
1001.023 1249.3259 m
(&+,)[ 3.540000 6.444000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
352.75 33.727875 m
423.25 33.727875 l
423.25 0.22787476 l
352.75 0.22787476 l
h
352.75 33.727875 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
/F1.1[ 14 0 0 -14 0 0]sf
899.565 1366.8262 m
(/"%+0-"&>)[ 8.036000 7.518000 7.518000 4.410000 7.784000 4.410000 7.518000 3.892000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
455.02301 33.727875 m
531.05426 33.727875 l
531.05426 0.22787476 l
455.02301 0.22787476 l
h
455.02301 33.727875 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
1003.4417 1366.8262 m
(/"%+0-"&?)[ 8.036000 7.518000 7.518000 4.410000 7.784000 4.410000 7.518000 3.892000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
929 1345.2721 m
929 1326.8861 l
957.41138 1326.8861 l
957.41138 1318.4 l
S
0 J
0 j
0 i
957.41138 1310.4 m
954.41138 1318.4 l
960.41138 1318.4 l
h
957.41138 1310.4 m
S
1 J
1 j
0.60000002 i
1034.0386 1345.2721 m
1034.0386 1326.8861 l
982.02423 1326.8861 l
982.02423 1318.4 l
S
0 J
0 j
0 i
982.02423 1310.4 m
979.02423 1318.4 l
985.02423 1318.4 l
h
982.02423 1310.4 m
S
1 1 1 sc
CM
556.5 145.5 m
584.70398 145.5 l
584.70398 120.15192 l
556.5 120.15192 l
h
556.5 145.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
/F2.1[ 12 0 0 -12 0 0]sf
1102.5 1250.5 m
(&+,)[ 3.540000 6.444000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
383.64801 64.787979 m
411.85199 64.787979 l
411.85199 39.439896 l
383.64801 39.439896 l
h
383.64801 64.787979 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
929.64801 1331.212 m
(&+,)[ 3.540000 6.444000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
455.02301 64.787979 m
483.22699 64.787979 l
483.22699 39.439896 l
455.02301 39.439896 l
h
455.02301 64.787979 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
1001.023 1331.212 m
(&+,)[ 3.540000 6.444000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
109.1735 33.727875 m
207.625 33.727875 l
207.625 0.22787476 l
109.1735 0.22787476 l
h
109.1735 33.727875 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
/F1.1[ 14 0 0 -14 0 0]sf
657.91028 1366.8262 m
(1",*-$2+$34&>)[ 9.856000 7.518000 7.000000 7.518000 4.662000 3.108000 8.302000 4.410000 3.108000 8.036000 7.784000 3.892000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
236.118 33.727875 m
342.50699 33.727875 l
342.50699 0.22787476 l
236.118 0.22787476 l
h
236.118 33.727875 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
787.6615 1366.8262 m
(1",*-$2+$34&?)[ 9.856000 7.518000 7.000000 7.518000 4.662000 3.108000 8.302000 4.410000 3.108000 8.036000 7.784000 3.892000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
699.39923 1345.2721 m
699.39923 1326.8861 l
805.9375 1326.8861 l
805.9375 1318.4 l
S
0 J
0 j
0 i
805.9375 1310.4 m
802.9375 1318.4 l
808.9375 1318.4 l
h
805.9375 1310.4 m
S
1 J
1 j
0.60000002 i
856.90973 1345.2721 m
856.90973 1326.8861 l
830.3125 1326.8861 l
830.3125 1318.4 l
S
0 J
0 j
0 i
830.3125 1310.4 m
827.3125 1318.4 l
833.3125 1318.4 l
h
830.3125 1310.4 m
S
1 1 1 sc
CM
204.44099 64.787979 m
232.645 64.787979 l
232.645 39.439896 l
204.44099 39.439896 l
h
204.44099 64.787979 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
/F2.1[ 12 0 0 -12 0 0]sf
750.44098 1331.212 m
(&+,)[ 3.540000 6.444000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
299.5 64.787979 m
327.70401 64.787979 l
327.70401 39.439896 l
299.5 39.439896 l
h
299.5 64.787979 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
845.5 1331.212 m
(&+,)[ 3.540000 6.444000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
428.13651 29.651917 m
450.13651 29.651917 l
450.13651 4.303833 l
428.13651 4.303833 l
h
428.13651 29.651917 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
974.13647 1366.3481 m
(-)s
/Cs1 SC
1 1 1 sc
CM
210.207 29.651917 m
232.207 29.651917 l
232.207 4.303833 l
210.207 4.303833 l
h
210.207 29.651917 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
756.20697 1366.3481 m
(-)s
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
543.79303 33.727875 m
642.24451 33.727875 l
642.24451 0.22787476 l
543.79303 0.22787476 l
h
543.79303 33.727875 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
/F1.1[ 14 0 0 -14 0 0]sf
1094.2097 1366.8262 m
(5443+%+$34&>)[ 9.072000 7.784000 7.784000 8.036000 4.410000 7.518000 4.410000 3.108000 8.036000 7.784000 3.892000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
676.04852 33.727875 m
774.5 33.727875 l
774.5 0.22787476 l
676.04852 0.22787476 l
h
676.04852 33.727875 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
1225.3032 1366.8262 m
(5443+%+$34&?)[ 9.072000 7.784000 7.784000 8.036000 4.410000 7.518000 4.410000 3.108000 8.036000 7.784000 3.892000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
648.14648 29.651917 m
670.14648 29.651917 l
670.14648 4.303833 l
648.14648 4.303833 l
h
648.14648 29.651917 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
/F2.1[ 12 0 0 -12 0 0]sf
1194.1465 1366.3481 m
(-)s
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
1134.0188 1345.2721 m
1134.0188 1326.8861 l
1158.375 1326.8861 l
1158.375 1318.4 l
S
0 J
0 j
0 i
1158.375 1310.4 m
1155.375 1318.4 l
1161.375 1318.4 l
h
1158.375 1310.4 m
S
1 J
1 j
0.60000002 i
1266.2743 1345.2721 m
1266.2743 1326.8861 l
1207.125 1326.8861 l
1207.125 1318.4 l
S
0 J
0 j
0 i
1207.125 1310.4 m
1204.125 1318.4 l
1210.125 1318.4 l
h
1207.125 1310.4 m
S
1 1 1 sc
CM
583.29602 64.787979 m
611.5 64.787979 l
611.5 39.439896 l
583.29602 39.439896 l
h
583.29602 64.787979 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
1129.296 1331.212 m
(&+,)[ 3.540000 6.444000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
683 64.787979 m
711.20398 64.787979 l
711.20398 39.439896 l
683 39.439896 l
h
683 64.787979 m
f
/Cs2 SC
0 sc
1 0 0 -1 -541 1379 cm
1229 1331.212 m
(&+,)[ 3.540000 6.444000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
