%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 859.000000 328.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.4 (Build 21F79) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 859 328
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 859 328
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /M put
dup 34 /e put
dup 35 /d put
dup 36 /i put
dup 37 /a put
dup 38 /space put
dup 39 /O put
dup 40 /b put
dup 41 /j put
dup 42 /c put
dup 43 /t put
dup 44 /P put
dup 45 /h put
dup 46 /S put
dup 47 /g put
dup 48 /m put
dup 49 /n put
dup 50 /F put
dup 51 /u put
dup 52 /r put
dup 53 /E put
dup 54 /I put
dup 55 /D put
dup 56 /V put
dup 57 /l put
dup 58 /K put
dup 59 /y put
dup 60 /s put
dup 61 /one put
dup 62 /two put
dup 63 /N put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<




69001900790019008900190099001900A9001900B9001900C90019000D5DB8001810B80023D0B800232F00B800002FBA001E000900032BB8001E10BA0013002800032BB8001310303113113335331E0333323E0235342E0223220607231101140E0223222E0235343E0233321E024355020E292E2F133B593B1D1E3B593C365A1502013B10243B2C2C3E271211263C2B293D271302CAFD3645171F12082A49623737624B2C272B010BFE3D264838222136472624463722203645000000010024FFF501FA021100230079BA001C000B00032BB8001C10411B0006001C0016001C0026001C0036001C0046001C0056001C0066001C0076001C0086001C0096001C00A6001C00B6001C00C6001C000D5D410500D5001C00E5001C00025D00BA0017001000032BB8001710BA0006002100032BB8000610B80000DCB8001010B80014DC303101332E0323220E0215141E0233323637230E0123222E0235343E02333216019F5805263B4D2C3D5C3D1E1F3D5B3B63730E5708473F283A241110253E2E3640015F2E432C152B4B653A3A61462668603C4220354424274938223600000000020024FFF5020E02CA0013002C00BBB8002D2FBA0015001600032BB8001510B8002D10B80022D0B800222FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8001610B8000AD0B8000A2FB8001610B80018D0B800182FB8001610B8002AD0B8002A2FBA002B00220015111239B8001610B8002CD000B800152FBA000F002700032BB8000F10BA001D000500032BB8001D10303137343E0233321E0215140E0223222E0205112311232E0323220E0215141E023332363733157E10243C2B2C3E271211263C2B293D2713019055020E292E2E143B593B1D1E3B593C365A1502FE264838222136472624463722203645DA02CAFEF6171F13082B49623737624A2C262B46000000020024FFF502030211000A0026005BBA0014001F00032BB8001410BA0015000000032BB8001510B8001410B80001D0B8000010B8000CD0B8000C2F00BA000F002400032BB8000F10BA001A000600032BB8001A10BA0001001400032BB8000110B8002410B8000CDC303101213E0333321E0217230E0123222E023721362E0223220E02151E0333323601A7FED702162635212035271754540B45362A3E28120101830215375B4535594124021F3E5B3E587401341E352817172736AE33321C2F3D222F6858392848623B3B6448285800020024FF2F01FE02110028003C00BDBA002E000C00032BB8002E10BA0001000200032BB8000110B8000210B80038D0B800382FBA000400020038111239B8000210B80015D0411B0006002E0016002E0026002E



00>] def
/CharStrings 32 dict dup begin
/.notdef 0 def
/space 1 def
/one 2 def
/two 3 def
/D 4 def
/E 5 def
/F 6 def
/I 7 def
/K 8 def
/M 9 def
/N 10 def
/O 11 def
/P 12 def
/S 13 def
/V 14 def
/a 15 def
/b 16 def
/c 17 def
/d 18 def
/e 19 def
/g 20 def
/h 21 def
/i 22 def
/j 23 def
/l 24 def
/m 25 def
/n 26 def
/r 27 def
/s 28 def
/t 29 def
/u 30 def
/y 31 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28036C9F7C25418575A9E4FF5238FB0A96C8EB4A71AB1BFC326B832B3CAE7389AB353E1CB8778BB6E199C572CB0E887D6D181024E8CEE3C62B756F5C59C95F356D9FA6EEFECCAF27C069F3C0560BE109D25D24FF2094B2C743A76E2AF23DE2B4AD6415127B1DED63460273B86FA28B57AC0E9BE2A508426604D9A6C12225E1E2F57610D4B0428A084431A2B9EFCA9B6B01FF46048C4DD7F1673D36C11A35936F142A742DB13ADB1B1836F86230AF85CCB6060387030A96B745B2CED780D503DAF46973C7C506DDC46CC90010D7783D2E83C55C17217209F6EF637C23FF47648A125B1F0CD0CA4514F42F3C64F824A7E1D1A60106980029FF9389AB5164D83968FFFF32DA337500762F0A635FB71DFB5EEBA52AFE59919D188C52D333DCE34F2505D7E2D60A3C60A76AF271AE8D1000744C7092E941E89995CD08DEE14BDFD5710865252A3D120D216AC89812FEF65511FE111434C971AE1FDAEE63CF98CE6CD3A436C4B459C3AF3854B83E5EB8FB91BB47BDFC03A24AC2D3D2FAF93559C08B42AC90FBD7D4DE52CFB262B8B61E79FD359F2EAE5B93D80178AFEEB81048FB7CD4FD7503BA3944F793D7B3C8EF88AC1479FF6B403773725CA7CCF3F1E31C85585E5860C8D57E72B1CD2C78CA8FE517A4487A34CC6EEC0415662254D87005D624F232BAEC875CF1C8340A718B43D24BDF8582C22311D3FA42F069755E38E2363860C74E729FCDC90002B223CDA8F8223FF808A5B663F69428F52AE404D5946147D820AFAEA0D
5F54A132C0A8980E86D6DEFE446FC541D4A1A329F29BA52DB9B6896EECBF953D149BAD46EF71D2B30FE868A72C0AB740F4B45490A6B26F843213F9FFDA92D0F795D589C5185871D3813EDEF8A6AA0712278E7BDD4F76730A348AEBF142A2E1063997571EACC339CAEB9978745B5D622759E2EB6565D9B7AF293036A81E398EC81B1A52B69F2BC1636DB8F3FECBC3D308417F13EC8E885BF2F7FF5F80D9C195AEB0881881D8D95214B964E056433784CC473F12618EA0CAFD74930EF1BDB8DFF98A03BEE40AF7780211F447ECB26FAEE6659E2D2E33FF200A94F2F89324D39BE0E27E5F9D7A69DBEEE3A14A3EA68114987C75FE32355B1105E814A14992720859F6FB5C440DA4F237DBE7816D0D316612B4FA4E80C9FA330695F51EFAF9ADA4733C1CDA196415741A929E2E7945053D56A266FABD1337FA1F8992841E021E213D053A82B55F54C3E1C4D44E1A4AD289633645722D406B46F8AD1AE38817A5CB843F85F20E2188EA6D76A1F4D6E11F4225E2B65BA7E18579CC7755F2B76B0A1C41CDDEF68354C2D8FF57F9CDDAA7F1FE78A1B2779FD6C7DD0A1527E34EFF6D9883D5237B5D5A6380937E6CB739266D112A4BF080FB81A2D2C2836308772B32B37703483A0B16722D9B6AB7F77A3B85989F76CBA362D6BA3587448691E6918102F24121C15D6C7F98FE8886B328A9CBC7344DD542EB58B2DB6B22A8557F6557B629E0C93191B7A6A38A108255E9DF08E1EE5EEBB40D7A538877890DC134E80D22EE126032DA76C70ACDAF62CC9BDA325DCC6E2D9787CF1C9263F96BDC6AC9F3DBE21944268B07BF81BF52650E5DCB45BE5FDB36A07AA38CE966F35D9E99EEA5BE91C38EA9837CACC7B1ECD72EE57993F753B6013998459A5912EFC7F11D123482EA2E107F6FE2C6A714C6CBCA4B8D35F41F2218CA9F225B65CD98CAA11C7477B030A238E39BB8215EE1EDF3889AF9A45895636FB3209AA266D1060336A9136A65B80338EE3FC65EBCFD68D4C5C275A044240447398DF0AE38BC2EAD7D74E47DC3F2C8C9DE0A599ED324F41A91C9C152258D6EBB7319F1E1550F32CC77C88E81E518C7049B6143365F88A851D05DA59D7DEF8FC43B20ECA438429A1923EA1745813C4AF8312163A4125895CA16314CA10FC97000E7D3D7F778D9A8C7200F74BA9815329979806829B6F5BE7FCD814FCF3A636C42B552B45A1468764BDF2D7E3FD8BFFC0513F032DC03EF29279D0DDB5EB2C389FFBB8C2D2E2F7CDBAABC5907D5FB470398246E0ADE7A5985C25D86364E20CA3CE95EC8FEEF304561FE0CA403AA769627CD43A054FBB04F6EF6887C031B167315242529E567C7169C972BEBF588F07DB9443A4A6E90621057E7F21F9172C3816E63781E996BAC82A6DF06848FC0023A464E407D8E1BF8871A134EC012109ACADA7DD2C1008599A855D62CAA791315DB
A2EDAB8AA15B4D59032E28DF71732DBFAA23F145749B18B27CE1EA72BDCAC328879AC4909B1ED7057BE28F2E61B5713B8606B946A34C98BE91839560A080C535C4B5757D1D18FACD018D993D7949693B6474D8348ABF07678FE2BC0455AE79E51BA7ABAF245F856ACFDA43F97C14DA5FC705D9590BB25DAD86E2D81365F8E1A2158B6E81C21A1CF5720C06CDDE9A144668A37F22503B0B18E9F3BA70148054CA89FAC6EA100316DDE6B80BF5517CC8DF3E8C130CBE480DC06AFE579A9189C028541A5B65F3CCFF217D76E088B1572D0D9F3710FFF92A9B023412F4FCAA1CFB6ED81D5924260FE8779FAC762C33E7D131462865797FE1D4135B649792A8DD60B52E738094ECB598EB8EA077B7AFC8737AC582B579414CD570A9939B3E30303AD68D2381607E382C5EC6E074695EC7553DDF5218DDF9C39AD3A7CF561719D68AD789F5E510C7D08DB96C63AE1B231B4A4986E570DFDCB40FEA8BE146E2D8BE340F26AFAF761E0111E039CA4CA2A984D5D8FC5BFE5B8826B1CEE3A8BAF91CA566726CA819A8D7C2EDC51C107768F737450B959D1279EFA6D5C30C5D87FFF1E43A8C44327E60A8B49C24A5F6C075B7DDF2C6267E479AE60F9F88B147A455D8B58DC16AC8A8E21FC7B1B44315F6E868459842507328025ADEEDBA644A8814FBC2B35CE7D0965E7AFFF356EB230E12D7C9AF9F1CF250A5138FC385D6B4F15053F6FCDB9F52E22395341C51F125DD9E165D669079AC3919A4793C4DED90A00C512510E204C7973ADC659476AC157A79B45F87391BBADA6FA4A55C620F3CD765771ACA55020A36139973D5F9753C3AA0DBA33D9791E08B45C2904C865FE45C18D257719A0858663BB61EADC3FEF8498780291F885218A9C58292347E06BAEAB825D02BF9AAB6676E51749B11A323F1E1D85B55357A4480FE60320A3BF48A3EFAEEAB3201DAFD68CDA8CA071A7BFE30B6F9362238D2148716DB1EA4EB617F9D321CAE2838F5B17792D88F7730EEE71F5B0D7EB5FE4326B64AD7762B5F3E2A4D48A753CE39D86A61A2912569572A835736B722D8C295BF040AA3CBDE3BC84628F130960E46EDB1A68DE68B96556B6AB8962FEFDF096E772E4ECC62E302728C3DCEF59FC4FC593BD6B227C0E8E3178FA75571A32FC176D7BFBB1025D047762A5C2106A2125F2E8AFC0CE2793590DD11CABC3D20411DD2EB1B7165251F511D54122D21F564CF2B9DB82FB158BAC4BA44BC043983BB3913E8200B7E88BEFF348BB4414490054733A00DFA991B8E60A4B1990BE60AE6FE35EB7F1E73E5FFCE6DEFF727D20038F5A9BE43A1AB7A8B35B5F581CED93743FC56E4B941DCE132696EE0BDC13135E46559485D84E79CBCF126A6EBBB46FA336488BA21431DC1893DB193423EBF8EB3CB9D42593318D6D75DDCB249F60DC1542CF0B8B90A8F5B4423BF8D983D071D7A99

5FCBBD69DC6B70CD902C520B3B1FA96C876E888AB1E2EB820FEA7FCCA8542A48401AD6D524A8F73EE1DCA38048B9635C761C116432E59933DC84F4E92981A225C634BB9B61FAE56DD7AAEE85E4253C83FEB449E9E1EB9690784CA21AABAB2DE8D94715FBC152F200BDFF98C744E6B796F2EFD6ECB41C68DA057EDBFCEB32FF332DFDE96382BE764E74E9D0575A42ED66CD67716B55589BD7E654CCA40C6E3CE6DA5C77E462EE9BE2EADE3E140EB64455BD68380ED65B5D6F107539C949A5CD7FC420DF7386D92401634EFAC7F4FA3C17315AFF184BA995680333EDD1B2C618DA1E026D48C8BF896456B294070AE92DEE2A640D769693438453CF598C65FB48AAC77E7EEDFB34D38E62E354471EA7995B4E9EEBB26A935B5D0369B7F383B4A741FFD4AD4E15B01749B008D72E10DE77819CC346768ED698173873A960A1E2F71CF24ECCB3A9337577943D14C38283FB09F3C9E7C0920EF9AF92CDED744FB74CCC9A3AA5D45DAD58B945B375A9B0CC29722A3E05F5D300C9C57E478DA4FBB8A3FD441271D61519AC37669F98301245B5999492680D225F0A8BBA129966B3B529854A0438CEC515FAD2CBF4DFE85317734928787C1BEAF545A3E5E8BEE949D551D8E7B6AA71D63FB00D72E23BF03DA5F913EE43DAD2B56139DCA43331CD57553B09A6DDFF7809B86015A2C39958B007CDCBE09BC716CEAD8A28E883F3E7C7408EEC8B892775F4B1BA9756E0510560409E24E0E1D276BD2CA1BC4E2E206CA633D83B6AB5CF5E1C087C09071F1AC9FC6AABC28088BC2D37F5FF619AA5D9F9BEB2DEB48D75771AFB505009CAE3BF12AE40995361A16D6EB6D92E49C43D6887590BD93683E8A3502795CCBEF70315C45289B626899584253B1268E1267A897F56B256D64F92428132C6686244462A58F82B5DA1643553BDA2B05B77A44830AB81ED47CA079C00F235B4CFF9CB1DFA2A0D28EDDE1668F3C60D04D174984E9DADC127B7F00147BB1834158CDDE9AF27AF4A0AA858C59CD426E9780C3E8C5CAFC6A58C015E5808C1E521CBB5CE47351520DC4EAB6DA05FC19BE9F1C1D953317B338A628A1C7C1737FDF91E68903DCA625F67F189B6A98E7294258CBDD5D55F5B2C10E085444727EB0520DCFB7A3FEB17B2189896967B4401D7C5B7446288816D24B5A47CE0DAB507553CA84FB5CD8FA02A4D11C150DF5CF37061D899D5707A2E509AD4E630B29652E70B77D0CC18DD21D37279E8DEC1DD257100BA638F39C35567F7149AE2C3CBCF25C8952ABCDF3180117459046F9557CCB1DA2138E76CBD7B14FA6B30560A887E452448757BF441C631E42DD99237CD1AFCB135BD77080BF4E2276B1C55E46145753B38EE93FA5538158C4EAA3A9876D60825C752086CA321F4931635B1C49BBBE4E82103A0874D468ED9C2D7043293302E82C8B944FCA68CDB42594B44
BF73501483C75BEDB6789F638309D2FDCAAB556EDDD356F0758A0CA31B5E3693797D1DAB6AEDE70B29637D00BA7860157637DC1852FE048CB5A2CD6077A34B85875E466BB2C2F4A609141A1F9A344799C826F8A6B38B1EA6472BF1026C085133C23EC54D12D468E166C8EB97A0F7F5F55117024D3D2C61ACBF255B4FB31369D60168BDA74E64B97EC083C12B2297E87CB98FB55AA47CA62CEEE234341910A156D25B8C1E6B08E0C8F484D27ECB5CCB30839A48E90D9E220CB169226B1119964541C95380B38C6FC947C5365ED5CE92038F5C167616807D4091C69601070573E3B35765AD52C7066F40483610BD8FBE7BB826AF68B574CA211423FE55ACE3C7B96CF18E62AC5429085F2D60825A09E5486ECF8FD851E38EA1C13E9CCC89547643E35D7835B7078D3F96DEFC63F818FB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /O put
dup 34 /b put
dup 35 /j put
dup 36 /I put
dup 37 /D put
dup 38 /S put
dup 39 /e put
dup 40 /g put
dup 41 /c put
dup 42 /o put
dup 43 /n put
dup 44 /s put
dup 45 /i put
dup 46 /t put
dup 47 /space put
dup 48 /f put
dup 49 /one put
dup 50 /N put
dup 51 /ellipsis put
dup 52 /A put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 21 dict dup begin
/.notdef 0 def
/space 1 def
/one 2 def
/A 3 def
/D 4 def
/I 5 def
/N 6 def
/O 7 def
/S 8 def
/b 9 def
/c 10 def
/e 11 def
/f 12 def
/g 13 def
/i 14 def
/j 15 def
/n 16 def
/o 17 def
/s 18 def
/t 19 def
/ellipsis 20 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4124212 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E3232AAAE39DD432AA1E5356738508FDA4147F2F61700BB68D9A15C4FEE98E02037088963F15F1CC0A97A7ABC5DCCA0069358557B49BDFB2A1C81D57A335156370D5142AA0DC9861A2472ABF35CC3895F4BB1AE6F51904CD551E91EEBCFD5F3F904F19026660F90AED95A43EF0A1D5B3FDB30F86BECF8A155605D77C58F11F4106BA39D6647452F65FC814210100F0EE4489D0A27377B9979448574C58AF948DB9FEFA6CA282DB92DE2BE6FA8BBEB2D27DE6B36285029F4A2EA50A236478D01C0A11983D09490923CE9BD1DB3CF1E2706CBA42D4590E99BDB2E8F766B76223E2D532C82E6F9AEDD12EE7C66A6C8964A55586D0F69873F9600A6109844DDB7E638EE28968604227F6BF6E5BC9835F9C75677392F80B9405EC5C4E08855D54D7948522BE38653EEF195D90A71DD426CB93C82809625F10FA85C90FAD91563F961A1B1D90196816D2D971ABA1D07555FE105720E0D1BB25F9A974E8070B57430E10E554CC8914C89DCF8F5220C658BB60FB3DFFF06500AB8D96CDEF067C26C5E43D8F66C6310A66B12A8228AEE3FA5C808C79C6ECEE9495FD93D31EB97D50F06F6151F6738479165C90B7FBF76630B462C1F64BCA84D7AC86EE49510DB2A64A60B71CAFF7091F9B86F53A287B42AC8235EAB513F0AB4926FA470CB4A36D72A1F5E8811E3F666D92140A8DBBA78FCE30A149248743D5F0BD69B3DD4AE93BCC83819F70EF8E3E2327C967B410790F9B69DBD033A75EC04D6D9583DFCB74EC3F5CCAE2399533
2849447F95894291430D6BBEAB4599CD04B71F265D48BB72D5817CCC95D3FDFF38E637262E944EAC995B88E7C89E5123ADFBDCC293E9C3CE9E06D15650DF13088AFD60487FB83B98ECA62A4E71717D5E57E519E788B9C702E6A7195F9C344D26F2895690E1948AD45C79D7C1F2F659C9E643CC0257D9B15DD9F8287DEAC03A8E2B38F36EB9F3B569950597ABBEF9081A794B487AC37CF66D033BC09C464B7D4E1060C45AEA94E195A556E4084D586DE19EFB619606AC7B536CE61FA35DF3A97CC18BAC8A85146141B9F657898DB8B1362F872BC87641550CEAEEE838CABE74B448199527F2461C3172ACB609991AF19CFA38957DDCA4681EF367A7C377ADAED6F5B219DCCFB46CBBE23E0EC1A6D517D07720A0B23D5E3E3DEF2D932ECB74F75367FAAE63E39378A8730613ACC4105FF6DB6F72E06F0CC88F5C20C5D0A71AA8DFE62C54B08D086D65E4572C27EDD73DF6B41088B798C3B094EFC20E04FE33E119BC8C79CE0E9CBF187F69A23E963096BE546627BEE75AE67027504D7D24302A6C9965B61A1D3F17B735C49F84D64141521136BE34405BB22CF4514457CA630453D13DA63AF96A97A3D40DFCF8A1E38BA83112A77D8F09D938013B0A92D53CC9DC98E54CB52604E732C92EB5B7AF2598A9C16779FB99E05986E514084117A03EEAE3A42C6047991AC343234927233F061909902B59BACD719BC0A87156159AAF48C872BA928BCD711D0E89242FC0E1EC4A14B1B71CD58BCD65578B68B7465B4563479389EBD8A45FA6CB0B7960A178C81F086E550644E87B0E3EA29376C3A737C3579F4DF14453AB8ABC04BDE44E3953E50AE645B35BA5B87ADD4559A8CC75157C24A8B460B632EB94FCEEFDCC1B247488B0214A9B9726E3DEB702A3C7C5986491A5AEE7627A4F89D6C251B406058D905704EF37490F5AE5BF10B55817FACC7CC213D407FB9358CA1CCF62503635F9A9BECC425C6C0DEE11A280ADC71EF931B918BEA173E00DD72AB98EF4A890EB37005134FCDFCC8BB4567716A92098F27DF79C4C6C3B816E107109E3EAEBEC3D273D51F5EE03FAF7C39CE004F641D83A53E3FC45DD7D192037AF568C252B35316469A2F2D70C5950E5609B4810F6E58930BD090867A54D519CA20167D16E355B48E8CD4470B682A5496AFD9BA9114FFE3B3AFE604C84E26433105BC004343438CCC69CD7D57747E3364CF38F0C1183DA79F9566C1E2F0667E28CAF49CDF76B83CFD26075568D49D9BA7A08A536C226E0792A5E39C5DDA1AB8660F748DF10D3242AB837A2230375FFCE8489AF171D167423BEA1D922B98633CF1AF23C6AABA6E90A3ED4DB85F0EA62FCF9682F2904B1135EBEDEFCC1299445C6EEE4E55450C1197E9493BAA859FCB8729AA8480F124CBA4C45332CD6CDDF98B9B662AA477D9616A88FF5F7BC646F854882429E9112C5EC3922E8


0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.64705884 0.84313726 0.82352942 sc
q
0 0 859 328 rc
352.375 258.5 m
511.625 258.5 l
511.625 225 l
352.375 225 l
h
352.375 258.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
/F1.1[ 14 0 0 -14 0 0]sf
626.98602 725.05402 m
(!"#$%&'\(\)"*+)[ 12.194000 7.518000 8.302000 3.108000 7.518000 3.892000 10.640000 8.302000 3.108000 7.518000 7.518000 0.000000 ] xS
/Cs1 SC
0.86666667 0.52941179 0.60784316 sc
CM
366.4454 320.13593 m
377.18488 315.1864 377.18488 307.16168 366.4454 302.21216 c
355.70599 297.2626 338.29401 297.2626 327.5546 302.21216 c
316.81512 307.16168 316.81512 315.1864 327.5546 320.13593 c
338.29401 325.08548 355.70599 325.08548 366.4454 320.13593 c
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
/F2.1[ 12 0 0 -12 0 0]sf
567.78198 655.15192 m
(!"#$%)[ 9.336000 7.332000 3.336000 3.540000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
594.11365 662.61523 m
629.1875 703.5 l
S
669 646.5 m
669 703.5 l
S
0 i
0.86666667 0.52941179 0.60784316 sc
CM
536.44543 321.91205 m
547.18488 317.12814 547.18488 309.37186 536.44543 304.58795 c
525.70599 299.80402 508.29401 299.80402 497.5546 304.58795 c
486.81512 309.37186 486.81512 317.12814 497.5546 321.91205 c
508.29401 326.69598 525.70599 326.69598 536.44543 321.91205 c
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
/F1.1[ 12 0 0 -12 0 0]sf
741.664 652.58203 m
(,%+-)[ 7.776000 6.444000 3.780000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
744.5083 660.25031 m
708.8125 703.5 l
S
0 i
0.64705902 0.84313703 0.82352901 sc
CM
352.375 122 m
511.625 122 l
511.625 88.5 l
352.375 88.5 l
h
352.375 122 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
/F1.1[ 14 0 0 -14 0 0]sf
619.59399 861.55402 m
(!"#$%&."/0"1+)[ 12.194000 7.518000 8.302000 3.108000 7.518000 3.892000 9.072000 7.518000 8.036000 11.942000 7.518000 7.784000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
76.5 122 m
174 122 l
174 88.5 l
76.5 88.5 l
h
76.5 122 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
338.65302 861.55402 m
(2"%+34")[ 8.036000 7.518000 7.518000 4.410000 7.784000 4.410000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
693.5 122 m
852.75 122 l
852.75 88.5 l
693.5 88.5 l
h
693.5 122 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
952.29102 861.55402 m
(."/0"1+!"+%#%+%)[ 9.072000 7.518000 8.036000 11.942000 7.518000 7.784000 4.410000 12.194000 7.518000 4.410000 7.518000 8.302000 7.518000 4.410000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
693.5 258.5 m
840 258.5 l
840 225 l
693.5 225 l
h
693.5 258.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
953.30798 725.05402 m
('\(\)"*+!"+%#%+%)[ 10.640000 8.302000 3.108000 7.518000 7.518000 4.410000 12.194000 7.518000 4.410000 7.518000 8.302000 7.518000 4.410000 0.000000 ] xS
/Cs1 SC
0.86666697 0.52941197 0.60784298 sc
CM
369.34708 45.912048 m
381.55099 41.128128 381.55099 33.371872 369.34708 28.587952 c
357.14319 23.804008 337.35681 23.804008 325.15292 28.587952 c
312.94901 33.371872 312.94901 41.128128 325.15292 45.912048 c
337.35681 50.695992 357.14319 50.695992 369.34708 45.912048 c
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
/F2.1[ 12 0 0 -12 0 0]sf
567.03003 929.07593 m
(&'\($%)[ 7.788000 6.888000 7.332000 3.540000 0.000000 ] xS
/Cs1 SC
0.86666697 0.52941197 0.60784298 sc
CM
425.4454 21.412048 m
436.18488 16.62813 436.18488 8.87187 425.4454 4.0879517 c
414.70599 -0.69599199 397.29401 -0.69599199 386.5546 4.0879517 c
375.81512 8.87187 375.81512 16.62813 386.5546 21.412048 c
397.29401 26.195992 414.70599 26.195992 425.4454 21.412048 c
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
/F1.1[ 12 0 0 -12 0 0]sf
630.112 953.08203 m
(.+%4+)[ 7.776000 3.780000 6.444000 3.996000 0.000000 ] xS
/Cs1 SC
0.86666697 0.52941197 0.60784298 sc
CM
486.9454 21.412048 m
497.68488 16.62813 497.68488 8.87187 486.9454 4.0879517 c
476.20599 -0.69599199 458.79401 -0.69599199 448.0546 4.0879517 c
437.31512 8.87187 437.31512 16.62813 448.0546 21.412048 c
458.79401 26.195992 476.20599 26.195992 486.9454 21.412048 c
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
693.94 953.08203 m
(51#)[ 7.332000 6.672000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
629.1875 873.5 m
594.41016 913.1626 l
S
669 873.5 m
647.15662 937.13989 l
S
669 873.5 m
698.87958 937.25714 l
S
0 i
0.86666697 0.52941197 0.60784298 sc
CM
723.84705 316.91205 m
736.05103 312.12814 736.05103 304.37186 723.84705 299.58795 c
711.64319 294.80402 691.85681 294.80402 679.65295 299.58795 c
667.44897 304.37186 667.44897 312.12814 679.65295 316.91205 c
691.85681 321.69598 711.64319 321.69598 723.84705 316.91205 c
f
0 J
0 j
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
923.52197 659.5 m
938.60199 659.5 l
S
942.39331 659.5 m
952.97803 659.5 l
S
923.52197 657.58203 m
('\(\)67)[ 9.120000 7.116000 2.664000 3.108000 0.000000 ] xS
/Cs1 SC
0.86666697 0.52941197 0.60784298 sc
CM
850.94543 321.0585 m
861.68488 316.46985 861.68488 309.03015 850.94543 304.4415 c
840.20599 299.85281 822.79401 299.85281 812.05457 304.4415 c
801.31512 309.03015 801.31512 316.46985 812.05457 321.0585 c
822.79401 325.64719 840.20599 325.64719 850.94543 321.0585 c
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
1054.052 653.08203 m
(8%93")[ 6.672000 6.444000 2.664000 6.672000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
945.56934 665.70636 m
967.125 703.5 l
S
1003.75 646.5 m
1003.75 703.5 l
S
1062.5519 660.72339 m
1040.375 703.5 l
S
0 i
0.86666697 0.52941197 0.60784298 sc
CM
724.94543 46.912048 m
735.68488 42.128128 735.68488 34.371872 724.94543 29.587952 c
714.20599 24.804008 696.79401 24.804008 686.05457 29.587952 c
675.31512 34.371872 675.31512 42.128128 686.05457 46.912048 c
696.79401 51.695992 714.20599 51.695992 724.94543 46.912048 c
f
0 J
0 j
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
926.16803 929.5 m
940.28741 929.5 l
S
946.91394 929.5 m
957.83197 929.5 l
S
926.16803 927.58203 m
(."/67)[ 7.776000 6.444000 6.888000 3.108000 0.000000 ] xS
/Cs1 SC
0.86666697 0.52941197 0.60784298 sc
CM
792.57043 27.558495 m
803.30988 22.969839 803.30988 15.530162 792.57043 10.941504 c
781.83099 6.3528242 764.41901 6.3528242 753.67957 10.941504 c
742.94012 15.530162 742.94012 22.969839 753.67957 27.558495 c
764.41901 32.147175 781.83099 32.147175 792.57043 27.558495 c
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
999.901 946.58203 m
(:";)[ 8.004000 6.444000 0.000000 ] xS
/Cs1 SC
0.86666697 0.52941197 0.60784298 sc
CM
850.94543 46.058495 m
861.68488 41.469837 861.68488 34.030163 850.94543 29.441505 c
840.20599 24.852823 822.79401 24.852823 812.05457 29.441505 c
801.31512 34.030163 801.31512 41.469837 812.05457 46.058495 c
822.79401 50.647175 840.20599 50.647175 850.94543 46.058495 c
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
1054.052 928.08203 m
(8%93")[ 6.672000 6.444000 2.664000 6.672000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
949.08398 911.85443 m
970.3125 873.5 l
S
1010.125 931 m
1010.125 873.5 l
S
1064.2535 912.64014 m
1049.9375 873.5 l
S
0 i
0.86666697 0.52941197 0.60784298 sc
CM
101.94541 68.058495 m
112.68488 63.469837 112.68488 56.030163 101.94541 51.441505 c
91.206001 46.852825 73.793999 46.852825 63.054585 51.441505 c
52.315121 56.030163 52.315121 63.469837 63.054585 68.058495 c
73.793999 72.647179 91.206001 72.647179 101.94541 68.058495 c
f
0 J
0 j
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
303.168 908.5 m
317.73444 908.5 l
S
323.33246 908.5 m
334.832 908.5 l
S
303.168 906.08203 m
(."/67)[ 7.776000 6.444000 6.888000 3.108000 0.000000 ] xS
/Cs1 SC
0.86666697 0.52941197 0.60784298 sc
CM
185.46838 68.058495 m
198.8439 63.469837 198.8439 56.030163 185.46838 51.441505 c
172.09293 46.852825 150.40707 46.852825 137.03162 51.441505 c
123.65611 56.030163 123.65611 63.469837 137.03162 68.058495 c
150.40707 72.647179 172.09293 72.647179 185.46838 68.058495 c
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
378.02399 906.08203 m
(2"%+34")[ 6.888000 6.444000 6.444000 3.780000 6.672000 3.780000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
326.74576 890.91309 m
337.875 873.5 l
S
393.5437 890.61078 m
386.625 873.5 l
S
0 i
0.86666667 0.52941179 0.60784316 sc
CM
432 200.5 m
482.875 176.25 l
432 152 l
381.125 176.25 l
h
432 200.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
/F2.1[ 12 0 0 -12 0 0]sf
641.91351 789.59094 m
(\)*+,-,./*0)[ 6.888000 7.332000 7.116000 6.444000 3.096000 6.444000 4.224000 3.336000 7.332000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
669 737 m
669 761.5 l
S
669 840 m
669 810 l
S
0 i
0.86666697 0.52941197 0.60784298 sc
CM
602.5625 266 m
660.5625 241.75 l
602.5625 217.5 l
544.5625 241.75 l
h
602.5625 266 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
/F1.1[ 12 0 0 -12 0 0]sf
805.82648 723.59698 m
(#"<*4$\("#&\(;)[ 7.116000 6.444000 6.000000 6.444000 3.996000 2.664000 7.116000 6.444000 7.116000 3.336000 7.116000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
748.625 720.25 m
781.5625 720.25 l
S
930.5 720.25 m
897.5625 720.25 l
S
0 i
0.86666667 0.52941179 0.60784316 sc
CM
602.5625 129.5 m
660.5625 105.25 l
602.5625 81 l
544.5625 105.25 l
h
602.5625 129.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
805.82648 860.09698 m
(#"<*4$\("#&\(;)[ 7.116000 6.444000 6.000000 6.444000 3.996000 2.664000 7.116000 6.444000 7.116000 3.336000 7.116000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
930.5 856.75 m
897.5625 856.75 l
S
781.5625 856.75 m
748.625 856.75 l
S
0 i
0.86666697 0.52941197 0.60784298 sc
CM
545.94543 45.912048 m
556.68488 41.128128 556.68488 33.371872 545.94543 28.587952 c
535.20599 23.804008 517.79401 23.804008 507.0546 28.587952 c
496.31512 33.371872 496.31512 41.128128 507.0546 45.912048 c
517.79401 50.695992 535.20599 50.695992 545.94543 45.912048 c
f
0 J
0 j
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
748.27197 930.5 m
763.35199 930.5 l
S
767.14331 930.5 m
777.72803 930.5 l
S
748.27197 928.58203 m
('\(\)67)[ 9.120000 7.116000 2.664000 3.108000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
708.8125 873.5 m
751.69098 913.68329 l
S
0 i
0.86666697 0.52941197 0.60784298 sc
CM
261.4375 129.5 m
319.4375 105.25 l
261.4375 81 l
203.4375 105.25 l
h
261.4375 129.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
464.70151 860.09698 m
(#"<*4$\("#&\(;)[ 7.116000 6.444000 6.000000 6.444000 3.996000 2.664000 7.116000 6.444000 7.116000 3.336000 7.116000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
589.375 856.75 m
556.4375 856.75 l
S
440.4375 856.75 m
411 856.75 l
S
/Cs2 SC
0 sc
0 i
/F2.1[ 12 0 0 -12 0 0]sf
576.914 849.5 m
(1)s
414.89001 849.5 m
(2)s
756.20697 849.5 m
(1)s
915.13599 849.5 m
(2)s
676.5 754 m
(1)s
676.5 831.65192 m
(2)s
756.20697 713 m
(1)s
915.13599 713 m
(2)s
/Cs1 SC
1 1 1 sc
CM
164.98438 205.42404 m
186.98438 205.42404 l
186.98438 180.07596 l
164.98438 180.07596 l
h
164.98438 205.42404 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
406.98438 773.57593 m
(3)s
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
0.03125 209.5 m
70.53125 209.5 l
70.53125 176 l
0.03125 176 l
h
0.03125 209.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
/F1.1[ 14 0 0 -14 0 0]sf
242.84625 774.05402 m
(2"%+34"&=)[ 8.036000 7.518000 7.518000 4.410000 7.784000 4.410000 7.518000 3.892000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
89.46875 209.5 m
159.96875 209.5 l
159.96875 176 l
89.46875 176 l
h
89.46875 209.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
332.28375 774.05402 m
(2"%+34"&>)[ 8.036000 7.518000 7.518000 4.410000 7.784000 4.410000 7.518000 3.892000 0.000000 ] xS
/Cs1 SC
0.64705902 0.84313703 0.82352901 sc
CM
192 209.5 m
268.03125 209.5 l
268.03125 176 l
192 176 l
h
192 209.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
436.41864 774.05402 m
(2"%+34"&?)[ 8.036000 7.518000 7.518000 4.410000 7.784000 4.410000 7.518000 3.892000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0.49998799 0.5 0.5 sc
289.90625 786 m
289.90625 813 l
337.875 813 l
337.875 830.09998 l
S
0 J
0 j
0 i
337.875 838.09998 m
340.875 830.09998 l
334.875 830.09998 l
h
337.875 838.09998 m
S
1 J
1 j
0.60000002 i
361.71875 786 m
361.71875 796 l
361.98438 813 l
362.25 825.09998 l
362.25 830.09998 l
S
0 J
0 j
0 i
362.25 838.09998 m
365.25 830.09998 l
359.25 830.09998 l
h
362.25 838.09998 m
S
1 J
1 j
0.60000002 i
467.01562 786 m
467.01562 813 l
386.625 813 l
386.625 830.09998 l
S
0 J
0 j
0 i
386.625 838.09998 m
389.625 830.09998 l
383.625 830.09998 l
h
386.625 838.09998 m
S
1 1 1 sc
CM
55 161.67404 m
83.204002 161.67404 l
83.204002 136.32596 l
55 136.32596 l
h
55 161.67404 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
/F2.1[ 12 0 0 -12 0 0]sf
297 817.32593 m
($,4)[ 3.540000 6.444000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
110.61675 169 m
138.82076 169 l
138.82076 143.65192 l
110.61675 143.65192 l
h
110.61675 169 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
352.61676 810 m
($,4)[ 3.540000 6.444000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
168.23399 161.67404 m
196.438 161.67404 l
196.438 136.32596 l
168.23399 136.32596 l
h
168.23399 161.67404 m
f
/Cs2 SC
0 sc
1 0 0 -1 -237 962 cm
410.23401 817.32593 m
($,4)[ 3.540000 6.444000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
