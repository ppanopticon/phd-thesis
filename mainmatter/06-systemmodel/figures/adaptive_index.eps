%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 639.000000 333.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 11.4 (Build 20F71) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 639 333
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 639 333
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /M put
dup 34 /a put
dup 35 /i put
dup 36 /n put
dup 37 /space put
dup 38 /I put
dup 39 /d put
dup 40 /e put
dup 41 /x put
dup 42 /S put
dup 43 /h put
dup 44 /o put
dup 45 /w put
dup 46 /v put
dup 47 /parenleft put
dup 48 /period put
dup 49 /g put
dup 50 /V put
dup 51 /A put
dup 52 /comma put
dup 53 /P put
dup 54 /W put
dup 55 /L put
dup 56 /H put
dup 57 /parenright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 26 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/period 5 def
/A 6 def
/H 7 def
/I 8 def
/L 9 def
/M 10 def
/P 11 def
/S 12 def
/V 13 def
/W 14 def
/a 15 def
/d 16 def
/e 17 def
/g 18 def
/h 19 def
/i 20 def
/n 21 def
/o 22 def
/v 23 def
/w 24 def
/x 25 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4381012 def
currentdict end
currentfile eexec

7369DCDAB1E80469C9CEF90B6E13D757249E951296A5062075E37FB72BFDD00D72E9367D4079FCE27AF91D1170DAE49FC339C49614366FCA8BDF9C1BC4445BEAE86CDE40C2551A811FF257449960A875A03F1ED5BC7194F86F8C510E6B5681365DF737247848FDB1A766633E6E664B9D0DF689138BAE6D649F3794F22EE7AD1E89E89F2E5E36751A7C18D8B4FE72C601BDD6ED151A0D17BDA52D157DECD77AF121F9C061279ED5A88D26A853A8D28A9B3AFD8207A25DC4A7B05F6A55B7D4A9A66AAAFCBF7D75D118ADCF3232E89749B0DBB360CA1D5FD84D68003391AFC9554B1E5C6B5A2095195AB9CFB8F7D7663A22F565FD9C316AE1C67239A3577ADD882EA54CFB18373914BDA676B2A840CE8531E6DC4770E9DCDBCC03063DB5394FBC7599AF4197266C5FC116C07F5332F192FD8116BD54A72EABB3529A212169BE0FCF741F691373C04D50CA0259B3431ED08D5449D7AF6840B903A9AF42D07FB1A18DF05A97009C1D69EE452409C7B6B225B496313DD93B6E1658C15C5E5036C37C337CD1E8A41A79B5ABF617E3F7C3FC201A1CBC7753BEC5E2A3B131E7A270D389A65BBBDFB55DFFA54E3B7CDF9F93FA753C2C48B01E4A14AD798749DEF81469026DD159025C5DCDE4D4132DE488F9EC5CE8E3EDE49E05D4C06DEBECACB8FC7AF0EAF5607BA03749DA7B3A24B2F9D87E3E9EF094D07DABD792327D405DEDEDA4BDE19A0965F928090F021340AD37E6FAC4973BD620F16054F18718954B2CF6D9AC2B0784FE990743748EB8A6954430C837955E0A4C009E89DF56476A10343DB4ECEDF62641350C9D34571CF3E389AD336CDF044A34FFE9901783335D1AAC295CB36E82511240749966336D722CA2DB875ED6136108B9DCABF8413D8E98945811B75CB35FA3BF7E35DCB7B0BAE8873FE844339A43E2009759BB27F7730CD1C4BA3D752FC4BED4BFCBA4991707D399B3031A77AE78D02BFEC6F79AB0A44B7A4CAF3DF07073850ABE51E22E7E023A3C441A434B39CE2B41289D3A7F2563FD4713A55ED9C1F71F9308DFFE5ED4D2D21A5810055B8117A33FC50213A0365B7431CDA8B6AB59404B2CAE71A47B790735D0117F4BA31CB40DE5CB195E6D0F76E348B0EB2D290A04334154D01E8B1441CADDCEEC83C39A46958F80C0CE96131F334CE1F3E9A5C21C0F07D5CD670E07AAF2EABA39EE43173473AA242D3AC8E41FFEDB14B0E57821B0A1183C360CD964D27DD8290D5EBCADE84708EB977166F638CE3D904E0CE07629A6A67631E1AD895F5D0AC22A331AC99A93C20A94E7A7C9DC14A9398C802D11CF0110A3F96E15A5C9A0157F31A7A7DC5BBF7B5E70C0DA9EEACDD011BE39ADA1F66E54B7260236C9ACC458DB82CA4953140BB6B5005BBCB0E64D22BA6E63A5FB3D0409664617D501D4F2E81CE446984A25AB6FA121B91E2B03A95BEC917BF0
5EB52D84492E6A77659C7642C61E33866CDF9DE4488EC32ED6432437BD0F5DDFF2BDF75F3B7C5621B2D4C01EAFF9CF0D22136142AA33C4B9FD1C6A91305E6A059948EBBF07059484CD2AB98980C2BD508A459658E71041A56B1D98C6F19B697907A4553E38C45F92038C00BBA1736F8D4F9269B58A3E33FE433DAE3F159EECF858A26E9CC07BFAA20CF2AE166232B57B7008E37857B6A808946159225D59DB25FFF78DFE13ECA6BC6D45009F737806432B2D057E01E1B827107C85A047873122BA59A77BD8BA346E4F0C3F3173EE104668E5F5E1CC368630200BF84EA643D69FEF8A9C30D4B0C6A699EADF40752B91F7DB1AC07BAC8A9298B08179F05C30A9E360E685DDD29F7513C1DC52D65C77FF310C6BA88CE4446B89E7ED9E19F2A55276D092A04C9F1491A27EB08117BEA5F1CD9F337DF2179E9FBA51748452992036EE322FDDF35BE916B813D1DE7E3D57CFF38D78A00BC64F29B7D84E2F4BACBE07F6FB846220FCDAEB98C2A262BCE906A8770603F57420FCFA619CBA4845EE616E1E8BC6D8E576524511C2CA4F13A627F2D8B1CDF9C56BE2E52BD5B9BAC0C19071D5E9D1520ED9D1496F35D9914E4D480C2B81EF5F3CC09794E85DC15233013D707522F5512468068313F415787CFADDBEED00A7F414F6AF73738454701E8E9AFF3F85E6EAC09CBE7FBA324108F30691B186D080BD2E05986BE59D203307BE44A7D42AE168A2D3E48B227C06C9AF8DE814E1BA9F4ED079F84143546996C01B18ED172C0C8EB3E0F5E9959E5973D990A9A3A2AAFA758963F5EB419635A5B10768947836710124B540D8C0F667A9C44A5195C58762A1C71E231CB27B0CFD1CE954AC4971299427EB70E659A4424D092A52C3021DFFC71A9EFF7BF059369F951EB4B44BD6F551175A4A409260FE11171C983402B6C4E778FA69A92F1C5FA590D71E408C0D6AE18BD720A1354B76D5A23F2F98E66BA3E8573787919310846AB24B8208E1D9428B272B7B06AA3FE1DD46B597DF3FC871FC26598A3A1D8344D3DF9CD32C4955C457E5A10660C27D9BC28605409956A2FA9932A60588BF18C7ED176616CD077A1074CB7CC41C83B544187EE055C739763E9F6B0E1DD89F916F7378B7C30AFAAE65A5694485143DEF862EAB6867F4CE4C9AC45292C16CB872C443266394868ABB57169F1CA0D96EDE5E32DEA9E8698D11E66FD63C3844B8150273E3DDAD5FCE16C3E05920C09C12DF23CC4DB0A439B64E3D660F8E271F97DE87B1375355EEB51D86481821F622309910E16B951EE114E7FF0EBEEE1EEBE9AAEC3B8B49807EBE1B93BC935ABF5B4528550356E102C4C162C3738BF41F56D828EF6AC2DE0046A8A0CFD8953718933A7A408717ABCE4441FBE126ADDB97CF17965171A17AE954F45D32891D5A2F47A2E204CB92C475C9A9924EE4F4FA0D6B87029D6D08A63B60C0

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F1.1/HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /parenleft put
dup 34 /H put
dup 35 /o put
dup 36 /t put
dup 37 /parenright put
dup 38 /A put
dup 39 /V put
dup 40 /L put
dup 41 /C put
dup 42 /l put
dup 43 /d put
dup 44 /I put
dup 45 /n put
dup 46 /e put
dup 47 /x put
dup 48 /space put
dup 49 /S put
dup 50 /w put
dup 51 /a put
dup 52 /p put
dup 53 /W put
dup 54 /R put
dup 55 /T put
dup 56 /E put
dup 57 /hyphen put
dup 58 /c put
dup 59 /r put
dup 60 /colon put
dup 61 /g put
dup 62 /u put
dup 63 /i put
dup 64 /v put
dup 65 /h put
dup 66 /s put
dup 67 /N put
dup 68 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<



35343E0233321601EB5A0229475E37315D492C2741525552412720344120284C39235A2F516B3C31635033274152555241271B2D3A1E4A5F01F93B55381A19334F363141291913121D2E2527321D0C142A412D415F3D1E1733513935462E1B14111A2921232F1C0C45000000000100020000023D02CA00070027BA0003000000032BB800031000B800012FBA0006000700032BB8000610B8000710B80003D030311311331133352115F05FEEFDC5027AFD86027A50500000000100000000026502CA0007001900B800012FB800052FB800002FBA000400000001111239303121132303230323130167FE63CE02CC66FB02CAFD95026BFD360001000C0000039202CA000F003500B800012FB800052FB800092FB800002FB8000B2FBA000400000001111239BA000800000001111239BA000E0000000111123930312113230323032303230323133313331302D3BF5F91029E67A0028C61B763A502A302CAFDAE0252FDAE0252FD360258FDA800020024FFF5020A021100300042015CB800142BBB00380003000D00182BBB002A0003001700182BB8001710B80005D0B800052F4111000600380016003800260038003600380046003800560038006600380076003800085D4105008500380095003800025DB8003810B900200003F4B9001F0003F4B8001710B900300003F4B8001710B80031D0B800312FB8002A10B80044DC00B800014558B800252F1BB9002500083E59B800014558B800022F1BB9000200043E59B800014558B800082F1BB9000800043E59BA000500020025111239B8002510B9001C0002F441050089001C0099001C00025D41110008001C0018001C0028001C0038001C0048001C0058001C0068001C0078001C00085DB8002510B8001FDCB8000210B9002E0002F441110007002E0017002E0027002E0037002E0047002E0057002E0067002E0077002E00085D41050086002E0096002E00025DBA003000020025111239BA003100020025111239B8003DD030312506232226350E0123222E0235343E02373E0335342E0223220607233E0333321E0215111416333237270E0515141E0233323E0235020A16272127235D36233F2E1B1E313F21233F301C152129143648035502243C4D2C2345382207140B0F8A1034393A2E1D111B24142A3C2612020D252A2A25102237272C3823120607070D19181C2212062939304229120A1F382DFEF61E1C05C70C0B0709142520151D12081723291200000000010024FFF501FA021100230079BA001C000B00032BB8001C10411B0006001C0016001C0026001C0036001C0046001C0056001C0066001C0076001C0086001C0096001C00A6001C00B6001C00C6001C000D5D410500D5001C00E5001C00025D00BA0017001000032BB8001710BA0006002100032BB8000610B80000DCB80010




00>] def
/CharStrings 37 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/hyphen 4 def
/colon 5 def
/A 6 def
/C 7 def
/E 8 def
/H 9 def
/I 10 def
/L 11 def
/N 12 def
/R 13 def
/S 14 def
/T 15 def
/V 16 def
/W 17 def
/a 18 def
/c 19 def
/d 20 def
/e 21 def
/g 22 def
/h 23 def
/i 24 def
/l 25 def
/n 26 def
/o 27 def
/p 28 def
/r 29 def
/s 30 def
/t 31 def
/u 32 def
/v 33 def
/w 34 def
/x 35 def
/y 36 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4203806 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB280335E18F338643226D8B89C95387AC89B9912B8E22F450DD0DB97407F8FD30001F2FF0FFA7E32ED2F314FE9F4D282BB21989100873AB0CB14E650BC6C64501817D2A9B2C10C1222CF34B0C549B53FA5CDAE215F2577E57D81F4070291743462830AE215E09EFD6FFBEF0F0395E391E6695F8C92835E8071B857F406856F2E677810ED27AEDCBAEF5194B0B3FF0C856FDE018A3D20875363E7697D0E3C536B758EF7C87E0C66490EBF31A403CBE62C12FB81BCA74A1C43C08BC74B8882203B967BD5AB718FFE4AE6A1C8CB7CB291469D8CD5A98463EBE407E736D5FC86E81E08D9B703F71754AF68F457BFC02E714ECC9FB97379961298140B11400EBA20859B61A67795F057B3C32B1DA275AAD88C11ADE08EADC0F0CDF8368722ED4B542D3BC4B61B7AD1AA9B8F1DFC9B7885EB0AF0E37DAD57B6039BF83CEF2CEFA728A557469EF148486F6E5E182DFB7F9A5F5E8BE6E307B75FD53717BAAC651762C191337EE6BFB881DAD6B1F5747172202487944A779C1545C5CC543891198079DA1CFF556B733BBD90F9778C724A8A6906A7789A6BDCE3B48E969DBDC74123F9AD60D7D707AA318536CE6D0379FBFAC1A767BDE0C874DFE20BB39F8892EEF00DA0E4B736919A619C28A50BA0CFD716E86800B2EEC913607331D2C5F76321AA99807F750386736A94085911920735F03AF06BCA125246F502C97B0930B3D2021451CEAF011B4407AF5456477B74D798097DB2E19D15CB5C1BF3548B893B95DF926F6C64991CF2FB
CDF9A693A23573EBDACEA83D7D73477BD021DDF8E03A53D974DD2FF8F0BB24959C3138214E825DF9B86AF96B458CA56127B5573F3011E5C30FFABA1D3AB4B0E633ED86039F369E10BC3D46360E163D0B0A7D05C952A5C546E975BE469636581E05B595DB0AFE383E26F9F8E87205F77A1327E48E3CE3B9AFE8FACBF974074D065F6BC0EE1CC1B373544157A82AEC67FBF66544A64BDC37398E96523E5FDFB0E0578C154FC7DA1A9ADB2EA6DD9A398A47BF627795EF1D3E02F2D635871D8003B3500F756AC15FF4C00DEB28820849E01E2252DBD03492D9B44A380F809B9015050BF7AB32594BC80C8F742C8A9C5301EF326E2CDFE9672F2A1653FE74E7C2B38081F6E1FC41D615C6A691170E65EC798D8DBE73B13B28D0ABE3064F1C82B171EE62D4B7F4BF3BE3256D2D92FDF067A1431632DEF5C8AB0FCB054B20D9C40AA141655EFA466F65D359E866B044AA37CDFD61297B5D3F4D8D8134CF2FA86495C3CA8669EF839D45007BE3657A955E3E6A6F6E48B72418DE5EE9F614D80B9F8CF9AC245A63B6B5302CA3307612105234E95029EF03BE9554DA5F0B0930ABEA53567294E341B3F149DE8C809EC8F7BA14552A956311E4BDDFDDB387F0BBFC293E7298F8E2DC418633116C9CB536FE1AC50C716003C6B14C7F6C3B17F52CA1AB76A8FCB2E6271C0F7F77026E120B4B9F93022345EED3EB60F882DB9546CF365832D9832C327D6D5A9977B9C355052783C38875B1054B6D8CEABB80BE8CE96FA0A5FED326A042545F5274E8F6C649CF3F1E633E3CC485B169C754C85E47BA88F25283A2573D88602EA4D51B57D7055E479AB530A0230BC50B5BC7D990BC549E88DE0D77EDBFCC8E8C92A0621B698179000EAC5477D9BCBA880547D3EA59AE97084E21E24EE8B15CC37F47B280EC74A849D586F7A3D5747611B0774CDA29FB100F92C3F3667135063BCA7053E91AF32D67BF59CC009329AC402CEDD7C68CF10F3DBF59116B98A1BC3F6AC34AA81EE1C76E10CFDF63D8BDC448ADE9806E9DDFBEF9D33A3B2FA13195B814CEA10C085F9738930AD7FF28A58B1B1EEB3C4DFA3A97A91227C38191D251CC85AC6CE9E5EF250DA27248612A2FCC2BB753192E699FFA5793CC76844F33AE9EDB215E0C651B86427058EE84A15F19B8BE057DA2546815670B53C6857AF0D1540D2F220CF1CCB4A6614EFF161A35CA56AF788B0E42574FBF930549446BBB4CE44539301F92CA46962FA56530C2914280934939C8371F0FC57F9DB1122437D9322CE633E07A64D712698CD9A59F664C9DCB03C28975933D613616FE576A580BBCF8A48335E59E52BB2FCD44C4BBF4C2107CAE9464F3CF53552F00536146965013014643E8217F78D03015146E5AE29E98C3B1A73955FDA19AB8625958EA0606BF55AC92A6BD909F286426E8C40BBC6A48DAAEC8F104F45F29BE88E5
BD30DFF5FA28DF58D6842D34F7295C067D6CFFC40F629961C9CC209C70F962418B4BFC546384B4329B4B6D87B5BC1A055C72ECC33ED204C996E8C93FB70EE49EB9F2F80B42F479858B9A0C7AFAAC88833E517542C35E7DA447ED0E38D24F0A492826A38EFF0550FB653C63FA870A0C9C7781CA4FC54C2590A8178D2BFA199122836120B5A5BDEBDFF504440953894F1CE092F23D21EFE8D6FC90BB346CC4285921361ECCC879278430F762AC808DC353BA656EFE6262F85D74A0BC21BC3D1CBDC4A0E88BE98C2CF435EC90B54CD38E2EF4B91463ACE8966C0DE4E64E5D5F2E17E2697F38790559295545D31AE564C3CB266A96C4432BEFE9D95EF8839975068AC6C45DFE39D7236BB042C5FC16E342E19BB803523EA3AA06B96542492AA6AC6B4F8BC938E3DA064A2E31EF83816FABB9234283731A746BC9846EA1BAF503F466131BBFD6912666C04841643C95F9392FA359E032F1B690B84EDEEBE5E1762872BEEA53F3B9FFFD9D2B047FA002E264CDA235361D7B544A054435110A76C97C726793582838C0B2BB527DB222C2C0216F84AEADEEB3F137FA666733CB0A6B4971DC9C92A35B3B6420B282A27C4C0A0C27D3CF5CAC2C15A8C9F845AD8C3444E2E129D6AF2899D2FEEE17EBAA96D49BAF3B372DEA9D2D788F86D34FC955E787150E894FAEBEDACBD89DA57788FC34A340FF7E37D11E6B59BBB6ED1457467251F3D05EFAA642EBC075C7B1049EDBB400ADDFB254D131CD2AB47ABCDE46F1B1F628FD4B1D44C9239B996EF58715A054066AE5186F273C4DD94676E7030DFD9281786EF85C5428A2F40179D98019DFDC78D5AF10E03BDFDAF357B1F3F5EF304E6FD78BC4497C5C5B396D4797098D01675DD7962D3223DFA9FA2AF725E838B9DA842A72BF7FED743AC52CDBA8F5E54228C7E2D6428C8899C11DF4E71D3B4FAF3456C1A44198D690CEBC2FF1B9769BC3D159BE91D5AFD562B7A30534EFDC7C19247731C30B1ADC712FEC78137C7FFA1DFE09E797FFD09127ECD5D35FE747CC6BD7E5D8EEC6C331E465064FF0265EF69F378FCBE20DEC75FE9CF67B212D1115DBC460B14B52C941A8C3B78D39DEDA70950C9E6ECB7A93C476C34534F4185A6567AD01CBEE0E2BAB58936E27DEF3DF913E4F3188E859D890D58CC348462BC5046FB0F0E2C4B3207E4119740AC17EBEEC0DFCE2F2B3E2FB20DDA499A6CA320E3D4AB9F9B7B63E04334452E0B0E2DAA34CF28440B1D81541F197E9FB9B9EAA1FBA2ACD623AF8F4E273CD0AEE87E516D7279C184A457E4E5362AA11A73CB67AC0ABB5F93314B2E78B1157FA5E4D5E0049C005F2075FA1E6C3CD7B51F4B69684E4E6F11B4C028AAD26291CC9EFA125F0D44399F1338A14829CAE9F99CFE2231C97F3B43B54C5E4DA58F9BEB0DD02A8F30C8FF3C55BBD1FFC28AA63609FD73D377D5AE0C55A29BA


96A6798EEDFA6C8F6F140A1CE53687C53F9FC6F6F6E7D4CF3D116B247FAEAB21E5A8AE9DF9C2B6321EC00318D7B729B457272833F895CD0162A9C9DAFEB87853E9D0C78B633B59B16B900F244CA497B7CF03D79E77B42ED90BBA7B163EC8ADC9A37E3967BB19721595A55784ADF8F9E60F2A6DAF4C57BCB0B6C541CCA83DDDE11311CE700F3D94B888C80A12C56B21D1EFCFFAB9536F587AFA8ADD16F39FC7D8D8139E9F0168F82D0C3A1DE8459AFB3A54FC7AFA6974B6C55247F378B36840CB62FB2574064573BE4D8E93797FAF7576605D3507E86C3C3478B82D075E34E827B093428D30C82C03D6CB92AADA409465F364B521D46CD20C5DB18BE692BF7D6EE0F1E0DFC5E1AC00C211B00E2AB98575B4CB0DA17A87A00109E18A32A463344E77B3B5E45D34BA42D4932A404EE4729BACDA112A3E9E02DEAAAF2FEBB6C24E13C1E3A332602F21A53746CBD32CCEF96A4FE8CA7B2729FB2F3B808C6269587A7D5746A9D4CC3BAC89420553C3D0C81763CEC59C650708DC7540FB485C5277492EE684472BCB98BA48C7F7E973BED1EE21E45F8E80930854E2431E28CC1C930162A40567A506EDDCD64C82447119424386B1FAD3EA2AC2D977232F4E2A0B8C00522DC3DD74D9FDF7F20BDB911C1DE497AC1C9D0363DF3CAFFB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
[
8
5
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 639 333 rc
1 0 0 -1 -245 479 cm
324.63199 204.5 m
882.776 204.5 l
882.776 437.5 l
324.63199 437.5 l
h
324.63199 204.5 m
S
0 i
1 0.5 0.5 sc
CM
110.632 228 m
266.63199 228 l
266.63199 170.5 l
110.632 170.5 l
h
110.632 228 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -245 479 cm
355.63199 251 m
511.63199 251 l
511.63199 308.5 l
355.63199 308.5 l
h
355.63199 251 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
391.87201 276.79395 m
(!"#$%&$'\(\))[ 14.512000 9.184000 4.128000 9.488000 4.448000 4.720000 9.488000 9.776000 9.184000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
416.60001 295.25806 m
(!"#$%)[ 4.144000 11.552000 9.184000 5.040000 0.000000 ] xS
/Cs1 SC
0.75 1 0.75 sc
CM
242.5 241.5 m
303 241.5 l
303 221.5 l
242.5 221.5 l
h
242.5 241.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -245 479 cm
487.5 237.5 m
548 237.5 l
548 257.5 l
487.5 257.5 l
h
487.5 237.5 m
S
/Cs2 SC
0 sc
0 i
503.59799 253.276 m
(&'\()[ 9.632000 9.776000 0.000000 ] xS
/Cs1 SC
0.75 0.75 1 sc
CM
426.63199 228 m
582.63202 228 l
582.63202 170.5 l
426.63199 170.5 l
h
426.63199 228 m
f
[
1
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -245 479 cm
671.63202 251 m
827.63202 251 l
827.63202 308.5 l
671.63202 308.5 l
h
671.63202 251 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
695.71198 276.79395 m
(*+"',-%&$'\(\))[ 10.384000 9.488000 9.184000 9.776000 9.776000 13.024000 4.448000 4.720000 9.488000 9.776000 9.184000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
728.59998 295.25806 m
(!\)#*+%)[ 4.144000 11.552000 9.184000 3.552000 9.488000 0.000000 ] xS
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
439.78842 316.24704 m
457.97858 337.98923 514.8252 398 588.13202 398 c
661.76233 398 723.52191 337.45844 743.13055 315.96146 c
S
0 i
CM
503.38382 169.0675 m
495.86646 165.00679 l
500.39011 161.06514 l
h
503.38382 169.0675 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -245 479 cm
748.38379 309.9325 m
740.86646 313.99323 l
745.39014 317.93484 l
h
748.38379 309.9325 m
S
CM
189.81409 169.0125 m
192.44263 160.88287 l
197.14 164.61578 l
h
189.81409 169.0125 m
f
1 0 0 -1 -245 479 cm
434.81409 309.98749 m
437.44263 318.11713 l
442.14001 314.38422 l
h
434.81409 309.98749 m
S
/Cs3 SC
0 sc
545.5 423.5 m
620.51599 423.5 l
S
623.87598 423.5 m
629.93201 423.5 l
S
/Cs2 SC
0 sc
545.5 422 m
(,-+./01234)[ 4.144000 8.896000 9.488000 8.592000 8.288000 4.448000 10.368000 12.128000 8.592000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
433.63199 251 m
433.63199 251 442.30096 215.82462 466.13199 212 c
482.47397 209.3773 500.67615 222.34277 510.50259 230.75078 c
S
0 i
CM
271.35956 242.79486 m
267.54959 250.44235 l
263.46054 246.05148 l
h
271.35956 242.79486 m
f
0 J
0 j
1 0 0 -1 -245 479 cm
516.35956 236.20514 m
512.54956 228.55765 l
508.46054 232.94852 l
h
516.35956 236.20514 m
S
1 J
1 j
0.60000002 i
267 279.75 m
345.73199 279.75 l
S
0 i
CM
108.732 199.25 m
100.732 202.25 l
100.732 196.25 l
h
108.732 199.25 m
f
0 J
0 j
1 0 0 -1 -245 479 cm
353.73199 279.75 m
345.73199 276.75 l
345.73199 282.75 l
h
353.73199 279.75 m
S
/Cs2 SC
0 sc
250 265.03589 m
(56,780)[ 14.816000 10.960000 4.144000 9.184000 9.776000 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
303.328 265.03589 m
(.)s
324 192 m
(&$'\(\)%/\(010%234%564%7*89)[ 4.720000 9.488000 9.776000 9.184000 8.592000 4.448000 4.736000 9.184000 4.448000 9.776000 4.448000 4.448000 9.344000 10.960000 4.448000 4.448000 10.672000 13.920000 4.448000 4.448000 9.488000 10.384000 11.856000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
299.01199 249 m
309.74799 249 l
S
0 i
CM
69.748001 230 m
61.748001 233 l
64.748001 230 l
64.748001 230 l
61.748001 227 l
h
69.748001 230 m
f
0 J
0 j
1 0 0 -1 -245 479 cm
314.74799 249 m
306.74799 246 l
309.74799 249 l
309.74799 249 l
306.74799 252 l
h
314.74799 249 m
S
/Cs3 SC
0 sc
756 333.5 m
830.672 333.5 l
S
/Cs2 SC
0 sc
/F2.1[ 16 0 0 -16 0 0]sf
756 331.578 m
(6.9:;.3$.<)[ 10.960000 8.592000 6.224000 8.592000 5.040000 8.592000 8.592000 5.040000 8.592000 0.000000 ] xS
756 350.026 m
(906.=>*3;0?-$.;@3*)[ 6.224000 4.448000 10.960000 8.592000 9.184000 8.896000 3.552000 8.592000 5.328000 4.448000 3.552000 8.896000 5.040000 8.592000 5.328000 8.000000 8.592000 0.000000 ] xS
756 368.474 m
(907A;.BA#*+)[ 6.224000 4.448000 9.184000 8.896000 5.040000 8.592000 8.000000 8.896000 9.184000 3.552000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
433.63199 308.5 m
433.63199 468.10001 l
S
0 i
CM
188.632 2.9000001 m
191.632 10.9 l
185.632 10.9 l
h
188.632 2.9000001 m
f
0 J
0 j
1 0 0 -1 -245 479 cm
433.63199 476.10001 m
436.63199 468.10001 l
430.63199 468.10001 l
h
433.63199 476.10001 m
S
/Cs2 SC
0 sc
448 461.53589 m
(1\)&C)[ 10.368000 11.552000 10.368000 0.000000 ] xS
/Cs1 SC
1 1 0.75 sc
CM
242.5 221.5 m
303 221.5 l
303 201.5 l
242.5 201.5 l
h
242.5 221.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -245 479 cm
487.5 257.5 m
548 257.5 l
548 277.5 l
487.5 277.5 l
h
487.5 257.5 m
S
/Cs2 SC
0 sc
0 i
503.23001 273.276 m
(&8\()[ 10.368000 9.776000 0.000000 ] xS
/Cs1 SC
0.75 1 0.75 sc
CM
398.52802 328.00989 m
459.02802 328.00989 l
459.02802 308.00989 l
398.52802 308.00989 l
h
398.52802 328.00989 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -245 479 cm
643.52802 150.99011 m
704.02802 150.99011 l
704.02802 170.99011 l
643.52802 170.99011 l
h
643.52802 150.99011 m
S
/Cs2 SC
0 sc
0 i
659.62598 166.76611 m
(&'\()[ 9.632000 9.776000 0.000000 ] xS
714.52802 166.76611 m
(&>/?*?3;D0'.:$#;0\(?B$)[ 10.368000 8.896000 8.288000 3.552000 3.552000 3.552000 8.592000 5.328000 8.000000 4.448000 8.896000 8.592000 8.592000 5.040000 9.184000 5.328000 4.448000 8.896000 3.552000 8.000000 0.000000 ] xS
/Cs1 SC
1 1 0.75 sc
CM
398.52802 302.75989 m
459.02802 302.75989 l
459.02802 282.75989 l
398.52802 282.75989 l
h
398.52802 302.75989 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -245 479 cm
643.52802 176.24011 m
704.02802 176.24011 l
704.02802 196.24011 l
643.52802 196.24011 l
h
643.52802 176.24011 m
S
/Cs2 SC
0 sc
0 i
659.62598 192.01611 m
(&'\()[ 9.632000 9.776000 0.000000 ] xS
714.52802 192.01611 m
(&>/?*?3;D08/:*>B?#-0\(?B$)[ 10.368000 8.896000 8.288000 3.552000 3.552000 3.552000 8.592000 5.328000 8.000000 4.448000 9.776000 8.288000 8.592000 3.552000 8.896000 8.000000 3.552000 9.184000 8.896000 4.448000 8.896000 3.552000 8.000000 0.000000 ] xS
/Cs1 SC
0.75 1 0.75 sc
CM
562.82202 241.5 m
623.32202 241.5 l
623.32202 221.5 l
562.82202 221.5 l
h
562.82202 241.5 m
f
[
1
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -245 479 cm
807.82202 237.5 m
868.32202 237.5 l
868.32202 257.5 l
807.82202 257.5 l
h
807.82202 237.5 m
S
/Cs2 SC
0 sc
0 i
823.91998 253.276 m
(&'\()[ 9.632000 9.776000 0.000000 ] xS
/Cs1 SC
1 1 0.75 sc
CM
562.82202 221.5 m
623.32202 221.5 l
623.32202 201.5 l
562.82202 201.5 l
h
562.82202 221.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -245 479 cm
807.82202 257.5 m
868.32202 257.5 l
868.32202 277.5 l
807.82202 277.5 l
h
807.82202 257.5 m
S
/Cs2 SC
0 sc
0 i
823.552 273.276 m
(&8\()[ 10.368000 9.776000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
