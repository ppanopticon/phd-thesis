%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 625.000000 302.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 11.5.2 (Build 20G95) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 625 302
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 625 302
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /q put
dup 34 /p put
dup 35 /i put
dup 36 /M put
dup 37 /n put
dup 38 /k put
dup 39 /o put
dup 40 /w put
dup 41 /s put
dup 42 /space put
dup 43 /D put
dup 44 /t put
dup 45 /a put
dup 46 /c put
dup 47 /e put
dup 48 /H put
dup 49 /y put
dup 50 /r put
dup 51 /l put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000386670676D00000000000000D400000428676C796600000000000004FC00000CB46865616400000000000011B0000000366868656100000000000011E800000024686D7478000000000000120C000000506C6F6361000000000000125C0000002A6D6178700000000000001288000000207072657000000000000012A8000000FB14006D0085008D009C00000010004BFF0E0005020E00CA02110000140074006B0084008E007F009D00000011FF4A000D0205000E02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821




00>] def
/CharStrings 20 dict dup begin
/.notdef 0 def
/space 1 def
/D 2 def
/H 3 def
/M 4 def
/a 5 def
/c 6 def
/e 7 def
/i 8 def
/k 9 def
/l 10 def
/n 11 def
/o 12 def
/p 13 def
/q 14 def
/r 15 def
/s 16 def
/t 17 def
/w 18 def
/y 19 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4381012 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E2150EE8A95E8E056CF63C096EC954E9AB4D39A5004249114C46FB9FF7C7734211EE1807103F4422CDD13751C002541F569736ADA75A862401B7B2630080B9FD8CB015AE357B57A3559190BA63C1F29D386BABC17BC7530F3DA56EF230AA64C4EA0A1252D3AA71A133D00285AC061F7ECF69E99E4C565696E271062408EAAA883AAF70434E39D562CEECD2B375CBD87DEFF738D5156273C2F498F69EF89EF92780209DC8CB3B288B4A02BBA3685BB738BA31F2780AFF88DE7FB2CDF0525B33C8901162DDE5F01F2183A1C6E348ED1874A22E8C06A01E7D7153A3A87BFA225EC2EB3A752764A36DF6B28D98915C8CED9F949EB2E7E657A00FF260823E1F10A665B3ED40F78CD1CE31A358FB8E5426D0FCDACAC12AC9D0C1B6C841E5058A0C1B4B5A6C7354E4F88EE408BA784D4D1330ABDBCFBC8CD2F2E42EEC21AFEC830D4730CBC0FAE581E04BB1A903D9B9B6C26053194E1960C2E58AE35FA17DB2FD2596B4F5093D4AB966240E163104C60C334A4D3543F428E7B4999648189BD1CF1083E02D924A4874BB65771147A7B17DAA1493C3E7B079468F604F01C9D013376C1DB39B6E8A645835A2BF31E1A934F2C01E943418621765582669E97E2F52982D6A1EED97F353D6498F956E74FC40669E6A06CCB18CF457DDE5D98E5109267294173951F16D8C7E573DF910FAF939718775432512629ED7BECD57ECF6126255B06A78AB03F4A8D010A6C5F2A20297AE4D222975C7A3616729E0BEB5AEDDF4F877CBA9392092

16EA69C148A906AF392ADC7006BBA878330F7F1DD8E451AD8C2EC84829E74844C848448088FA9CFA93471A3263C7DA4837D0CF498E011C9C9BFAAB459ADD56425257FDC65FE3927A7B79A508812D951324BFD39C10D6B23D9064BFDB6C91A2555DBE5CDCE355E6E012A24A0B0E38E29FF9E26B3A05555394118CFF223A4F604E4E6D2669B308D1D9904E8C8B6D8E1C957289393867BA9DEE2CB59FF6881F7436D9336F47C5D7533ADC8E9D8DE6798DA08A3EFDF56B55B66EA25DA5C432AEAE210F5F576403AAFAF083F45CBFA76556A74FC73E1346C98178211978C38B6380C54BE09A6B91CFB7F03CF470C7FB0237CE73F9DBF136579A48265AFDDCBFF29BBDB38E17B22F4FD0093261C7D5767BF8AFBBB5751D27796FEF119F68B259EF6E3CD56227E8CE588528D3947F27E67D333D82C8B167938706A2F24FCC6AAEDE0D44E06BC06D71A0EA465E1CAD54E7C1501438CFB294CC0F2A52AD014DEA5743AC65C675EB8A222E6C5822E849B303515B586F89D9AEF7E5C79BBA45DE41421C6E9F4FC46CBB75989642EE64ED2E6A9A602F09E2095B41838F7587913D0E552A936588BB61125DCF4A71BBA246BF1CA2969ED3ACE21726822A08ED7105D5ABFEB007F315531A840160EA7E0F3A7F472B687AE60B258B1104E7A022D965EE2CD098BFD63517AF50EC1097132195C642B336D9D58A60DC57C5213D45AF0936D971C950EBC64EE6FC769256F7313FEC1DB621C4A775644CE8BC3F639570DAC2EBC1C12B47EC366DD646018DB549CC4AF36BDC5919CB7B39AA49D109567FF5FA191E5D5B1ACA118565B960F55C82632D26EAB36188D5C218EA67A99B31DD58DF28BFA7A3A1E638177EAD2C99EC93BBE3B834CEF02EAEFC920BFA4119E43767E9544837B69A45AC30AB365FD0D2AD025A23470D886EA77FB4557117A68FACF38E48516E8C4C90D17AA7AAA67DEFF730B10E33E64E674409D10A27DDA86427A7FA8CC38DB4A57D2E3DE9387893C7AAB7019F7A5173E4CBF5D34EEC4679102F7A8A9E4F240C0800A46C1371EC61E6D33874DB46617DFC3891C0DC29DBCCB6D9052412A9CC3B272133F1639119AAA9D040AD05475F8DB4D6E3599499439D020A7BBDA663B3757B2CACD34114B105F300340AAFB9D4B8DCB69E9AFC73412E8A9D02BEC687AFE76BBDFF433E5941488E3DC9D918232EB0CCD46845E1BB9F05935BACB4E53E7C8B33E1BA3E354D9C6037BFE4687CC05CC1F982D37B8CEFC3E4C4229A4E75124FB4365B3B8F1D6443B71741BB776E6E9F4818687C60F7D73B034031573981D55A0F7AD519473D692EE2822B2B4D06ABB2A7F3AA1B84762CD4EB7C47D3356D7B61362B047D97B2E0497C52E7F27DC8278B200451693B964E20765A75573A853C4E8A2C499454CA22C17F5C87B74F30550B73483C9A55A8D8E50F1B46ED7D8AB0A216
EDE6E023960FCDABDFDA5ED58678D46EC9A7BA9549C56D95318F7DCAADD30AEBD0C2329A9F63779247054F2BE19861B57F5356E2EA5B493FDBD77E176B98A9F0EE5C0BD35E244CBF0A2CC36F8928FF085ADD24F4825E654D519D767B1A73397DBFC030839B4747337FAB0746A4BBE5A3096D51530693C9A82EC8A6CA7148E757116FAB5896E6808C953F3E22C67A024C8C203EDE901735F0154AC21FF64B81A9A832AD0DC33BFB78089063D79FFA2B2651D9C2A9B73CCCAB0CD23D40033F29C3A1AF96C1E40E07AF2986D4FB123894E6CCAD0AC674597ECC7961542B1FCA4FB85BEEE36508AE5003DB0335265F9BC5076B48D6D30403FF35D8D76AB497532099A7254E3225869BE4D5A7BD5E3F8D6DBEEF6005098F9C5782D36CA5A7F9C95FB9A0C4F283754F00A4A16B18B6A6C5EEC465BE03784774EA0B4EBE92ED07B71EFDABFB66488BB37C568F51823C6DCB6901C47E908BB6345B1D8C3C3777D1F3B0CF666E23497EE3E4938F358233CDC1F96E2D7A0358CAE0DF982A10F3EA665228C97834F11330B4AE81C36D226F430344EBD7F9731CDC487012E6666AA800654E32F3FE3DB40C57832F488DEC7787FB602909C61D70943D8BB576E6A22954F60149C37A237F031392BDB281789AE98314FAF3FC63AA6E42404372BB2209D336609205904F4D9AE102A85A1AD048E75D4253608451374510
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F1.1/HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /uni03B4 put
dup 34 /parenleft put
dup 35 /comma put
dup 36 /m put
dup 37 /parenright put
dup 38 /plus put
dup 39 /b put
dup 40 /equal put
dup 41 /zero put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/parenleft 1 def
/parenright 2 def
/plus 3 def
/comma 4 def
/zero 5 def
/equal 6 def
/b 7 def
/m 8 def
/uni03B4 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4203806 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28290903B6EADCF584518CA93D87C86FA070AFB3EF631D5B88CD72734705C300BA293240E57484915FD75601CC0B97B98A749C856D8BD36C65587405E4FFB8320FE370E35C9DC5497FCE140A5B10DD225D00A8DEFCE75A054ADE5805AE0DDE02C0B587DAE28463067AEFCE96A47729373737A47CD6E8A26246415D0208CE502BD563E5574A1325503C95DBBAE136BF161039A61C1C8215FCDA1AF1B356FB15DCD185654C24DAC4F10D133453500E1C01B999430CCAFCAEF15E256736C347B8E72C7EE358D08A73A637F2E9A0DEDB396922D05D57A0F458B8AF01F3826C99DC79FD07CEAA0C79C06C7F9B510E213D009AF77B03B0E50AB2165CDFC60ADB82FF5B0D517D5B0B8C97EDF6C4C963D5506E6F300582483FD3C5845D7B47D26542D596B6656AAE47F6483D62F15A8296669B1C4C5EAC294948E35996F6AAC5FE21D8175DBA115CBD8712D456D4AEC5EBFD896765CABD93BD191B24117C843F3C5084F4DC698D2A422792BC6B997A49190D2243FAC095846D75404CA9F9CD85D2CCFDE4E14386202EC30922FF04AAD466B918AFC36AA2D259B2F6FFD69E6BB67922864315880D68EDAD7834E4E1A16B8F490AE188DE24B074E8FD2B0E6DEB54B9356A16C828907BB652BE5EA75CEC8288B80D6D06BAD59C36FC2A1071630BFA52F3090D23048DD66F34C4CBC14D9FA6BC87D04DE25EB7BB91ED81EC9C96C3BFB6E50B705EF7753A694536ADF6C0FC749AFE8139F22B5F5896FE7F5594C457DEB1EE11A0D90761A5E
131C3F2F2DC0A131DD239BBE9177AD8CB063FBFAD17B9032686449AA73F27DC2AE18921D262DF544AFC97962D87BDF09B62EAD548B9D240D5A1FE70B89AB694EEFAA1E94ED0F3FE1546EAA3F8E0A74636BA5013DF99FFA932147CD4198B4B95D7A66FFCF6DB6E790A5131DC5CD760F0F3F72505282A5A2F6F83DF069F1C55E35CA3B4AEBFC1870CDA731583C7FAE2961A3864CF507EEA71677F9E9A2D028502D654EDE797899C4709881CF7D99F8CAC609C47AAF6B923FA12F7B6CB7B94270B1866FFE927DED8579CAEDC75C288AFF622CA73E9556E6D636EB834A347F80031E61285E07F591FD3E58C9C0FE3E49B1C93E3537BB51CFC9E17A97E93E79D20D0B95B0447B82345A4025064CF505DD35114834D8ED64883014E87FA75EC99BAC5636C5C31BF97391F3BAC504CDE8CE7F437DEC38A46C208951346AFE0EFC549FE0FC59BA5B1E36F47A71AB2DEDEB366988E8A1988C4DCAA9AC09A4A5920D03C55522CD0CFBAB4E1D2B8A030DB24ECDA91DAF2515E250AD069D5273BD2418F23295D292AE2EC782E8E6B21E2CC1CB881C6870ED6B157D67E295C25011FECCBA7FAA8744F5CC51626D8DA5A57F1CB26979EC9579D8F1DDECEBC704F08AF0F3CA94131EAFF5EB24287039AA7986BE511CC104FCB0A1E60669450088F0FA45A03E3C04EC188E3C80BE223A71DE24F91ECF215A4DCEF37095A66FE8C7104FD2BA111589C1087765E96D2407B0A89C918C50AD27739004881B67C451D0FC54CD13F0E7526129B3784FDBB463BB90C64A2BCB34B2F1F98DF29C630B2E962C69E5C626B120440E5038664EA78AA6AFB5E964612A21C6C7E697503128EDA0FBD60B673C0E1ECE3605734BBC61E0354CDC9859F0A05CD7BFBDACC1AF4E6D8115761B24A5B7B96E85D342B98F26D1774223437A550155F6475BB8E5EC7A833B10452CE71A7BD483D5656458B7D56937446CC5575C8D971F5B2CAD97E850BAD6BFC58E9EAAF0DC6F96CA77CFDDF1DF1F326251A8588D7B4B247F3F436F77295EDD24763F6045A325BECF3409BC65673B4E27A0C7792700BF2B44D747D572189718718143ABB76C511AF58E6AE340DEF8EAF29998158B7CE68018A7F87CC49A343C0EE5F782B7C2AD0E69CC21DA65FE00EBA18C39649AFB85FB9A229E1BACFB92DBF4930E5B84E3D1E45D5BADD6B9525C3FF8650B2E2FFCF855FB9663E49CB8C9CC9C2DF8C20FF396919E4181ED0CC890B1710C08419B5E04BA80ECA8BE5760DF70AB77793EEC1F5DDCC5EA502D605F9B47BB8F052E0437B3B4F3CC43D450400591DA471E4B78728D68404FED3E30952A7B11B6D9D2F6094037B1995565DE68735E8F5E4BC9C741D246A0F02C528A8267B4DE8C9C50C22282C7277F5A4AEC44899C278F7B8891BEF24A71D5F5E02BF0F25D7F40C84FD2962ED426AECDCD2BB93A10A41C674E31BF
AB7BE880CB70541626EEA334803C86F7B2FDA31989C3FF563696B5C238FA4E3D8020133DA4E0C2916257F03D0E86EB4BE1497FA19EBD14520FA220005DC493580C746A713BC5E3368A225CBB51A3AE92E4936DCEDF5D343CCCABD8DFD7261E60A9BB56F03DDF2D2D0CEA99195C1746CC7A66814A726FB7847893E41187107FA1EED8009B44880B593C27E3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
%RBIBeginFontSubset: Helvetica-Bold
%!FontType1-1.0: Helvetica-Bold 1.0000.1.0000
14 dict begin
/FontName /Helvetica-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /T put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2084 1 index div -985 2 index div 2942 3 index div 2374 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 2 dict dup begin
/.notdef 0 def
/T 1 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-2084 -985 2942 2374} readonly def
/UniqueID 4478486 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281F2788D084443B32230D2F4B074310C9E819A208550D46E710FA6F76D931E101FBF8B843D4AE458EEAC0DB7E11CB66FB964F731C31601D95A21787E73C0ED90A17A6528F94DBD333559D68700823EEB3C829B85EB52DA2EB5BA55DCE3DA3CD82F0E457845813526D2DB78C650051100B1B75B98DB09897702345A322AD20D33D21D0FBC9049F54143E075B4FA653878204796BB79904B1AD6892C1D2EBE68DFA01894B84BBFD83F0C4C8CD157FC37D33BCEF757EDC9F33442642397BF6C4D29E6017FA1E5F05B676B4A3202CB1BD6742D986EC3A0B930D1E2497BA1257D8F7D049814C9E14ECBE16CC1A8D27BBD5D37D6208EEF1AC4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/Helvetica-Bold cguidfix
/F3.1/Helvetica-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
1.5 w
1 J
1 j
[
6
6
] 0 d
0.60000002 i
/Cs1 SC
0.69411767 0 0.10980392 sc
q
0 0 625 302 rc
1 0 0 -1 -688 887 cm
877.4718 684.72821 m
911.64282 718.89911 911.64282 774.30096 877.4718 808.4718 c
843.30096 842.64282 787.89911 842.64282 753.72821 808.4718 c
719.55719 774.30096 719.55719 718.89911 753.72821 684.72821 c
787.89911 650.55719 843.30096 650.55719 877.4718 684.72821 c
S
1 w
[] 0 d
0 0 0 sc
691.78595 882.5 m
691.78595 642.40002 l
S
0 i
CM
3.7859788 252.60001 m
0.78597885 244.60001 l
6.7859788 244.60001 l
h
3.7859788 252.60001 m
f
0 J
0 j
1 0 0 -1 -688 887 cm
691.78595 634.40002 m
688.78595 642.40002 l
694.78595 642.40002 l
h
691.78595 634.40002 m
S
1 J
1 j
0.60000002 i
691.78595 882.5 m
931.88599 882.5 l
S
0 i
CM
251.88599 4.5 m
243.88599 7.5 l
243.88599 1.5 l
h
251.88599 4.5 m
f
0 J
0 j
1 0 0 -1 -688 887 cm
939.88599 882.5 m
931.88599 879.5 l
931.88599 885.5 l
h
939.88599 882.5 m
S
0.80000001 0.80000001 0.80000001 sc
CM
21.621319 95.121315 m
22.792896 93.949745 22.792896 92.050255 21.621319 90.878685 c
20.449745 89.707108 18.550255 89.707108 17.378681 90.878685 c
16.207104 92.050255 16.207104 93.949745 17.378681 95.121315 c
18.550255 96.292892 20.449745 96.292892 21.621319 95.121315 c
f
1 0.75 0.75 sc
53.321327 145.12131 m
54.492908 143.94974 54.492908 142.05025 53.321327 140.87868 c
52.149757 139.70709 50.250263 139.70709 49.078693 140.87868 c
47.907116 142.05025 47.907116 143.94974 49.078693 145.12131 c
50.250263 146.29289 52.149757 146.29289 53.321327 145.12131 c
f
0.80000001 0.80000001 0.80000001 sc
105.12133 247.12131 m
106.29291 245.94974 106.29291 244.05025 105.12133 242.87868 c
103.94976 241.70709 102.05026 241.70709 100.87869 242.87868 c
99.707115 244.05025 99.707115 245.94974 100.87869 247.12131 c
102.05026 248.29289 103.94976 248.29289 105.12133 247.12131 c
f
180.62132 257.62131 m
181.79289 256.44974 181.79289 254.55025 180.62132 253.37868 c
179.44975 252.20711 177.55025 252.20711 176.37868 253.37868 c
175.20711 254.55025 175.20711 256.44974 176.37868 257.62131 c
177.55025 258.79291 179.44975 258.79291 180.62132 257.62131 c
f
1 0.75 0.75 sc
204.52133 102.9213 m
205.6929 101.74973 205.6929 99.850243 204.52133 98.678673 c
203.34976 97.507095 201.45027 97.507095 200.2787 98.678673 c
199.10712 99.850243 199.10712 101.74973 200.2787 102.9213 c
201.45027 104.09289 203.34976 104.09289 204.52133 102.9213 c
f
0.80000001 0.80000001 0.80000001 sc
53.321327 34.121319 m
54.492908 32.949745 54.492908 31.050255 53.321327 29.878681 c
52.149757 28.707104 50.250263 28.707104 49.078693 29.878681 c
47.907116 31.050255 47.907116 32.949745 49.078693 34.121319 c
50.250263 35.292896 52.149757 35.292896 53.321327 34.121319 c
f
245.92133 37.321304 m
247.09291 36.149734 247.09291 34.25024 245.92133 33.078671 c
244.74976 31.907091 242.85027 31.907091 241.6787 33.078671 c
240.50711 34.25024 240.50711 36.149734 241.6787 37.321304 c
242.85027 38.492882 244.74976 38.492882 245.92133 37.321304 c
f
1 0.25 0.25 sc
129.72133 142.5213 m
130.89291 141.34973 130.89291 139.45024 129.72133 138.27867 c
128.54976 137.10709 126.65027 137.10709 125.47869 138.27867 c
124.30711 139.45024 124.30711 141.34973 125.47869 142.5213 c
126.65027 143.69289 128.54976 143.69289 129.72133 142.5213 c
f
0.80000001 0.80000001 0.80000001 sc
15.621318 182.12132 m
16.792896 180.94975 16.792896 179.05025 15.621318 177.87868 c
14.449746 176.70711 12.550254 176.70711 11.378682 177.87868 c
10.207104 179.05025 10.207104 180.94975 11.378682 182.12132 c
12.550254 183.29289 14.449746 183.29289 15.621318 182.12132 c
f
170.41946 30.621319 m
171.59105 29.449745 171.59105 27.550255 170.41946 26.378681 c
169.24789 25.207104 167.3484 25.207104 166.17683 26.378681 c
165.00525 27.550255 165.00525 29.449745 166.17683 30.621319 c
167.3484 31.792896 169.24789 31.792896 170.41946 30.621319 c
f
0.69411999 0 0.1098 sc
1 0 0 -1 -688 887 cm
/F1.1[ 12 0 0 -12 0 0]sf
815.22198 760.60004 m
(!)s
1 0.75 0.75 sc
CM
105.12133 216.3213 m
106.29291 215.14973 106.29291 213.25024 105.12133 212.07867 c
103.94976 210.90709 102.05026 210.90709 100.87869 212.07867 c
99.707115 213.25024 99.707115 215.14973 100.87869 216.3213 c
102.05026 217.49289 103.94976 217.49289 105.12133 216.3213 c
f
176.12134 165.3213 m
177.29291 164.14973 177.29291 162.25024 176.12134 161.07867 c
174.94975 159.90709 173.05026 159.90709 171.87869 161.07867 c
170.70712 162.25024 170.70712 164.14973 171.87869 165.3213 c
173.05026 166.49289 174.94975 166.49289 176.12134 165.3213 c
f
0.80000001 0.80000001 0.80000001 sc
89.321327 58.021305 m
90.492905 56.849735 90.492905 54.950241 89.321327 53.778671 c
88.149757 52.607094 86.250267 52.607094 85.078697 53.778671 c
83.907112 54.950241 83.907112 56.849735 85.078697 58.021305 c
86.250267 59.192886 88.149757 59.192886 89.321327 58.021305 c
f
1 0.75 0.75 sc
107.12133 107.12131 m
108.29291 105.94974 108.29291 104.05024 107.12133 102.87867 c
105.94976 101.70709 104.05026 101.70709 102.87869 102.87867 c
101.70712 104.05024 101.70712 105.94974 102.87869 107.12131 c
104.05026 108.29288 105.94976 108.29288 107.12133 107.12131 c
f
0.80000001 0.80000001 0.80000001 sc
254.52133 159.3213 m
255.69292 158.14973 255.69292 156.25024 254.52133 155.07867 c
253.34976 153.90709 251.45027 153.90709 250.2787 155.07867 c
249.10712 156.25024 249.10712 158.14973 250.2787 159.3213 c
251.45027 160.49289 253.34976 160.49289 254.52133 159.3213 c
f
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 -688 887 cm
/F2.1[ 12 0 0 -12 0 0]sf
807.96802 712.4519 m
(!")[ 7.648000 0.000000 ] xS
/F1.1[ 12 0 0 -12 0 0]sf
819.724 712.4519 m
(")s
828.05603 718.4519 m
(#)s
/F2.1[ 12 0 0 -12 0 0]sf
832.15198 712.4519 m
(#)s
/F1.1[ 12 0 0 -12 0 0]sf
836.48798 712.4519 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
844.82001 712.4519 m
(#$%)[ 4.336000 11.236000 0.000000 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
795.07953 685.03864 m
812.46936 737.20807 l
S
0 J
0 j
[] 0 d
0 i
814.99921 744.79749 m
812.46936 737.20807 l
815.31543 736.25934 m
814.99921 744.79749 l
809.62329 738.15674 l
S
792.54974 677.44916 m
795.07953 685.03864 l
792.23352 685.9873 m
792.54974 677.44916 l
797.9256 684.08997 l
S
1 J
1 j
0.60000002 i
0 0 0 sc
1061.8 882.5 m
1061.8 642.40002 l
S
0 i
CM
373.79999 252.60001 m
370.79999 244.60001 l
376.79999 244.60001 l
h
373.79999 252.60001 m
f
0 J
0 j
1 0 0 -1 -688 887 cm
1061.8 634.40002 m
1058.8 642.40002 l
1064.8 642.40002 l
h
1061.8 634.40002 m
S
1 J
1 j
0.60000002 i
1061.8 882.5 m
1301.9 882.5 l
S
0 i
CM
621.90002 4.5 m
613.90002 7.5 l
613.90002 1.5 l
h
621.90002 4.5 m
f
0 J
0 j
1 0 0 -1 -688 887 cm
1309.9 882.5 m
1301.9 879.5 l
1301.9 885.5 l
h
1309.9 882.5 m
S
1 0.75 0.75 sc
CM
390.0213 93.521309 m
391.19287 92.349731 391.19287 90.450241 390.0213 89.278671 c
388.84973 88.107094 386.95026 88.107094 385.77866 89.278671 c
384.60709 90.450241 384.60709 92.349731 385.77866 93.521309 c
386.95026 94.692886 388.84973 94.692886 390.0213 93.521309 c
f
421.72131 143.5213 m
422.89288 142.34973 422.89288 140.45023 421.72131 139.27866 c
420.54974 138.10709 418.65024 138.10709 417.47867 139.27866 c
416.3071 140.45023 416.3071 142.34973 417.47867 143.5213 c
418.65024 144.69287 420.54974 144.69287 421.72131 143.5213 c
f
0.75 0.75 1 sc
473.52133 245.5213 m
474.6929 244.34973 474.6929 242.45023 473.52133 241.27866 c
472.34973 240.10709 470.45026 240.10709 469.27869 241.27866 c
468.10712 242.45023 468.10712 244.34973 469.27869 245.5213 c
470.45026 246.69287 472.34973 246.69287 473.52133 245.5213 c
f
549.0213 256.0213 m
550.19287 254.84973 550.19287 252.95024 549.0213 251.77867 c
547.84973 250.60709 545.95026 250.60709 544.77869 251.77867 c
543.60712 252.95024 543.60712 254.84973 544.77869 256.0213 c
545.95026 257.19287 547.84973 257.19287 549.0213 256.0213 c
f
572.92133 101.3213 m
574.0929 100.14973 574.0929 98.250229 572.92133 97.078659 c
571.74976 95.907082 569.85028 95.907082 568.67871 97.078659 c
567.50708 98.250229 567.50708 100.14973 568.67871 101.3213 c
569.85028 102.49287 571.74976 102.49287 572.92133 101.3213 c
f
1 0.75 0.75 sc
421.72131 32.521305 m
422.89288 31.349735 422.89288 29.450243 421.72131 28.278671 c
420.54974 27.107094 418.65024 27.107094 417.47867 28.278671 c
416.3071 29.450243 416.3071 31.349735 417.47867 32.521305 c
418.65024 33.692886 420.54974 33.692886 421.72131 32.521305 c
f
0.75 0.75 1 sc
614.32135 35.721294 m
615.49292 34.549721 615.49292 32.65023 614.32135 31.478659 c
613.14972 30.307081 611.25024 30.307081 610.07867 31.478659 c
608.9071 32.65023 608.9071 34.549721 610.07867 35.721294 c
611.25024 36.892872 613.14972 36.892872 614.32135 35.721294 c
f
1 0.75 0.75 sc
384.0213 180.5213 m
385.19287 179.34973 385.19287 177.45024 384.0213 176.27867 c
382.84973 175.10709 380.95026 175.10709 379.77866 176.27867 c
378.60709 177.45024 378.60709 179.34973 379.77866 180.5213 c
380.95026 181.69289 382.84973 181.69289 384.0213 180.5213 c
f
538.81946 29.021307 m
539.99103 27.849735 539.99103 25.950243 538.81946 24.778671 c
537.64789 23.607094 535.74841 23.607094 534.57684 24.778671 c
533.40521 25.950243 533.40521 27.849735 534.57684 29.021307 c
535.74841 30.192884 537.64789 30.192884 538.81946 29.021307 c
f
1 1 1 sc
503 72 m
509 72 l
509 55 l
503 55 l
h
f
0.82353002 0.019610001 0.21569 sc
1 0 0 -1 -688 887 cm
/F1.1[ 12 0 0 -12 0 0]sf
1182.5 829.10632 m
(!)s
/F3.1[ 9 0 0 -9 0 0]sf
1190.832 824.10632 m
(!)s
/F1.1[ 12 0 0 -12 0 0]sf
1197.3296 829.10632 m
(")s
/F2.1[ 12 0 0 -12 0 0]sf
1205.6615 829.10632 m
(&'\(\))[ 8.200000 8.116000 8.200000 0.000000 ] xS
0.75 0.75 1 sc
CM
473.52133 214.7213 m
474.6929 213.54973 474.6929 211.65024 473.52133 210.47867 c
472.34973 209.30708 470.45026 209.30708 469.27869 210.47867 c
468.10712 211.65024 468.10712 213.54973 469.27869 214.7213 c
470.45026 215.89287 472.34973 215.89287 473.52133 214.7213 c
f
544.5213 163.7213 m
545.69287 162.54973 545.69287 160.65024 544.5213 159.47865 c
543.34973 158.30708 541.45026 158.30708 540.27869 159.47865 c
539.10712 160.65024 539.10712 162.54973 540.27869 163.7213 c
541.45026 164.89287 543.34973 164.89287 544.5213 163.7213 c
f
1 0.75 0.75 sc
457.72131 56.421295 m
458.89288 55.249725 458.89288 53.350231 457.72131 52.178661 c
456.54974 51.00708 454.65027 51.00708 453.47867 52.178661 c
452.3071 53.350231 452.3071 55.249725 453.47867 56.421295 c
454.65027 57.592873 456.54974 57.592873 457.72131 56.421295 c
f
475.52133 105.52129 m
476.6929 104.34972 476.6929 102.45023 475.52133 101.27866 c
474.34973 100.10708 472.45026 100.10708 471.27869 101.27866 c
470.10712 102.45023 470.10712 104.34972 471.27869 105.52129 c
472.45026 106.69287 474.34973 106.69287 475.52133 105.52129 c
f
0.75 0.75 1 sc
622.92133 157.7213 m
624.0929 156.54973 624.0929 154.65024 622.92133 153.47865 c
621.74976 152.30708 619.85028 152.30708 618.67871 153.47865 c
617.50708 154.65024 617.50708 156.54973 618.67871 157.7213 c
619.85028 158.89287 621.74976 158.89287 622.92133 157.7213 c
f
1.5 w
1 J
1 j
[
6
6
] 0 d
0.60000002 i
0.69411767 0 0.10980392 sc
1 0 0 -1 -688 887 cm
1290.5579 861.5 m
1077.4421 648.38422 l
S
1 w
[
4
4
] 0 d
0.40000001 0.40000001 0.40000001 sc
1221.4514 734.69159 m
1200.0105 756.95435 l
S
0 J
0 j
[] 0 d
0 i
1194.4609 762.71655 m
1200.0105 756.95435 l
1202.1713 759.0354 m
1194.4609 762.71655 l
1197.8496 754.87329 l
S
1227.001 728.92938 m
1221.4514 734.69159 l
1219.2906 732.61053 m
1227.001 728.92938 l
1223.6123 736.77264 l
S
1226.6981 760.41809 m
(!")[ 7.648000 0.000000 ] xS
/F1.1[ 12 0 0 -12 0 0]sf
1238.4541 760.41809 m
(")s
1246.7861 766.41809 m
(#)s
/F2.1[ 12 0 0 -12 0 0]sf
1250.8821 760.41809 m
(#)s
/F1.1[ 12 0 0 -12 0 0]sf
1255.2181 760.41809 m
(!)s
/F2.1[ 12 0 0 -12 0 0]sf
1263.5502 760.41809 m
(#'%)[ 4.336000 8.116000 0.000000 ] xS
/Cs2 SC
0 sc
/F1.1[ 16 0 0 -16 0 0]sf
742.03204 606.75201 m
($#%&'\(\)&#*+#\),-%./)[ 14.512000 4.128000 9.488000 9.184000 9.776000 13.024000 8.592000 9.184000 4.128000 4.448000 11.856000 4.128000 8.592000 5.632000 9.184000 9.488000 9.184000 0.000000 ] xS
1104.6 606.75201 m
(01"/2"3-%/*+#\),-%./)[ 11.856000 8.304000 9.776000 9.184000 6.224000 9.776000 4.128000 9.184000 9.488000 9.184000 4.448000 11.856000 4.128000 8.592000 5.632000 9.184000 9.488000 9.184000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
